// DE2_115_SOPC_mm_interconnect_1.v

// This file was auto-generated from altera_merlin_interconnect_wrapper_hw.tcl.  If you edit it your changes
// will probably be lost.
// 
// Generated using ACDS version 13.1 182 at 2015.03.26.09:07:43

`timescale 1 ps / 1 ps
module DE2_115_SOPC_mm_interconnect_1 (
		input  wire        clk_50_clk_clk,                                         //                                       clk_50_clk.clk
		input  wire        pll_c2_clk,                                             //                                           pll_c2.clk
		input  wire        clock_crossing_io_m0_reset_reset_bridge_in_reset_reset, // clock_crossing_io_m0_reset_reset_bridge_in_reset.reset
		input  wire        pll_inclk_interface_reset_reset_bridge_in_reset_reset,  //  pll_inclk_interface_reset_reset_bridge_in_reset.reset
		input  wire [10:0] clock_crossing_io_m0_address,                           //                             clock_crossing_io_m0.address
		output wire        clock_crossing_io_m0_waitrequest,                       //                                                 .waitrequest
		input  wire [0:0]  clock_crossing_io_m0_burstcount,                        //                                                 .burstcount
		input  wire [3:0]  clock_crossing_io_m0_byteenable,                        //                                                 .byteenable
		input  wire        clock_crossing_io_m0_read,                              //                                                 .read
		output wire [31:0] clock_crossing_io_m0_readdata,                          //                                                 .readdata
		output wire        clock_crossing_io_m0_readdatavalid,                     //                                                 .readdatavalid
		input  wire        clock_crossing_io_m0_write,                             //                                                 .write
		input  wire [31:0] clock_crossing_io_m0_writedata,                         //                                                 .writedata
		input  wire        clock_crossing_io_m0_debugaccess,                       //                                                 .debugaccess
		output wire [1:0]  eep_i2c_scl_s1_address,                                 //                                   eep_i2c_scl_s1.address
		output wire        eep_i2c_scl_s1_write,                                   //                                                 .write
		input  wire [31:0] eep_i2c_scl_s1_readdata,                                //                                                 .readdata
		output wire [31:0] eep_i2c_scl_s1_writedata,                               //                                                 .writedata
		output wire        eep_i2c_scl_s1_chipselect,                              //                                                 .chipselect
		output wire [1:0]  eep_i2c_sda_s1_address,                                 //                                   eep_i2c_sda_s1.address
		output wire        eep_i2c_sda_s1_write,                                   //                                                 .write
		input  wire [31:0] eep_i2c_sda_s1_readdata,                                //                                                 .readdata
		output wire [31:0] eep_i2c_sda_s1_writedata,                               //                                                 .writedata
		output wire        eep_i2c_sda_s1_chipselect,                              //                                                 .chipselect
		output wire [1:0]  i2c_scl_s1_address,                                     //                                       i2c_scl_s1.address
		output wire        i2c_scl_s1_write,                                       //                                                 .write
		input  wire [31:0] i2c_scl_s1_readdata,                                    //                                                 .readdata
		output wire [31:0] i2c_scl_s1_writedata,                                   //                                                 .writedata
		output wire        i2c_scl_s1_chipselect,                                  //                                                 .chipselect
		output wire [1:0]  i2c_sda_s1_address,                                     //                                       i2c_sda_s1.address
		output wire        i2c_sda_s1_write,                                       //                                                 .write
		input  wire [31:0] i2c_sda_s1_readdata,                                    //                                                 .readdata
		output wire [31:0] i2c_sda_s1_writedata,                                   //                                                 .writedata
		output wire        i2c_sda_s1_chipselect,                                  //                                                 .chipselect
		output wire [1:0]  ir_s1_address,                                          //                                            ir_s1.address
		input  wire [31:0] ir_s1_readdata,                                         //                                                 .readdata
		output wire [0:0]  jtag_uart_avalon_jtag_slave_address,                    //                      jtag_uart_avalon_jtag_slave.address
		output wire        jtag_uart_avalon_jtag_slave_write,                      //                                                 .write
		output wire        jtag_uart_avalon_jtag_slave_read,                       //                                                 .read
		input  wire [31:0] jtag_uart_avalon_jtag_slave_readdata,                   //                                                 .readdata
		output wire [31:0] jtag_uart_avalon_jtag_slave_writedata,                  //                                                 .writedata
		input  wire        jtag_uart_avalon_jtag_slave_waitrequest,                //                                                 .waitrequest
		output wire        jtag_uart_avalon_jtag_slave_chipselect,                 //                                                 .chipselect
		output wire [1:0]  key_s1_address,                                         //                                           key_s1.address
		output wire        key_s1_write,                                           //                                                 .write
		input  wire [31:0] key_s1_readdata,                                        //                                                 .readdata
		output wire [31:0] key_s1_writedata,                                       //                                                 .writedata
		output wire        key_s1_chipselect,                                      //                                                 .chipselect
		output wire [1:0]  lcd_control_slave_address,                              //                                lcd_control_slave.address
		output wire        lcd_control_slave_write,                                //                                                 .write
		output wire        lcd_control_slave_read,                                 //                                                 .read
		input  wire [7:0]  lcd_control_slave_readdata,                             //                                                 .readdata
		output wire [7:0]  lcd_control_slave_writedata,                            //                                                 .writedata
		output wire        lcd_control_slave_begintransfer,                        //                                                 .begintransfer
		output wire [1:0]  ledg_s1_address,                                        //                                          ledg_s1.address
		output wire        ledg_s1_write,                                          //                                                 .write
		input  wire [31:0] ledg_s1_readdata,                                       //                                                 .readdata
		output wire [31:0] ledg_s1_writedata,                                      //                                                 .writedata
		output wire        ledg_s1_chipselect,                                     //                                                 .chipselect
		output wire [1:0]  ledr_s1_address,                                        //                                          ledr_s1.address
		output wire        ledr_s1_write,                                          //                                                 .write
		input  wire [31:0] ledr_s1_readdata,                                       //                                                 .readdata
		output wire [31:0] ledr_s1_writedata,                                      //                                                 .writedata
		output wire        ledr_s1_chipselect,                                     //                                                 .chipselect
		output wire [1:0]  pll_pll_slave_address,                                  //                                    pll_pll_slave.address
		output wire        pll_pll_slave_write,                                    //                                                 .write
		output wire        pll_pll_slave_read,                                     //                                                 .read
		input  wire [31:0] pll_pll_slave_readdata,                                 //                                                 .readdata
		output wire [31:0] pll_pll_slave_writedata,                                //                                                 .writedata
		output wire [2:0]  rs232_s1_address,                                       //                                         rs232_s1.address
		output wire        rs232_s1_write,                                         //                                                 .write
		output wire        rs232_s1_read,                                          //                                                 .read
		input  wire [15:0] rs232_s1_readdata,                                      //                                                 .readdata
		output wire [15:0] rs232_s1_writedata,                                     //                                                 .writedata
		output wire        rs232_s1_begintransfer,                                 //                                                 .begintransfer
		output wire        rs232_s1_chipselect,                                    //                                                 .chipselect
		output wire [1:0]  sd_clk_s1_address,                                      //                                        sd_clk_s1.address
		output wire        sd_clk_s1_write,                                        //                                                 .write
		input  wire [31:0] sd_clk_s1_readdata,                                     //                                                 .readdata
		output wire [31:0] sd_clk_s1_writedata,                                    //                                                 .writedata
		output wire        sd_clk_s1_chipselect,                                   //                                                 .chipselect
		output wire [1:0]  sd_cmd_s1_address,                                      //                                        sd_cmd_s1.address
		output wire        sd_cmd_s1_write,                                        //                                                 .write
		input  wire [31:0] sd_cmd_s1_readdata,                                     //                                                 .readdata
		output wire [31:0] sd_cmd_s1_writedata,                                    //                                                 .writedata
		output wire        sd_cmd_s1_chipselect,                                   //                                                 .chipselect
		output wire [1:0]  sd_dat_s1_address,                                      //                                        sd_dat_s1.address
		output wire        sd_dat_s1_write,                                        //                                                 .write
		input  wire [31:0] sd_dat_s1_readdata,                                     //                                                 .readdata
		output wire [31:0] sd_dat_s1_writedata,                                    //                                                 .writedata
		output wire        sd_dat_s1_chipselect,                                   //                                                 .chipselect
		output wire [1:0]  sd_wp_n_s1_address,                                     //                                       sd_wp_n_s1.address
		input  wire [31:0] sd_wp_n_s1_readdata,                                    //                                                 .readdata
		output wire [2:0]  seg7_avalon_slave_address,                              //                                seg7_avalon_slave.address
		output wire        seg7_avalon_slave_write,                                //                                                 .write
		output wire        seg7_avalon_slave_read,                                 //                                                 .read
		input  wire [7:0]  seg7_avalon_slave_readdata,                             //                                                 .readdata
		output wire [7:0]  seg7_avalon_slave_writedata,                            //                                                 .writedata
		output wire [1:0]  sw_s1_address,                                          //                                            sw_s1.address
		output wire        sw_s1_write,                                            //                                                 .write
		input  wire [31:0] sw_s1_readdata,                                         //                                                 .readdata
		output wire [31:0] sw_s1_writedata,                                        //                                                 .writedata
		output wire        sw_s1_chipselect,                                       //                                                 .chipselect
		output wire [2:0]  sys_clk_timer_s1_address,                               //                                 sys_clk_timer_s1.address
		output wire        sys_clk_timer_s1_write,                                 //                                                 .write
		input  wire [15:0] sys_clk_timer_s1_readdata,                              //                                                 .readdata
		output wire [15:0] sys_clk_timer_s1_writedata,                             //                                                 .writedata
		output wire        sys_clk_timer_s1_chipselect,                            //                                                 .chipselect
		output wire [0:0]  sysid_control_slave_address,                            //                              sysid_control_slave.address
		input  wire [31:0] sysid_control_slave_readdata,                           //                                                 .readdata
		output wire [2:0]  sysver_0_avalon_slave_0_address,                        //                          sysver_0_avalon_slave_0.address
		output wire        sysver_0_avalon_slave_0_write,                          //                                                 .write
		output wire        sysver_0_avalon_slave_0_read,                           //                                                 .read
		input  wire [31:0] sysver_0_avalon_slave_0_readdata,                       //                                                 .readdata
		output wire [31:0] sysver_0_avalon_slave_0_writedata,                      //                                                 .writedata
		output wire [3:0]  sysver_0_avalon_slave_0_byteenable,                     //                                                 .byteenable
		input  wire        sysver_0_avalon_slave_0_waitrequest,                    //                                                 .waitrequest
		output wire        sysver_0_avalon_slave_0_chipselect,                     //                                                 .chipselect
		output wire [2:0]  timer_0_s1_address,                                     //                                       timer_0_s1.address
		output wire        timer_0_s1_write,                                       //                                                 .write
		input  wire [15:0] timer_0_s1_readdata,                                    //                                                 .readdata
		output wire [15:0] timer_0_s1_writedata,                                   //                                                 .writedata
		output wire        timer_0_s1_chipselect,                                  //                                                 .chipselect
		output wire [2:0]  timer_1_s1_address,                                     //                                       timer_1_s1.address
		output wire        timer_1_s1_write,                                       //                                                 .write
		input  wire [15:0] timer_1_s1_readdata,                                    //                                                 .readdata
		output wire [15:0] timer_1_s1_writedata,                                   //                                                 .writedata
		output wire        timer_1_s1_chipselect,                                  //                                                 .chipselect
		output wire [2:0]  timer_10_s1_address,                                    //                                      timer_10_s1.address
		output wire        timer_10_s1_write,                                      //                                                 .write
		input  wire [15:0] timer_10_s1_readdata,                                   //                                                 .readdata
		output wire [15:0] timer_10_s1_writedata,                                  //                                                 .writedata
		output wire        timer_10_s1_chipselect,                                 //                                                 .chipselect
		output wire [2:0]  timer_11_s1_address,                                    //                                      timer_11_s1.address
		output wire        timer_11_s1_write,                                      //                                                 .write
		input  wire [15:0] timer_11_s1_readdata,                                   //                                                 .readdata
		output wire [15:0] timer_11_s1_writedata,                                  //                                                 .writedata
		output wire        timer_11_s1_chipselect,                                 //                                                 .chipselect
		output wire [2:0]  timer_12_s1_address,                                    //                                      timer_12_s1.address
		output wire        timer_12_s1_write,                                      //                                                 .write
		input  wire [15:0] timer_12_s1_readdata,                                   //                                                 .readdata
		output wire [15:0] timer_12_s1_writedata,                                  //                                                 .writedata
		output wire        timer_12_s1_chipselect,                                 //                                                 .chipselect
		output wire [2:0]  timer_13_s1_address,                                    //                                      timer_13_s1.address
		output wire        timer_13_s1_write,                                      //                                                 .write
		input  wire [15:0] timer_13_s1_readdata,                                   //                                                 .readdata
		output wire [15:0] timer_13_s1_writedata,                                  //                                                 .writedata
		output wire        timer_13_s1_chipselect,                                 //                                                 .chipselect
		output wire [2:0]  timer_14_s1_address,                                    //                                      timer_14_s1.address
		output wire        timer_14_s1_write,                                      //                                                 .write
		input  wire [15:0] timer_14_s1_readdata,                                   //                                                 .readdata
		output wire [15:0] timer_14_s1_writedata,                                  //                                                 .writedata
		output wire        timer_14_s1_chipselect,                                 //                                                 .chipselect
		output wire [2:0]  timer_15_s1_address,                                    //                                      timer_15_s1.address
		output wire        timer_15_s1_write,                                      //                                                 .write
		input  wire [15:0] timer_15_s1_readdata,                                   //                                                 .readdata
		output wire [15:0] timer_15_s1_writedata,                                  //                                                 .writedata
		output wire        timer_15_s1_chipselect,                                 //                                                 .chipselect
		output wire [2:0]  timer_2_s1_address,                                     //                                       timer_2_s1.address
		output wire        timer_2_s1_write,                                       //                                                 .write
		input  wire [15:0] timer_2_s1_readdata,                                    //                                                 .readdata
		output wire [15:0] timer_2_s1_writedata,                                   //                                                 .writedata
		output wire        timer_2_s1_chipselect,                                  //                                                 .chipselect
		output wire [2:0]  timer_3_s1_address,                                     //                                       timer_3_s1.address
		output wire        timer_3_s1_write,                                       //                                                 .write
		input  wire [15:0] timer_3_s1_readdata,                                    //                                                 .readdata
		output wire [15:0] timer_3_s1_writedata,                                   //                                                 .writedata
		output wire        timer_3_s1_chipselect,                                  //                                                 .chipselect
		output wire [2:0]  timer_4_s1_address,                                     //                                       timer_4_s1.address
		output wire        timer_4_s1_write,                                       //                                                 .write
		input  wire [15:0] timer_4_s1_readdata,                                    //                                                 .readdata
		output wire [15:0] timer_4_s1_writedata,                                   //                                                 .writedata
		output wire        timer_4_s1_chipselect,                                  //                                                 .chipselect
		output wire [2:0]  timer_5_s1_address,                                     //                                       timer_5_s1.address
		output wire        timer_5_s1_write,                                       //                                                 .write
		input  wire [15:0] timer_5_s1_readdata,                                    //                                                 .readdata
		output wire [15:0] timer_5_s1_writedata,                                   //                                                 .writedata
		output wire        timer_5_s1_chipselect,                                  //                                                 .chipselect
		output wire [2:0]  timer_6_s1_address,                                     //                                       timer_6_s1.address
		output wire        timer_6_s1_write,                                       //                                                 .write
		input  wire [15:0] timer_6_s1_readdata,                                    //                                                 .readdata
		output wire [15:0] timer_6_s1_writedata,                                   //                                                 .writedata
		output wire        timer_6_s1_chipselect,                                  //                                                 .chipselect
		output wire [2:0]  timer_7_s1_address,                                     //                                       timer_7_s1.address
		output wire        timer_7_s1_write,                                       //                                                 .write
		input  wire [15:0] timer_7_s1_readdata,                                    //                                                 .readdata
		output wire [15:0] timer_7_s1_writedata,                                   //                                                 .writedata
		output wire        timer_7_s1_chipselect,                                  //                                                 .chipselect
		output wire [2:0]  timer_8_s1_address,                                     //                                       timer_8_s1.address
		output wire        timer_8_s1_write,                                       //                                                 .write
		input  wire [15:0] timer_8_s1_readdata,                                    //                                                 .readdata
		output wire [15:0] timer_8_s1_writedata,                                   //                                                 .writedata
		output wire        timer_8_s1_chipselect,                                  //                                                 .chipselect
		output wire [2:0]  timer_9_s1_address,                                     //                                       timer_9_s1.address
		output wire        timer_9_s1_write,                                       //                                                 .write
		input  wire [15:0] timer_9_s1_readdata,                                    //                                                 .readdata
		output wire [15:0] timer_9_s1_writedata,                                   //                                                 .writedata
		output wire        timer_9_s1_chipselect                                   //                                                 .chipselect
	);

	wire         clock_crossing_io_m0_translator_avalon_universal_master_0_waitrequest;                            // clock_crossing_io_m0_translator_avalon_universal_master_0_agent:av_waitrequest -> clock_crossing_io_m0_translator:uav_waitrequest
	wire   [2:0] clock_crossing_io_m0_translator_avalon_universal_master_0_burstcount;                             // clock_crossing_io_m0_translator:uav_burstcount -> clock_crossing_io_m0_translator_avalon_universal_master_0_agent:av_burstcount
	wire  [31:0] clock_crossing_io_m0_translator_avalon_universal_master_0_writedata;                              // clock_crossing_io_m0_translator:uav_writedata -> clock_crossing_io_m0_translator_avalon_universal_master_0_agent:av_writedata
	wire  [10:0] clock_crossing_io_m0_translator_avalon_universal_master_0_address;                                // clock_crossing_io_m0_translator:uav_address -> clock_crossing_io_m0_translator_avalon_universal_master_0_agent:av_address
	wire         clock_crossing_io_m0_translator_avalon_universal_master_0_lock;                                   // clock_crossing_io_m0_translator:uav_lock -> clock_crossing_io_m0_translator_avalon_universal_master_0_agent:av_lock
	wire         clock_crossing_io_m0_translator_avalon_universal_master_0_write;                                  // clock_crossing_io_m0_translator:uav_write -> clock_crossing_io_m0_translator_avalon_universal_master_0_agent:av_write
	wire         clock_crossing_io_m0_translator_avalon_universal_master_0_read;                                   // clock_crossing_io_m0_translator:uav_read -> clock_crossing_io_m0_translator_avalon_universal_master_0_agent:av_read
	wire  [31:0] clock_crossing_io_m0_translator_avalon_universal_master_0_readdata;                               // clock_crossing_io_m0_translator_avalon_universal_master_0_agent:av_readdata -> clock_crossing_io_m0_translator:uav_readdata
	wire         clock_crossing_io_m0_translator_avalon_universal_master_0_debugaccess;                            // clock_crossing_io_m0_translator:uav_debugaccess -> clock_crossing_io_m0_translator_avalon_universal_master_0_agent:av_debugaccess
	wire   [3:0] clock_crossing_io_m0_translator_avalon_universal_master_0_byteenable;                             // clock_crossing_io_m0_translator:uav_byteenable -> clock_crossing_io_m0_translator_avalon_universal_master_0_agent:av_byteenable
	wire         clock_crossing_io_m0_translator_avalon_universal_master_0_readdatavalid;                          // clock_crossing_io_m0_translator_avalon_universal_master_0_agent:av_readdatavalid -> clock_crossing_io_m0_translator:uav_readdatavalid
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                        // sys_clk_timer_s1_translator:uav_waitrequest -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                         // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> sys_clk_timer_s1_translator:uav_burstcount
	wire  [31:0] sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                          // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> sys_clk_timer_s1_translator:uav_writedata
	wire  [10:0] sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_address;                            // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:m0_address -> sys_clk_timer_s1_translator:uav_address
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_write;                              // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:m0_write -> sys_clk_timer_s1_translator:uav_write
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_lock;                               // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:m0_lock -> sys_clk_timer_s1_translator:uav_lock
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_read;                               // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:m0_read -> sys_clk_timer_s1_translator:uav_read
	wire  [31:0] sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                           // sys_clk_timer_s1_translator:uav_readdata -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                      // sys_clk_timer_s1_translator:uav_readdatavalid -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                        // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sys_clk_timer_s1_translator:uav_debugaccess
	wire   [3:0] sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                         // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> sys_clk_timer_s1_translator:uav_byteenable
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                 // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                       // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;               // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                        // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                       // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;              // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                    // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;            // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                     // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                    // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                  // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                   // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                  // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_src_endofpacket;                                                                     // cmd_xbar_mux:src_endofpacket -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_src_valid;                                                                           // cmd_xbar_mux:src_valid -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_src_startofpacket;                                                                   // cmd_xbar_mux:src_startofpacket -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_src_data;                                                                            // cmd_xbar_mux:src_data -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_src_channel;                                                                         // cmd_xbar_mux:src_channel -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_src_ready;                                                                           // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux:src_ready
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;                     // sysid_control_slave_translator:uav_waitrequest -> sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;                      // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> sysid_control_slave_translator:uav_burstcount
	wire  [31:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata;                       // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> sysid_control_slave_translator:uav_writedata
	wire  [10:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_address;                         // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_address -> sysid_control_slave_translator:uav_address
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_write;                           // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_write -> sysid_control_slave_translator:uav_write
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_lock;                            // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_lock -> sysid_control_slave_translator:uav_lock
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_read;                            // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_read -> sysid_control_slave_translator:uav_read
	wire  [31:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                        // sysid_control_slave_translator:uav_readdata -> sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                   // sysid_control_slave_translator:uav_readdatavalid -> sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;                     // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sysid_control_slave_translator:uav_debugaccess
	wire   [3:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;                      // sysid_control_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> sysid_control_slave_translator:uav_byteenable
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;              // sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;                    // sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;            // sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data;                     // sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;                    // sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;           // sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                 // sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;         // sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                  // sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                 // sysid_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;               // sysid_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                // sysid_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;               // sysid_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_001_src_endofpacket;                                                                 // cmd_xbar_mux_001:src_endofpacket -> sysid_control_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_001_src_valid;                                                                       // cmd_xbar_mux_001:src_valid -> sysid_control_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_001_src_startofpacket;                                                               // cmd_xbar_mux_001:src_startofpacket -> sysid_control_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_001_src_data;                                                                        // cmd_xbar_mux_001:src_data -> sysid_control_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_001_src_channel;                                                                     // cmd_xbar_mux_001:src_channel -> sysid_control_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_001_src_ready;                                                                       // sysid_control_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_001:src_ready
	wire         key_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                  // key_s1_translator:uav_waitrequest -> key_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] key_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                   // key_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> key_s1_translator:uav_burstcount
	wire  [31:0] key_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                    // key_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> key_s1_translator:uav_writedata
	wire  [10:0] key_s1_translator_avalon_universal_slave_0_agent_m0_address;                                      // key_s1_translator_avalon_universal_slave_0_agent:m0_address -> key_s1_translator:uav_address
	wire         key_s1_translator_avalon_universal_slave_0_agent_m0_write;                                        // key_s1_translator_avalon_universal_slave_0_agent:m0_write -> key_s1_translator:uav_write
	wire         key_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                         // key_s1_translator_avalon_universal_slave_0_agent:m0_lock -> key_s1_translator:uav_lock
	wire         key_s1_translator_avalon_universal_slave_0_agent_m0_read;                                         // key_s1_translator_avalon_universal_slave_0_agent:m0_read -> key_s1_translator:uav_read
	wire  [31:0] key_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                     // key_s1_translator:uav_readdata -> key_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         key_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                // key_s1_translator:uav_readdatavalid -> key_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         key_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                  // key_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> key_s1_translator:uav_debugaccess
	wire   [3:0] key_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                   // key_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> key_s1_translator:uav_byteenable
	wire         key_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                           // key_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         key_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                 // key_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         key_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                         // key_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] key_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                  // key_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         key_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                 // key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> key_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                        // key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> key_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                              // key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> key_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                      // key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> key_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                               // key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> key_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                              // key_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                            // key_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> key_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                             // key_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> key_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                            // key_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> key_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_002_src_endofpacket;                                                                 // cmd_xbar_mux_002:src_endofpacket -> key_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_002_src_valid;                                                                       // cmd_xbar_mux_002:src_valid -> key_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_002_src_startofpacket;                                                               // cmd_xbar_mux_002:src_startofpacket -> key_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_002_src_data;                                                                        // cmd_xbar_mux_002:src_data -> key_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_002_src_channel;                                                                     // cmd_xbar_mux_002:src_channel -> key_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_002_src_ready;                                                                       // key_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_002:src_ready
	wire         sw_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                   // sw_s1_translator:uav_waitrequest -> sw_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sw_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                    // sw_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> sw_s1_translator:uav_burstcount
	wire  [31:0] sw_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                     // sw_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> sw_s1_translator:uav_writedata
	wire  [10:0] sw_s1_translator_avalon_universal_slave_0_agent_m0_address;                                       // sw_s1_translator_avalon_universal_slave_0_agent:m0_address -> sw_s1_translator:uav_address
	wire         sw_s1_translator_avalon_universal_slave_0_agent_m0_write;                                         // sw_s1_translator_avalon_universal_slave_0_agent:m0_write -> sw_s1_translator:uav_write
	wire         sw_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                          // sw_s1_translator_avalon_universal_slave_0_agent:m0_lock -> sw_s1_translator:uav_lock
	wire         sw_s1_translator_avalon_universal_slave_0_agent_m0_read;                                          // sw_s1_translator_avalon_universal_slave_0_agent:m0_read -> sw_s1_translator:uav_read
	wire  [31:0] sw_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                      // sw_s1_translator:uav_readdata -> sw_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sw_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                 // sw_s1_translator:uav_readdatavalid -> sw_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sw_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                   // sw_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sw_s1_translator:uav_debugaccess
	wire   [3:0] sw_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                    // sw_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> sw_s1_translator:uav_byteenable
	wire         sw_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                            // sw_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sw_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                  // sw_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sw_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                          // sw_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] sw_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                   // sw_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sw_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                  // sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sw_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                         // sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sw_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                               // sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sw_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                       // sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sw_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                // sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sw_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                               // sw_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                             // sw_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sw_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                              // sw_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sw_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                             // sw_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sw_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_003_src_endofpacket;                                                                 // cmd_xbar_mux_003:src_endofpacket -> sw_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_003_src_valid;                                                                       // cmd_xbar_mux_003:src_valid -> sw_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_003_src_startofpacket;                                                               // cmd_xbar_mux_003:src_startofpacket -> sw_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_003_src_data;                                                                        // cmd_xbar_mux_003:src_data -> sw_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_003_src_channel;                                                                     // cmd_xbar_mux_003:src_channel -> sw_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_003_src_ready;                                                                       // sw_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_003:src_ready
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                 // ledg_s1_translator:uav_waitrequest -> ledg_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] ledg_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                  // ledg_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> ledg_s1_translator:uav_burstcount
	wire  [31:0] ledg_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                   // ledg_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> ledg_s1_translator:uav_writedata
	wire  [10:0] ledg_s1_translator_avalon_universal_slave_0_agent_m0_address;                                     // ledg_s1_translator_avalon_universal_slave_0_agent:m0_address -> ledg_s1_translator:uav_address
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_m0_write;                                       // ledg_s1_translator_avalon_universal_slave_0_agent:m0_write -> ledg_s1_translator:uav_write
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                        // ledg_s1_translator_avalon_universal_slave_0_agent:m0_lock -> ledg_s1_translator:uav_lock
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_m0_read;                                        // ledg_s1_translator_avalon_universal_slave_0_agent:m0_read -> ledg_s1_translator:uav_read
	wire  [31:0] ledg_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                    // ledg_s1_translator:uav_readdata -> ledg_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                               // ledg_s1_translator:uav_readdatavalid -> ledg_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                 // ledg_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> ledg_s1_translator:uav_debugaccess
	wire   [3:0] ledg_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                  // ledg_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> ledg_s1_translator:uav_byteenable
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                          // ledg_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                // ledg_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                        // ledg_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                 // ledg_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                // ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> ledg_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                       // ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> ledg_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                             // ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> ledg_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                     // ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> ledg_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                              // ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> ledg_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                             // ledg_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                           // ledg_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> ledg_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] ledg_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                            // ledg_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> ledg_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                           // ledg_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> ledg_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_004_src_endofpacket;                                                                 // cmd_xbar_mux_004:src_endofpacket -> ledg_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_004_src_valid;                                                                       // cmd_xbar_mux_004:src_valid -> ledg_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_004_src_startofpacket;                                                               // cmd_xbar_mux_004:src_startofpacket -> ledg_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_004_src_data;                                                                        // cmd_xbar_mux_004:src_data -> ledg_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_004_src_channel;                                                                     // cmd_xbar_mux_004:src_channel -> ledg_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_004_src_ready;                                                                       // ledg_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_004:src_ready
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                 // ledr_s1_translator:uav_waitrequest -> ledr_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] ledr_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                  // ledr_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> ledr_s1_translator:uav_burstcount
	wire  [31:0] ledr_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                   // ledr_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> ledr_s1_translator:uav_writedata
	wire  [10:0] ledr_s1_translator_avalon_universal_slave_0_agent_m0_address;                                     // ledr_s1_translator_avalon_universal_slave_0_agent:m0_address -> ledr_s1_translator:uav_address
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_m0_write;                                       // ledr_s1_translator_avalon_universal_slave_0_agent:m0_write -> ledr_s1_translator:uav_write
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                        // ledr_s1_translator_avalon_universal_slave_0_agent:m0_lock -> ledr_s1_translator:uav_lock
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_m0_read;                                        // ledr_s1_translator_avalon_universal_slave_0_agent:m0_read -> ledr_s1_translator:uav_read
	wire  [31:0] ledr_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                    // ledr_s1_translator:uav_readdata -> ledr_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                               // ledr_s1_translator:uav_readdatavalid -> ledr_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                 // ledr_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> ledr_s1_translator:uav_debugaccess
	wire   [3:0] ledr_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                  // ledr_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> ledr_s1_translator:uav_byteenable
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                          // ledr_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                // ledr_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                        // ledr_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                 // ledr_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                // ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> ledr_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                       // ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> ledr_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                             // ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> ledr_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                     // ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> ledr_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                              // ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> ledr_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                             // ledr_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                           // ledr_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> ledr_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] ledr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                            // ledr_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> ledr_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                           // ledr_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> ledr_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_005_src_endofpacket;                                                                 // cmd_xbar_mux_005:src_endofpacket -> ledr_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_005_src_valid;                                                                       // cmd_xbar_mux_005:src_valid -> ledr_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_005_src_startofpacket;                                                               // cmd_xbar_mux_005:src_startofpacket -> ledr_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_005_src_data;                                                                        // cmd_xbar_mux_005:src_data -> ledr_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_005_src_channel;                                                                     // cmd_xbar_mux_005:src_channel -> ledr_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_005_src_ready;                                                                       // ledr_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_005:src_ready
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                // rs232_s1_translator:uav_waitrequest -> rs232_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] rs232_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                 // rs232_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> rs232_s1_translator:uav_burstcount
	wire  [31:0] rs232_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                  // rs232_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> rs232_s1_translator:uav_writedata
	wire  [10:0] rs232_s1_translator_avalon_universal_slave_0_agent_m0_address;                                    // rs232_s1_translator_avalon_universal_slave_0_agent:m0_address -> rs232_s1_translator:uav_address
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_m0_write;                                      // rs232_s1_translator_avalon_universal_slave_0_agent:m0_write -> rs232_s1_translator:uav_write
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                       // rs232_s1_translator_avalon_universal_slave_0_agent:m0_lock -> rs232_s1_translator:uav_lock
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_m0_read;                                       // rs232_s1_translator_avalon_universal_slave_0_agent:m0_read -> rs232_s1_translator:uav_read
	wire  [31:0] rs232_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                   // rs232_s1_translator:uav_readdata -> rs232_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                              // rs232_s1_translator:uav_readdatavalid -> rs232_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                // rs232_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> rs232_s1_translator:uav_debugaccess
	wire   [3:0] rs232_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                 // rs232_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> rs232_s1_translator:uav_byteenable
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                         // rs232_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                               // rs232_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                       // rs232_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                // rs232_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                               // rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> rs232_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                      // rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> rs232_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                            // rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> rs232_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                    // rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> rs232_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                             // rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> rs232_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                            // rs232_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                          // rs232_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> rs232_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] rs232_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                           // rs232_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> rs232_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                          // rs232_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> rs232_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_006_src_endofpacket;                                                                 // cmd_xbar_mux_006:src_endofpacket -> rs232_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_006_src_valid;                                                                       // cmd_xbar_mux_006:src_valid -> rs232_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_006_src_startofpacket;                                                               // cmd_xbar_mux_006:src_startofpacket -> rs232_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_006_src_data;                                                                        // cmd_xbar_mux_006:src_data -> rs232_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_006_src_channel;                                                                     // cmd_xbar_mux_006:src_channel -> rs232_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_006_src_ready;                                                                       // rs232_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_006:src_ready
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // i2c_scl_s1_translator:uav_waitrequest -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> i2c_scl_s1_translator:uav_burstcount
	wire  [31:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> i2c_scl_s1_translator:uav_writedata
	wire  [10:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_address;                                  // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_address -> i2c_scl_s1_translator:uav_address
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_write;                                    // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_write -> i2c_scl_s1_translator:uav_write
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                     // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_lock -> i2c_scl_s1_translator:uav_lock
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_read;                                     // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_read -> i2c_scl_s1_translator:uav_read
	wire  [31:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // i2c_scl_s1_translator:uav_readdata -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // i2c_scl_s1_translator:uav_readdatavalid -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> i2c_scl_s1_translator:uav_debugaccess
	wire   [3:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> i2c_scl_s1_translator:uav_byteenable
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                              // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_007_src_endofpacket;                                                                 // cmd_xbar_mux_007:src_endofpacket -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_007_src_valid;                                                                       // cmd_xbar_mux_007:src_valid -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_007_src_startofpacket;                                                               // cmd_xbar_mux_007:src_startofpacket -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_007_src_data;                                                                        // cmd_xbar_mux_007:src_data -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_007_src_channel;                                                                     // cmd_xbar_mux_007:src_channel -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_007_src_ready;                                                                       // i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_007:src_ready
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // i2c_sda_s1_translator:uav_waitrequest -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> i2c_sda_s1_translator:uav_burstcount
	wire  [31:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> i2c_sda_s1_translator:uav_writedata
	wire  [10:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_address;                                  // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_address -> i2c_sda_s1_translator:uav_address
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_write;                                    // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_write -> i2c_sda_s1_translator:uav_write
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                     // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_lock -> i2c_sda_s1_translator:uav_lock
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_read;                                     // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_read -> i2c_sda_s1_translator:uav_read
	wire  [31:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // i2c_sda_s1_translator:uav_readdata -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // i2c_sda_s1_translator:uav_readdatavalid -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> i2c_sda_s1_translator:uav_debugaccess
	wire   [3:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> i2c_sda_s1_translator:uav_byteenable
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                              // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_008_src_endofpacket;                                                                 // cmd_xbar_mux_008:src_endofpacket -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_008_src_valid;                                                                       // cmd_xbar_mux_008:src_valid -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_008_src_startofpacket;                                                               // cmd_xbar_mux_008:src_startofpacket -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_008_src_data;                                                                        // cmd_xbar_mux_008:src_data -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_008_src_channel;                                                                     // cmd_xbar_mux_008:src_channel -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_008_src_ready;                                                                       // i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_008:src_ready
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                          // eep_i2c_scl_s1_translator:uav_waitrequest -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                           // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> eep_i2c_scl_s1_translator:uav_burstcount
	wire  [31:0] eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                            // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> eep_i2c_scl_s1_translator:uav_writedata
	wire  [10:0] eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_address;                              // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_address -> eep_i2c_scl_s1_translator:uav_address
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_write;                                // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_write -> eep_i2c_scl_s1_translator:uav_write
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                 // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_lock -> eep_i2c_scl_s1_translator:uav_lock
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_read;                                 // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_read -> eep_i2c_scl_s1_translator:uav_read
	wire  [31:0] eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                             // eep_i2c_scl_s1_translator:uav_readdata -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                        // eep_i2c_scl_s1_translator:uav_readdatavalid -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                          // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> eep_i2c_scl_s1_translator:uav_debugaccess
	wire   [3:0] eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                           // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> eep_i2c_scl_s1_translator:uav_byteenable
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                   // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                         // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                 // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                          // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                         // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                      // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;              // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                       // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                      // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                    // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                     // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                    // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_009_src_endofpacket;                                                                 // cmd_xbar_mux_009:src_endofpacket -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_009_src_valid;                                                                       // cmd_xbar_mux_009:src_valid -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_009_src_startofpacket;                                                               // cmd_xbar_mux_009:src_startofpacket -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_009_src_data;                                                                        // cmd_xbar_mux_009:src_data -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_009_src_channel;                                                                     // cmd_xbar_mux_009:src_channel -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_009_src_ready;                                                                       // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_009:src_ready
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                          // eep_i2c_sda_s1_translator:uav_waitrequest -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                           // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> eep_i2c_sda_s1_translator:uav_burstcount
	wire  [31:0] eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                            // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> eep_i2c_sda_s1_translator:uav_writedata
	wire  [10:0] eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_address;                              // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_address -> eep_i2c_sda_s1_translator:uav_address
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_write;                                // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_write -> eep_i2c_sda_s1_translator:uav_write
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                 // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_lock -> eep_i2c_sda_s1_translator:uav_lock
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_read;                                 // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_read -> eep_i2c_sda_s1_translator:uav_read
	wire  [31:0] eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                             // eep_i2c_sda_s1_translator:uav_readdata -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                        // eep_i2c_sda_s1_translator:uav_readdatavalid -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                          // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> eep_i2c_sda_s1_translator:uav_debugaccess
	wire   [3:0] eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                           // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> eep_i2c_sda_s1_translator:uav_byteenable
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                   // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                         // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                 // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                          // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                         // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                      // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;              // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                       // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                      // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                    // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                     // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                    // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_010_src_endofpacket;                                                                 // cmd_xbar_mux_010:src_endofpacket -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_010_src_valid;                                                                       // cmd_xbar_mux_010:src_valid -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_010_src_startofpacket;                                                               // cmd_xbar_mux_010:src_startofpacket -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_010_src_data;                                                                        // cmd_xbar_mux_010:src_data -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_010_src_channel;                                                                     // cmd_xbar_mux_010:src_channel -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_010_src_ready;                                                                       // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_010:src_ready
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;                       // lcd_control_slave_translator:uav_waitrequest -> lcd_control_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;                        // lcd_control_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> lcd_control_slave_translator:uav_burstcount
	wire  [31:0] lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata;                         // lcd_control_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> lcd_control_slave_translator:uav_writedata
	wire  [10:0] lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_address;                           // lcd_control_slave_translator_avalon_universal_slave_0_agent:m0_address -> lcd_control_slave_translator:uav_address
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_write;                             // lcd_control_slave_translator_avalon_universal_slave_0_agent:m0_write -> lcd_control_slave_translator:uav_write
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_lock;                              // lcd_control_slave_translator_avalon_universal_slave_0_agent:m0_lock -> lcd_control_slave_translator:uav_lock
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_read;                              // lcd_control_slave_translator_avalon_universal_slave_0_agent:m0_read -> lcd_control_slave_translator:uav_read
	wire  [31:0] lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                          // lcd_control_slave_translator:uav_readdata -> lcd_control_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                     // lcd_control_slave_translator:uav_readdatavalid -> lcd_control_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;                       // lcd_control_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> lcd_control_slave_translator:uav_debugaccess
	wire   [3:0] lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;                        // lcd_control_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> lcd_control_slave_translator:uav_byteenable
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                // lcd_control_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;                      // lcd_control_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;              // lcd_control_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data;                       // lcd_control_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;                      // lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> lcd_control_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;             // lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> lcd_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                   // lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> lcd_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;           // lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> lcd_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                    // lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> lcd_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                   // lcd_control_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                 // lcd_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> lcd_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] lcd_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                  // lcd_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> lcd_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                 // lcd_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> lcd_control_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_011_src_endofpacket;                                                                 // cmd_xbar_mux_011:src_endofpacket -> lcd_control_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_011_src_valid;                                                                       // cmd_xbar_mux_011:src_valid -> lcd_control_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_011_src_startofpacket;                                                               // cmd_xbar_mux_011:src_startofpacket -> lcd_control_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_011_src_data;                                                                        // cmd_xbar_mux_011:src_data -> lcd_control_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_011_src_channel;                                                                     // cmd_xbar_mux_011:src_channel -> lcd_control_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_011_src_ready;                                                                       // lcd_control_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_011:src_ready
	wire         ir_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                                   // ir_s1_translator:uav_waitrequest -> ir_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] ir_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                    // ir_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> ir_s1_translator:uav_burstcount
	wire  [31:0] ir_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                     // ir_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> ir_s1_translator:uav_writedata
	wire  [10:0] ir_s1_translator_avalon_universal_slave_0_agent_m0_address;                                       // ir_s1_translator_avalon_universal_slave_0_agent:m0_address -> ir_s1_translator:uav_address
	wire         ir_s1_translator_avalon_universal_slave_0_agent_m0_write;                                         // ir_s1_translator_avalon_universal_slave_0_agent:m0_write -> ir_s1_translator:uav_write
	wire         ir_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                          // ir_s1_translator_avalon_universal_slave_0_agent:m0_lock -> ir_s1_translator:uav_lock
	wire         ir_s1_translator_avalon_universal_slave_0_agent_m0_read;                                          // ir_s1_translator_avalon_universal_slave_0_agent:m0_read -> ir_s1_translator:uav_read
	wire  [31:0] ir_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                      // ir_s1_translator:uav_readdata -> ir_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         ir_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                                 // ir_s1_translator:uav_readdatavalid -> ir_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         ir_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                                   // ir_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> ir_s1_translator:uav_debugaccess
	wire   [3:0] ir_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                    // ir_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> ir_s1_translator:uav_byteenable
	wire         ir_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                            // ir_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         ir_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                                  // ir_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         ir_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                          // ir_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] ir_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                                   // ir_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         ir_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                                  // ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> ir_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                         // ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> ir_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                               // ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> ir_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                       // ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> ir_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                                // ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> ir_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                               // ir_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         ir_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                             // ir_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> ir_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] ir_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                              // ir_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> ir_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         ir_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                             // ir_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> ir_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_012_src_endofpacket;                                                                 // cmd_xbar_mux_012:src_endofpacket -> ir_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_012_src_valid;                                                                       // cmd_xbar_mux_012:src_valid -> ir_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_012_src_startofpacket;                                                               // cmd_xbar_mux_012:src_startofpacket -> ir_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_012_src_data;                                                                        // cmd_xbar_mux_012:src_data -> ir_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_012_src_channel;                                                                     // cmd_xbar_mux_012:src_channel -> ir_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_012_src_ready;                                                                       // ir_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_012:src_ready
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;                       // seg7_avalon_slave_translator:uav_waitrequest -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;                        // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> seg7_avalon_slave_translator:uav_burstcount
	wire  [31:0] seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_writedata;                         // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> seg7_avalon_slave_translator:uav_writedata
	wire  [10:0] seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_address;                           // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:m0_address -> seg7_avalon_slave_translator:uav_address
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_write;                             // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:m0_write -> seg7_avalon_slave_translator:uav_write
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_lock;                              // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:m0_lock -> seg7_avalon_slave_translator:uav_lock
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_read;                              // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:m0_read -> seg7_avalon_slave_translator:uav_read
	wire  [31:0] seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                          // seg7_avalon_slave_translator:uav_readdata -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                     // seg7_avalon_slave_translator:uav_readdatavalid -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;                       // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> seg7_avalon_slave_translator:uav_debugaccess
	wire   [3:0] seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;                        // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> seg7_avalon_slave_translator:uav_byteenable
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;                      // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;              // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_data;                       // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;                      // seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;             // seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                   // seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;           // seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                    // seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                   // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                 // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                  // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                 // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_013_src_endofpacket;                                                                 // cmd_xbar_mux_013:src_endofpacket -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_013_src_valid;                                                                       // cmd_xbar_mux_013:src_valid -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_013_src_startofpacket;                                                               // cmd_xbar_mux_013:src_startofpacket -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_013_src_data;                                                                        // cmd_xbar_mux_013:src_data -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_013_src_channel;                                                                     // cmd_xbar_mux_013:src_channel -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_013_src_ready;                                                                       // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_013:src_ready
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                               // sd_clk_s1_translator:uav_waitrequest -> sd_clk_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                // sd_clk_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> sd_clk_s1_translator:uav_burstcount
	wire  [31:0] sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                 // sd_clk_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> sd_clk_s1_translator:uav_writedata
	wire  [10:0] sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_address;                                   // sd_clk_s1_translator_avalon_universal_slave_0_agent:m0_address -> sd_clk_s1_translator:uav_address
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_write;                                     // sd_clk_s1_translator_avalon_universal_slave_0_agent:m0_write -> sd_clk_s1_translator:uav_write
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                      // sd_clk_s1_translator_avalon_universal_slave_0_agent:m0_lock -> sd_clk_s1_translator:uav_lock
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_read;                                      // sd_clk_s1_translator_avalon_universal_slave_0_agent:m0_read -> sd_clk_s1_translator:uav_read
	wire  [31:0] sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                  // sd_clk_s1_translator:uav_readdata -> sd_clk_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                             // sd_clk_s1_translator:uav_readdatavalid -> sd_clk_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                               // sd_clk_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sd_clk_s1_translator:uav_debugaccess
	wire   [3:0] sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                // sd_clk_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> sd_clk_s1_translator:uav_byteenable
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                        // sd_clk_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                              // sd_clk_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                      // sd_clk_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                               // sd_clk_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                              // sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sd_clk_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                     // sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sd_clk_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                           // sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sd_clk_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                   // sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sd_clk_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                            // sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sd_clk_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                           // sd_clk_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                         // sd_clk_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sd_clk_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sd_clk_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                          // sd_clk_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sd_clk_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                         // sd_clk_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sd_clk_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_014_src_endofpacket;                                                                 // cmd_xbar_mux_014:src_endofpacket -> sd_clk_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_014_src_valid;                                                                       // cmd_xbar_mux_014:src_valid -> sd_clk_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_014_src_startofpacket;                                                               // cmd_xbar_mux_014:src_startofpacket -> sd_clk_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_014_src_data;                                                                        // cmd_xbar_mux_014:src_data -> sd_clk_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_014_src_channel;                                                                     // cmd_xbar_mux_014:src_channel -> sd_clk_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_014_src_ready;                                                                       // sd_clk_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_014:src_ready
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                               // sd_cmd_s1_translator:uav_waitrequest -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                // sd_cmd_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> sd_cmd_s1_translator:uav_burstcount
	wire  [31:0] sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                 // sd_cmd_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> sd_cmd_s1_translator:uav_writedata
	wire  [10:0] sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_address;                                   // sd_cmd_s1_translator_avalon_universal_slave_0_agent:m0_address -> sd_cmd_s1_translator:uav_address
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_write;                                     // sd_cmd_s1_translator_avalon_universal_slave_0_agent:m0_write -> sd_cmd_s1_translator:uav_write
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                      // sd_cmd_s1_translator_avalon_universal_slave_0_agent:m0_lock -> sd_cmd_s1_translator:uav_lock
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_read;                                      // sd_cmd_s1_translator_avalon_universal_slave_0_agent:m0_read -> sd_cmd_s1_translator:uav_read
	wire  [31:0] sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                  // sd_cmd_s1_translator:uav_readdata -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                             // sd_cmd_s1_translator:uav_readdatavalid -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                               // sd_cmd_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sd_cmd_s1_translator:uav_debugaccess
	wire   [3:0] sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                // sd_cmd_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> sd_cmd_s1_translator:uav_byteenable
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                        // sd_cmd_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                              // sd_cmd_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                      // sd_cmd_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                               // sd_cmd_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                              // sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                     // sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                           // sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                   // sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                            // sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                           // sd_cmd_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                         // sd_cmd_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sd_cmd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                          // sd_cmd_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                         // sd_cmd_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_015_src_endofpacket;                                                                 // cmd_xbar_mux_015:src_endofpacket -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_015_src_valid;                                                                       // cmd_xbar_mux_015:src_valid -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_015_src_startofpacket;                                                               // cmd_xbar_mux_015:src_startofpacket -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_015_src_data;                                                                        // cmd_xbar_mux_015:src_data -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_015_src_channel;                                                                     // cmd_xbar_mux_015:src_channel -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_015_src_ready;                                                                       // sd_cmd_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_015:src_ready
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                               // sd_dat_s1_translator:uav_waitrequest -> sd_dat_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                                // sd_dat_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> sd_dat_s1_translator:uav_burstcount
	wire  [31:0] sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                 // sd_dat_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> sd_dat_s1_translator:uav_writedata
	wire  [10:0] sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_address;                                   // sd_dat_s1_translator_avalon_universal_slave_0_agent:m0_address -> sd_dat_s1_translator:uav_address
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_write;                                     // sd_dat_s1_translator_avalon_universal_slave_0_agent:m0_write -> sd_dat_s1_translator:uav_write
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                      // sd_dat_s1_translator_avalon_universal_slave_0_agent:m0_lock -> sd_dat_s1_translator:uav_lock
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_read;                                      // sd_dat_s1_translator_avalon_universal_slave_0_agent:m0_read -> sd_dat_s1_translator:uav_read
	wire  [31:0] sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                  // sd_dat_s1_translator:uav_readdata -> sd_dat_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                             // sd_dat_s1_translator:uav_readdatavalid -> sd_dat_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                               // sd_dat_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sd_dat_s1_translator:uav_debugaccess
	wire   [3:0] sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                                // sd_dat_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> sd_dat_s1_translator:uav_byteenable
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                        // sd_dat_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                              // sd_dat_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                      // sd_dat_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                               // sd_dat_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                              // sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sd_dat_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                     // sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sd_dat_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                           // sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sd_dat_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                   // sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sd_dat_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                            // sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sd_dat_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                           // sd_dat_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                         // sd_dat_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sd_dat_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sd_dat_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                          // sd_dat_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sd_dat_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                         // sd_dat_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sd_dat_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_016_src_endofpacket;                                                                 // cmd_xbar_mux_016:src_endofpacket -> sd_dat_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_016_src_valid;                                                                       // cmd_xbar_mux_016:src_valid -> sd_dat_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_016_src_startofpacket;                                                               // cmd_xbar_mux_016:src_startofpacket -> sd_dat_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_016_src_data;                                                                        // cmd_xbar_mux_016:src_data -> sd_dat_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_016_src_channel;                                                                     // cmd_xbar_mux_016:src_channel -> sd_dat_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_016_src_ready;                                                                       // sd_dat_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_016:src_ready
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // sd_wp_n_s1_translator:uav_waitrequest -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> sd_wp_n_s1_translator:uav_burstcount
	wire  [31:0] sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> sd_wp_n_s1_translator:uav_writedata
	wire  [10:0] sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_address;                                  // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:m0_address -> sd_wp_n_s1_translator:uav_address
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_write;                                    // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:m0_write -> sd_wp_n_s1_translator:uav_write
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                     // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:m0_lock -> sd_wp_n_s1_translator:uav_lock
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_read;                                     // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:m0_read -> sd_wp_n_s1_translator:uav_read
	wire  [31:0] sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // sd_wp_n_s1_translator:uav_readdata -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // sd_wp_n_s1_translator:uav_readdatavalid -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sd_wp_n_s1_translator:uav_debugaccess
	wire   [3:0] sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> sd_wp_n_s1_translator:uav_byteenable
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                              // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_017_src_endofpacket;                                                                 // cmd_xbar_mux_017:src_endofpacket -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_017_src_valid;                                                                       // cmd_xbar_mux_017:src_valid -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_017_src_startofpacket;                                                               // cmd_xbar_mux_017:src_startofpacket -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_017_src_data;                                                                        // cmd_xbar_mux_017:src_data -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_017_src_channel;                                                                     // cmd_xbar_mux_017:src_channel -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_017_src_ready;                                                                       // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_017:src_ready
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;             // jtag_uart_avalon_jtag_slave_translator:uav_waitrequest -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;              // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> jtag_uart_avalon_jtag_slave_translator:uav_burstcount
	wire  [31:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata;               // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> jtag_uart_avalon_jtag_slave_translator:uav_writedata
	wire  [10:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address;                 // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_address -> jtag_uart_avalon_jtag_slave_translator:uav_address
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write;                   // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_write -> jtag_uart_avalon_jtag_slave_translator:uav_write
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock;                    // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_lock -> jtag_uart_avalon_jtag_slave_translator:uav_lock
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read;                    // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_read -> jtag_uart_avalon_jtag_slave_translator:uav_read
	wire  [31:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                // jtag_uart_avalon_jtag_slave_translator:uav_readdata -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;           // jtag_uart_avalon_jtag_slave_translator:uav_readdatavalid -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;             // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> jtag_uart_avalon_jtag_slave_translator:uav_debugaccess
	wire   [3:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;              // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> jtag_uart_avalon_jtag_slave_translator:uav_byteenable
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;      // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;            // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;    // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data;             // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;            // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;   // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;         // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket; // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;          // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;         // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;       // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;        // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;       // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_018_src_endofpacket;                                                                 // cmd_xbar_mux_018:src_endofpacket -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_018_src_valid;                                                                       // cmd_xbar_mux_018:src_valid -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_018_src_startofpacket;                                                               // cmd_xbar_mux_018:src_startofpacket -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_018_src_data;                                                                        // cmd_xbar_mux_018:src_data -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_018_src_channel;                                                                     // cmd_xbar_mux_018:src_channel -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_018_src_ready;                                                                       // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_018:src_ready
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_waitrequest;                 // sysver_0_avalon_slave_0_translator:uav_waitrequest -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_burstcount;                  // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:m0_burstcount -> sysver_0_avalon_slave_0_translator:uav_burstcount
	wire  [31:0] sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_writedata;                   // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:m0_writedata -> sysver_0_avalon_slave_0_translator:uav_writedata
	wire  [10:0] sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_address;                     // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:m0_address -> sysver_0_avalon_slave_0_translator:uav_address
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_write;                       // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:m0_write -> sysver_0_avalon_slave_0_translator:uav_write
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_lock;                        // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:m0_lock -> sysver_0_avalon_slave_0_translator:uav_lock
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_read;                        // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:m0_read -> sysver_0_avalon_slave_0_translator:uav_read
	wire  [31:0] sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_readdata;                    // sysver_0_avalon_slave_0_translator:uav_readdata -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_readdatavalid;               // sysver_0_avalon_slave_0_translator:uav_readdatavalid -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_debugaccess;                 // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:m0_debugaccess -> sysver_0_avalon_slave_0_translator:uav_debugaccess
	wire   [3:0] sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_byteenable;                  // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:m0_byteenable -> sysver_0_avalon_slave_0_translator:uav_byteenable
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;          // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_valid;                // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rf_source_valid -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;        // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_data;                 // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rf_source_data -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_ready;                // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;       // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;             // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;     // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;              // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;             // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rf_sink_ready -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;           // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;            // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;           // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_019_src_endofpacket;                                                                 // cmd_xbar_mux_019:src_endofpacket -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_019_src_valid;                                                                       // cmd_xbar_mux_019:src_valid -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_019_src_startofpacket;                                                               // cmd_xbar_mux_019:src_startofpacket -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_019_src_data;                                                                        // cmd_xbar_mux_019:src_data -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_019_src_channel;                                                                     // cmd_xbar_mux_019:src_channel -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_019_src_ready;                                                                       // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_019:src_ready
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // timer_0_s1_translator:uav_waitrequest -> timer_0_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_0_s1_translator:uav_burstcount
	wire  [31:0] timer_0_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_0_s1_translator:uav_writedata
	wire  [10:0] timer_0_s1_translator_avalon_universal_slave_0_agent_m0_address;                                  // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_0_s1_translator:uav_address
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_m0_write;                                    // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_0_s1_translator:uav_write
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                     // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_0_s1_translator:uav_lock
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_m0_read;                                     // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_0_s1_translator:uav_read
	wire  [31:0] timer_0_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // timer_0_s1_translator:uav_readdata -> timer_0_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // timer_0_s1_translator:uav_readdatavalid -> timer_0_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_0_s1_translator:uav_debugaccess
	wire   [3:0] timer_0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // timer_0_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_0_s1_translator:uav_byteenable
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // timer_0_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // timer_0_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // timer_0_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                              // timer_0_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_0_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // timer_0_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // timer_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // timer_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // timer_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_0_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_020_src_endofpacket;                                                                 // cmd_xbar_mux_020:src_endofpacket -> timer_0_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_020_src_valid;                                                                       // cmd_xbar_mux_020:src_valid -> timer_0_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_020_src_startofpacket;                                                               // cmd_xbar_mux_020:src_startofpacket -> timer_0_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_020_src_data;                                                                        // cmd_xbar_mux_020:src_data -> timer_0_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_020_src_channel;                                                                     // cmd_xbar_mux_020:src_channel -> timer_0_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_020_src_ready;                                                                       // timer_0_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_020:src_ready
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // timer_1_s1_translator:uav_waitrequest -> timer_1_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // timer_1_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_1_s1_translator:uav_burstcount
	wire  [31:0] timer_1_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                // timer_1_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_1_s1_translator:uav_writedata
	wire  [10:0] timer_1_s1_translator_avalon_universal_slave_0_agent_m0_address;                                  // timer_1_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_1_s1_translator:uav_address
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_m0_write;                                    // timer_1_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_1_s1_translator:uav_write
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                     // timer_1_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_1_s1_translator:uav_lock
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_m0_read;                                     // timer_1_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_1_s1_translator:uav_read
	wire  [31:0] timer_1_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // timer_1_s1_translator:uav_readdata -> timer_1_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // timer_1_s1_translator:uav_readdatavalid -> timer_1_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // timer_1_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_1_s1_translator:uav_debugaccess
	wire   [3:0] timer_1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // timer_1_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_1_s1_translator:uav_byteenable
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // timer_1_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // timer_1_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // timer_1_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                              // timer_1_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_1_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // timer_1_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // timer_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // timer_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // timer_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_1_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_021_src_endofpacket;                                                                 // cmd_xbar_mux_021:src_endofpacket -> timer_1_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_021_src_valid;                                                                       // cmd_xbar_mux_021:src_valid -> timer_1_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_021_src_startofpacket;                                                               // cmd_xbar_mux_021:src_startofpacket -> timer_1_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_021_src_data;                                                                        // cmd_xbar_mux_021:src_data -> timer_1_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_021_src_channel;                                                                     // cmd_xbar_mux_021:src_channel -> timer_1_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_021_src_ready;                                                                       // timer_1_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_021:src_ready
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // timer_2_s1_translator:uav_waitrequest -> timer_2_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // timer_2_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_2_s1_translator:uav_burstcount
	wire  [31:0] timer_2_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                // timer_2_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_2_s1_translator:uav_writedata
	wire  [10:0] timer_2_s1_translator_avalon_universal_slave_0_agent_m0_address;                                  // timer_2_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_2_s1_translator:uav_address
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_m0_write;                                    // timer_2_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_2_s1_translator:uav_write
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                     // timer_2_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_2_s1_translator:uav_lock
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_m0_read;                                     // timer_2_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_2_s1_translator:uav_read
	wire  [31:0] timer_2_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // timer_2_s1_translator:uav_readdata -> timer_2_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // timer_2_s1_translator:uav_readdatavalid -> timer_2_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // timer_2_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_2_s1_translator:uav_debugaccess
	wire   [3:0] timer_2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // timer_2_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_2_s1_translator:uav_byteenable
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // timer_2_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // timer_2_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // timer_2_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                              // timer_2_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_2_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_2_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_2_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_2_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_2_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // timer_2_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // timer_2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // timer_2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // timer_2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_2_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_022_src_endofpacket;                                                                 // cmd_xbar_mux_022:src_endofpacket -> timer_2_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_022_src_valid;                                                                       // cmd_xbar_mux_022:src_valid -> timer_2_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_022_src_startofpacket;                                                               // cmd_xbar_mux_022:src_startofpacket -> timer_2_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_022_src_data;                                                                        // cmd_xbar_mux_022:src_data -> timer_2_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_022_src_channel;                                                                     // cmd_xbar_mux_022:src_channel -> timer_2_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_022_src_ready;                                                                       // timer_2_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_022:src_ready
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // timer_3_s1_translator:uav_waitrequest -> timer_3_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_3_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // timer_3_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_3_s1_translator:uav_burstcount
	wire  [31:0] timer_3_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                // timer_3_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_3_s1_translator:uav_writedata
	wire  [10:0] timer_3_s1_translator_avalon_universal_slave_0_agent_m0_address;                                  // timer_3_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_3_s1_translator:uav_address
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_m0_write;                                    // timer_3_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_3_s1_translator:uav_write
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                     // timer_3_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_3_s1_translator:uav_lock
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_m0_read;                                     // timer_3_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_3_s1_translator:uav_read
	wire  [31:0] timer_3_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // timer_3_s1_translator:uav_readdata -> timer_3_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // timer_3_s1_translator:uav_readdatavalid -> timer_3_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // timer_3_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_3_s1_translator:uav_debugaccess
	wire   [3:0] timer_3_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // timer_3_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_3_s1_translator:uav_byteenable
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // timer_3_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // timer_3_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // timer_3_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                              // timer_3_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_3_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_3_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_3_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_3_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_3_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // timer_3_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // timer_3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // timer_3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // timer_3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_3_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_023_src_endofpacket;                                                                 // cmd_xbar_mux_023:src_endofpacket -> timer_3_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_023_src_valid;                                                                       // cmd_xbar_mux_023:src_valid -> timer_3_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_023_src_startofpacket;                                                               // cmd_xbar_mux_023:src_startofpacket -> timer_3_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_023_src_data;                                                                        // cmd_xbar_mux_023:src_data -> timer_3_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_023_src_channel;                                                                     // cmd_xbar_mux_023:src_channel -> timer_3_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_023_src_ready;                                                                       // timer_3_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_023:src_ready
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // timer_4_s1_translator:uav_waitrequest -> timer_4_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_4_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // timer_4_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_4_s1_translator:uav_burstcount
	wire  [31:0] timer_4_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                // timer_4_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_4_s1_translator:uav_writedata
	wire  [10:0] timer_4_s1_translator_avalon_universal_slave_0_agent_m0_address;                                  // timer_4_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_4_s1_translator:uav_address
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_m0_write;                                    // timer_4_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_4_s1_translator:uav_write
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                     // timer_4_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_4_s1_translator:uav_lock
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_m0_read;                                     // timer_4_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_4_s1_translator:uav_read
	wire  [31:0] timer_4_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // timer_4_s1_translator:uav_readdata -> timer_4_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // timer_4_s1_translator:uav_readdatavalid -> timer_4_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // timer_4_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_4_s1_translator:uav_debugaccess
	wire   [3:0] timer_4_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // timer_4_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_4_s1_translator:uav_byteenable
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // timer_4_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // timer_4_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // timer_4_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                              // timer_4_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_4_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_4_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_4_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_4_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_4_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // timer_4_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // timer_4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // timer_4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // timer_4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_4_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_024_src_endofpacket;                                                                 // cmd_xbar_mux_024:src_endofpacket -> timer_4_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_024_src_valid;                                                                       // cmd_xbar_mux_024:src_valid -> timer_4_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_024_src_startofpacket;                                                               // cmd_xbar_mux_024:src_startofpacket -> timer_4_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_024_src_data;                                                                        // cmd_xbar_mux_024:src_data -> timer_4_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_024_src_channel;                                                                     // cmd_xbar_mux_024:src_channel -> timer_4_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_024_src_ready;                                                                       // timer_4_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_024:src_ready
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // timer_5_s1_translator:uav_waitrequest -> timer_5_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_5_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // timer_5_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_5_s1_translator:uav_burstcount
	wire  [31:0] timer_5_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                // timer_5_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_5_s1_translator:uav_writedata
	wire  [10:0] timer_5_s1_translator_avalon_universal_slave_0_agent_m0_address;                                  // timer_5_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_5_s1_translator:uav_address
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_m0_write;                                    // timer_5_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_5_s1_translator:uav_write
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                     // timer_5_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_5_s1_translator:uav_lock
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_m0_read;                                     // timer_5_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_5_s1_translator:uav_read
	wire  [31:0] timer_5_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // timer_5_s1_translator:uav_readdata -> timer_5_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // timer_5_s1_translator:uav_readdatavalid -> timer_5_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // timer_5_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_5_s1_translator:uav_debugaccess
	wire   [3:0] timer_5_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // timer_5_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_5_s1_translator:uav_byteenable
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // timer_5_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // timer_5_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // timer_5_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                              // timer_5_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_5_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_5_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_5_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_5_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_5_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // timer_5_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // timer_5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // timer_5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // timer_5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_5_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_025_src_endofpacket;                                                                 // cmd_xbar_mux_025:src_endofpacket -> timer_5_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_025_src_valid;                                                                       // cmd_xbar_mux_025:src_valid -> timer_5_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_025_src_startofpacket;                                                               // cmd_xbar_mux_025:src_startofpacket -> timer_5_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_025_src_data;                                                                        // cmd_xbar_mux_025:src_data -> timer_5_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_025_src_channel;                                                                     // cmd_xbar_mux_025:src_channel -> timer_5_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_025_src_ready;                                                                       // timer_5_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_025:src_ready
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // timer_6_s1_translator:uav_waitrequest -> timer_6_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_6_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // timer_6_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_6_s1_translator:uav_burstcount
	wire  [31:0] timer_6_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                // timer_6_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_6_s1_translator:uav_writedata
	wire  [10:0] timer_6_s1_translator_avalon_universal_slave_0_agent_m0_address;                                  // timer_6_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_6_s1_translator:uav_address
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_m0_write;                                    // timer_6_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_6_s1_translator:uav_write
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                     // timer_6_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_6_s1_translator:uav_lock
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_m0_read;                                     // timer_6_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_6_s1_translator:uav_read
	wire  [31:0] timer_6_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // timer_6_s1_translator:uav_readdata -> timer_6_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // timer_6_s1_translator:uav_readdatavalid -> timer_6_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // timer_6_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_6_s1_translator:uav_debugaccess
	wire   [3:0] timer_6_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // timer_6_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_6_s1_translator:uav_byteenable
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // timer_6_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // timer_6_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // timer_6_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                              // timer_6_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_6_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_6_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_6_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_6_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_6_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // timer_6_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // timer_6_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_6_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // timer_6_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_6_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // timer_6_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_6_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_026_src_endofpacket;                                                                 // cmd_xbar_mux_026:src_endofpacket -> timer_6_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_026_src_valid;                                                                       // cmd_xbar_mux_026:src_valid -> timer_6_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_026_src_startofpacket;                                                               // cmd_xbar_mux_026:src_startofpacket -> timer_6_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_026_src_data;                                                                        // cmd_xbar_mux_026:src_data -> timer_6_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_026_src_channel;                                                                     // cmd_xbar_mux_026:src_channel -> timer_6_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_026_src_ready;                                                                       // timer_6_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_026:src_ready
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // timer_7_s1_translator:uav_waitrequest -> timer_7_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_7_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // timer_7_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_7_s1_translator:uav_burstcount
	wire  [31:0] timer_7_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                // timer_7_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_7_s1_translator:uav_writedata
	wire  [10:0] timer_7_s1_translator_avalon_universal_slave_0_agent_m0_address;                                  // timer_7_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_7_s1_translator:uav_address
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_m0_write;                                    // timer_7_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_7_s1_translator:uav_write
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                     // timer_7_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_7_s1_translator:uav_lock
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_m0_read;                                     // timer_7_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_7_s1_translator:uav_read
	wire  [31:0] timer_7_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // timer_7_s1_translator:uav_readdata -> timer_7_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // timer_7_s1_translator:uav_readdatavalid -> timer_7_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // timer_7_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_7_s1_translator:uav_debugaccess
	wire   [3:0] timer_7_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // timer_7_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_7_s1_translator:uav_byteenable
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // timer_7_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // timer_7_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // timer_7_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                              // timer_7_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_7_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_7_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_7_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_7_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_7_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // timer_7_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // timer_7_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_7_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // timer_7_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_7_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // timer_7_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_7_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_027_src_endofpacket;                                                                 // cmd_xbar_mux_027:src_endofpacket -> timer_7_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_027_src_valid;                                                                       // cmd_xbar_mux_027:src_valid -> timer_7_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_027_src_startofpacket;                                                               // cmd_xbar_mux_027:src_startofpacket -> timer_7_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_027_src_data;                                                                        // cmd_xbar_mux_027:src_data -> timer_7_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_027_src_channel;                                                                     // cmd_xbar_mux_027:src_channel -> timer_7_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_027_src_ready;                                                                       // timer_7_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_027:src_ready
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // timer_8_s1_translator:uav_waitrequest -> timer_8_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_8_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // timer_8_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_8_s1_translator:uav_burstcount
	wire  [31:0] timer_8_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                // timer_8_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_8_s1_translator:uav_writedata
	wire  [10:0] timer_8_s1_translator_avalon_universal_slave_0_agent_m0_address;                                  // timer_8_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_8_s1_translator:uav_address
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_m0_write;                                    // timer_8_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_8_s1_translator:uav_write
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                     // timer_8_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_8_s1_translator:uav_lock
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_m0_read;                                     // timer_8_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_8_s1_translator:uav_read
	wire  [31:0] timer_8_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // timer_8_s1_translator:uav_readdata -> timer_8_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // timer_8_s1_translator:uav_readdatavalid -> timer_8_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // timer_8_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_8_s1_translator:uav_debugaccess
	wire   [3:0] timer_8_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // timer_8_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_8_s1_translator:uav_byteenable
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // timer_8_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // timer_8_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // timer_8_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                              // timer_8_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_8_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_8_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_8_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_8_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_8_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // timer_8_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // timer_8_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_8_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // timer_8_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_8_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // timer_8_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_8_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_028_src_endofpacket;                                                                 // cmd_xbar_mux_028:src_endofpacket -> timer_8_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_028_src_valid;                                                                       // cmd_xbar_mux_028:src_valid -> timer_8_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_028_src_startofpacket;                                                               // cmd_xbar_mux_028:src_startofpacket -> timer_8_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_028_src_data;                                                                        // cmd_xbar_mux_028:src_data -> timer_8_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_028_src_channel;                                                                     // cmd_xbar_mux_028:src_channel -> timer_8_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_028_src_ready;                                                                       // timer_8_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_028:src_ready
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                              // timer_9_s1_translator:uav_waitrequest -> timer_9_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_9_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                               // timer_9_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_9_s1_translator:uav_burstcount
	wire  [31:0] timer_9_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                                // timer_9_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_9_s1_translator:uav_writedata
	wire  [10:0] timer_9_s1_translator_avalon_universal_slave_0_agent_m0_address;                                  // timer_9_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_9_s1_translator:uav_address
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_m0_write;                                    // timer_9_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_9_s1_translator:uav_write
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                     // timer_9_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_9_s1_translator:uav_lock
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_m0_read;                                     // timer_9_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_9_s1_translator:uav_read
	wire  [31:0] timer_9_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                 // timer_9_s1_translator:uav_readdata -> timer_9_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                            // timer_9_s1_translator:uav_readdatavalid -> timer_9_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                              // timer_9_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_9_s1_translator:uav_debugaccess
	wire   [3:0] timer_9_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                               // timer_9_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_9_s1_translator:uav_byteenable
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                       // timer_9_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                             // timer_9_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                     // timer_9_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                              // timer_9_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                             // timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_9_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                    // timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_9_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                          // timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_9_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                  // timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_9_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                           // timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_9_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                          // timer_9_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                        // timer_9_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_9_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_9_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                         // timer_9_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_9_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                        // timer_9_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_9_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_029_src_endofpacket;                                                                 // cmd_xbar_mux_029:src_endofpacket -> timer_9_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_029_src_valid;                                                                       // cmd_xbar_mux_029:src_valid -> timer_9_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_029_src_startofpacket;                                                               // cmd_xbar_mux_029:src_startofpacket -> timer_9_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_029_src_data;                                                                        // cmd_xbar_mux_029:src_data -> timer_9_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_029_src_channel;                                                                     // cmd_xbar_mux_029:src_channel -> timer_9_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_029_src_ready;                                                                       // timer_9_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_029:src_ready
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // timer_10_s1_translator:uav_waitrequest -> timer_10_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_10_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // timer_10_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_10_s1_translator:uav_burstcount
	wire  [31:0] timer_10_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                               // timer_10_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_10_s1_translator:uav_writedata
	wire  [10:0] timer_10_s1_translator_avalon_universal_slave_0_agent_m0_address;                                 // timer_10_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_10_s1_translator:uav_address
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_m0_write;                                   // timer_10_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_10_s1_translator:uav_write
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                    // timer_10_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_10_s1_translator:uav_lock
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_m0_read;                                    // timer_10_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_10_s1_translator:uav_read
	wire  [31:0] timer_10_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                // timer_10_s1_translator:uav_readdata -> timer_10_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // timer_10_s1_translator:uav_readdatavalid -> timer_10_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // timer_10_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_10_s1_translator:uav_debugaccess
	wire   [3:0] timer_10_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // timer_10_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_10_s1_translator:uav_byteenable
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // timer_10_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // timer_10_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // timer_10_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                             // timer_10_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_10_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_10_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_10_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_10_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_10_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // timer_10_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // timer_10_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_10_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_10_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // timer_10_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_10_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // timer_10_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_10_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_030_src_endofpacket;                                                                 // cmd_xbar_mux_030:src_endofpacket -> timer_10_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_030_src_valid;                                                                       // cmd_xbar_mux_030:src_valid -> timer_10_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_030_src_startofpacket;                                                               // cmd_xbar_mux_030:src_startofpacket -> timer_10_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_030_src_data;                                                                        // cmd_xbar_mux_030:src_data -> timer_10_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_030_src_channel;                                                                     // cmd_xbar_mux_030:src_channel -> timer_10_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_030_src_ready;                                                                       // timer_10_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_030:src_ready
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // timer_11_s1_translator:uav_waitrequest -> timer_11_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_11_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // timer_11_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_11_s1_translator:uav_burstcount
	wire  [31:0] timer_11_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                               // timer_11_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_11_s1_translator:uav_writedata
	wire  [10:0] timer_11_s1_translator_avalon_universal_slave_0_agent_m0_address;                                 // timer_11_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_11_s1_translator:uav_address
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_m0_write;                                   // timer_11_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_11_s1_translator:uav_write
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                    // timer_11_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_11_s1_translator:uav_lock
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_m0_read;                                    // timer_11_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_11_s1_translator:uav_read
	wire  [31:0] timer_11_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                // timer_11_s1_translator:uav_readdata -> timer_11_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // timer_11_s1_translator:uav_readdatavalid -> timer_11_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // timer_11_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_11_s1_translator:uav_debugaccess
	wire   [3:0] timer_11_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // timer_11_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_11_s1_translator:uav_byteenable
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // timer_11_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // timer_11_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // timer_11_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                             // timer_11_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_11_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_11_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_11_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_11_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_11_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // timer_11_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // timer_11_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_11_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_11_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // timer_11_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_11_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // timer_11_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_11_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_031_src_endofpacket;                                                                 // cmd_xbar_mux_031:src_endofpacket -> timer_11_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_031_src_valid;                                                                       // cmd_xbar_mux_031:src_valid -> timer_11_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_031_src_startofpacket;                                                               // cmd_xbar_mux_031:src_startofpacket -> timer_11_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_031_src_data;                                                                        // cmd_xbar_mux_031:src_data -> timer_11_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_031_src_channel;                                                                     // cmd_xbar_mux_031:src_channel -> timer_11_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_031_src_ready;                                                                       // timer_11_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_031:src_ready
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // timer_12_s1_translator:uav_waitrequest -> timer_12_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_12_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // timer_12_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_12_s1_translator:uav_burstcount
	wire  [31:0] timer_12_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                               // timer_12_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_12_s1_translator:uav_writedata
	wire  [10:0] timer_12_s1_translator_avalon_universal_slave_0_agent_m0_address;                                 // timer_12_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_12_s1_translator:uav_address
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_m0_write;                                   // timer_12_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_12_s1_translator:uav_write
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                    // timer_12_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_12_s1_translator:uav_lock
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_m0_read;                                    // timer_12_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_12_s1_translator:uav_read
	wire  [31:0] timer_12_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                // timer_12_s1_translator:uav_readdata -> timer_12_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // timer_12_s1_translator:uav_readdatavalid -> timer_12_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // timer_12_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_12_s1_translator:uav_debugaccess
	wire   [3:0] timer_12_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // timer_12_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_12_s1_translator:uav_byteenable
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // timer_12_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // timer_12_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // timer_12_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                             // timer_12_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_12_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_12_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_12_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_12_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_12_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // timer_12_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // timer_12_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_12_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_12_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // timer_12_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_12_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // timer_12_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_12_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_032_src_endofpacket;                                                                 // cmd_xbar_mux_032:src_endofpacket -> timer_12_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_032_src_valid;                                                                       // cmd_xbar_mux_032:src_valid -> timer_12_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_032_src_startofpacket;                                                               // cmd_xbar_mux_032:src_startofpacket -> timer_12_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_032_src_data;                                                                        // cmd_xbar_mux_032:src_data -> timer_12_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_032_src_channel;                                                                     // cmd_xbar_mux_032:src_channel -> timer_12_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_032_src_ready;                                                                       // timer_12_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_032:src_ready
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // timer_13_s1_translator:uav_waitrequest -> timer_13_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_13_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // timer_13_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_13_s1_translator:uav_burstcount
	wire  [31:0] timer_13_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                               // timer_13_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_13_s1_translator:uav_writedata
	wire  [10:0] timer_13_s1_translator_avalon_universal_slave_0_agent_m0_address;                                 // timer_13_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_13_s1_translator:uav_address
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_m0_write;                                   // timer_13_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_13_s1_translator:uav_write
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                    // timer_13_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_13_s1_translator:uav_lock
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_m0_read;                                    // timer_13_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_13_s1_translator:uav_read
	wire  [31:0] timer_13_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                // timer_13_s1_translator:uav_readdata -> timer_13_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // timer_13_s1_translator:uav_readdatavalid -> timer_13_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // timer_13_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_13_s1_translator:uav_debugaccess
	wire   [3:0] timer_13_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // timer_13_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_13_s1_translator:uav_byteenable
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // timer_13_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // timer_13_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // timer_13_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                             // timer_13_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_13_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_13_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_13_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_13_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_13_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // timer_13_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // timer_13_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_13_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_13_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // timer_13_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_13_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // timer_13_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_13_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_033_src_endofpacket;                                                                 // cmd_xbar_mux_033:src_endofpacket -> timer_13_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_033_src_valid;                                                                       // cmd_xbar_mux_033:src_valid -> timer_13_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_033_src_startofpacket;                                                               // cmd_xbar_mux_033:src_startofpacket -> timer_13_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_033_src_data;                                                                        // cmd_xbar_mux_033:src_data -> timer_13_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_033_src_channel;                                                                     // cmd_xbar_mux_033:src_channel -> timer_13_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_033_src_ready;                                                                       // timer_13_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_033:src_ready
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // timer_14_s1_translator:uav_waitrequest -> timer_14_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_14_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // timer_14_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_14_s1_translator:uav_burstcount
	wire  [31:0] timer_14_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                               // timer_14_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_14_s1_translator:uav_writedata
	wire  [10:0] timer_14_s1_translator_avalon_universal_slave_0_agent_m0_address;                                 // timer_14_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_14_s1_translator:uav_address
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_m0_write;                                   // timer_14_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_14_s1_translator:uav_write
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                    // timer_14_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_14_s1_translator:uav_lock
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_m0_read;                                    // timer_14_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_14_s1_translator:uav_read
	wire  [31:0] timer_14_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                // timer_14_s1_translator:uav_readdata -> timer_14_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // timer_14_s1_translator:uav_readdatavalid -> timer_14_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // timer_14_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_14_s1_translator:uav_debugaccess
	wire   [3:0] timer_14_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // timer_14_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_14_s1_translator:uav_byteenable
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // timer_14_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // timer_14_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // timer_14_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                             // timer_14_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_14_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_14_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_14_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_14_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_14_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // timer_14_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // timer_14_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_14_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_14_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // timer_14_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_14_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // timer_14_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_14_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_034_src_endofpacket;                                                                 // cmd_xbar_mux_034:src_endofpacket -> timer_14_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_034_src_valid;                                                                       // cmd_xbar_mux_034:src_valid -> timer_14_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_034_src_startofpacket;                                                               // cmd_xbar_mux_034:src_startofpacket -> timer_14_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_034_src_data;                                                                        // cmd_xbar_mux_034:src_data -> timer_14_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_034_src_channel;                                                                     // cmd_xbar_mux_034:src_channel -> timer_14_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_034_src_ready;                                                                       // timer_14_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_034:src_ready
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest;                             // timer_15_s1_translator:uav_waitrequest -> timer_15_s1_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] timer_15_s1_translator_avalon_universal_slave_0_agent_m0_burstcount;                              // timer_15_s1_translator_avalon_universal_slave_0_agent:m0_burstcount -> timer_15_s1_translator:uav_burstcount
	wire  [31:0] timer_15_s1_translator_avalon_universal_slave_0_agent_m0_writedata;                               // timer_15_s1_translator_avalon_universal_slave_0_agent:m0_writedata -> timer_15_s1_translator:uav_writedata
	wire  [10:0] timer_15_s1_translator_avalon_universal_slave_0_agent_m0_address;                                 // timer_15_s1_translator_avalon_universal_slave_0_agent:m0_address -> timer_15_s1_translator:uav_address
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_m0_write;                                   // timer_15_s1_translator_avalon_universal_slave_0_agent:m0_write -> timer_15_s1_translator:uav_write
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_m0_lock;                                    // timer_15_s1_translator_avalon_universal_slave_0_agent:m0_lock -> timer_15_s1_translator:uav_lock
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_m0_read;                                    // timer_15_s1_translator_avalon_universal_slave_0_agent:m0_read -> timer_15_s1_translator:uav_read
	wire  [31:0] timer_15_s1_translator_avalon_universal_slave_0_agent_m0_readdata;                                // timer_15_s1_translator:uav_readdata -> timer_15_s1_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                           // timer_15_s1_translator:uav_readdatavalid -> timer_15_s1_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess;                             // timer_15_s1_translator_avalon_universal_slave_0_agent:m0_debugaccess -> timer_15_s1_translator:uav_debugaccess
	wire   [3:0] timer_15_s1_translator_avalon_universal_slave_0_agent_m0_byteenable;                              // timer_15_s1_translator_avalon_universal_slave_0_agent:m0_byteenable -> timer_15_s1_translator:uav_byteenable
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                      // timer_15_s1_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_valid;                            // timer_15_s1_translator_avalon_universal_slave_0_agent:rf_source_valid -> timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                    // timer_15_s1_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_data;                             // timer_15_s1_translator_avalon_universal_slave_0_agent:rf_source_data -> timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_ready;                            // timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> timer_15_s1_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                   // timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> timer_15_s1_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                         // timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> timer_15_s1_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;                 // timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> timer_15_s1_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                          // timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> timer_15_s1_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                         // timer_15_s1_translator_avalon_universal_slave_0_agent:rf_sink_ready -> timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                       // timer_15_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> timer_15_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] timer_15_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                        // timer_15_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> timer_15_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                       // timer_15_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> timer_15_s1_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         cmd_xbar_mux_035_src_endofpacket;                                                                 // cmd_xbar_mux_035:src_endofpacket -> timer_15_s1_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_035_src_valid;                                                                       // cmd_xbar_mux_035:src_valid -> timer_15_s1_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_035_src_startofpacket;                                                               // cmd_xbar_mux_035:src_startofpacket -> timer_15_s1_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_035_src_data;                                                                        // cmd_xbar_mux_035:src_data -> timer_15_s1_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_035_src_channel;                                                                     // cmd_xbar_mux_035:src_channel -> timer_15_s1_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_035_src_ready;                                                                       // timer_15_s1_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_035:src_ready
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest;                           // pll_pll_slave_translator:uav_waitrequest -> pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_waitrequest
	wire   [2:0] pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_burstcount;                            // pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_burstcount -> pll_pll_slave_translator:uav_burstcount
	wire  [31:0] pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_writedata;                             // pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_writedata -> pll_pll_slave_translator:uav_writedata
	wire  [10:0] pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_address;                               // pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_address -> pll_pll_slave_translator:uav_address
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_write;                                 // pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_write -> pll_pll_slave_translator:uav_write
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_lock;                                  // pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_lock -> pll_pll_slave_translator:uav_lock
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_read;                                  // pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_read -> pll_pll_slave_translator:uav_read
	wire  [31:0] pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_readdata;                              // pll_pll_slave_translator:uav_readdata -> pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_readdata
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid;                         // pll_pll_slave_translator:uav_readdatavalid -> pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_readdatavalid
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess;                           // pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_debugaccess -> pll_pll_slave_translator:uav_debugaccess
	wire   [3:0] pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_byteenable;                            // pll_pll_slave_translator_avalon_universal_slave_0_agent:m0_byteenable -> pll_pll_slave_translator:uav_byteenable
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket;                    // pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_source_endofpacket -> pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_endofpacket
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_valid;                          // pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_source_valid -> pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_valid
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket;                  // pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_source_startofpacket -> pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_startofpacket
	wire  [91:0] pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_data;                           // pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_source_data -> pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_data
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_ready;                          // pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:in_ready -> pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_source_ready
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket;                 // pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_endofpacket -> pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_sink_endofpacket
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid;                       // pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_valid -> pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_sink_valid
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket;               // pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_startofpacket -> pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_sink_startofpacket
	wire  [91:0] pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data;                        // pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_data -> pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_sink_data
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready;                       // pll_pll_slave_translator_avalon_universal_slave_0_agent:rf_sink_ready -> pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo:out_ready
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid;                     // pll_pll_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_valid -> pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo:in_valid
	wire  [33:0] pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data;                      // pll_pll_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_data -> pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo:in_data
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready;                     // pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo:in_ready -> pll_pll_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_src_ready
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid;                     // pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo:out_valid -> pll_pll_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_valid
	wire  [33:0] pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data;                      // pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo:out_data -> pll_pll_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_data
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready;                     // pll_pll_slave_translator_avalon_universal_slave_0_agent:rdata_fifo_sink_ready -> pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo:out_ready
	wire         cmd_xbar_mux_036_src_endofpacket;                                                                 // cmd_xbar_mux_036:src_endofpacket -> pll_pll_slave_translator_avalon_universal_slave_0_agent:cp_endofpacket
	wire         cmd_xbar_mux_036_src_valid;                                                                       // cmd_xbar_mux_036:src_valid -> pll_pll_slave_translator_avalon_universal_slave_0_agent:cp_valid
	wire         cmd_xbar_mux_036_src_startofpacket;                                                               // cmd_xbar_mux_036:src_startofpacket -> pll_pll_slave_translator_avalon_universal_slave_0_agent:cp_startofpacket
	wire  [90:0] cmd_xbar_mux_036_src_data;                                                                        // cmd_xbar_mux_036:src_data -> pll_pll_slave_translator_avalon_universal_slave_0_agent:cp_data
	wire  [36:0] cmd_xbar_mux_036_src_channel;                                                                     // cmd_xbar_mux_036:src_channel -> pll_pll_slave_translator_avalon_universal_slave_0_agent:cp_channel
	wire         cmd_xbar_mux_036_src_ready;                                                                       // pll_pll_slave_translator_avalon_universal_slave_0_agent:cp_ready -> cmd_xbar_mux_036:src_ready
	wire         clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_endofpacket;                   // clock_crossing_io_m0_translator_avalon_universal_master_0_agent:cp_endofpacket -> addr_router:sink_endofpacket
	wire         clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_valid;                         // clock_crossing_io_m0_translator_avalon_universal_master_0_agent:cp_valid -> addr_router:sink_valid
	wire         clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_startofpacket;                 // clock_crossing_io_m0_translator_avalon_universal_master_0_agent:cp_startofpacket -> addr_router:sink_startofpacket
	wire  [90:0] clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_data;                          // clock_crossing_io_m0_translator_avalon_universal_master_0_agent:cp_data -> addr_router:sink_data
	wire         clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_ready;                         // addr_router:sink_ready -> clock_crossing_io_m0_translator_avalon_universal_master_0_agent:cp_ready
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                        // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router:sink_endofpacket
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_valid;                              // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router:sink_valid
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                      // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router:sink_startofpacket
	wire  [90:0] sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_data;                               // sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router:sink_data
	wire         sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_ready;                              // id_router:sink_ready -> sys_clk_timer_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_src_endofpacket;                                                                        // id_router:src_endofpacket -> rsp_xbar_demux:sink_endofpacket
	wire         id_router_src_valid;                                                                              // id_router:src_valid -> rsp_xbar_demux:sink_valid
	wire         id_router_src_startofpacket;                                                                      // id_router:src_startofpacket -> rsp_xbar_demux:sink_startofpacket
	wire  [90:0] id_router_src_data;                                                                               // id_router:src_data -> rsp_xbar_demux:sink_data
	wire  [36:0] id_router_src_channel;                                                                            // id_router:src_channel -> rsp_xbar_demux:sink_channel
	wire         id_router_src_ready;                                                                              // rsp_xbar_demux:sink_ready -> id_router:src_ready
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;                     // sysid_control_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_001:sink_endofpacket
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_valid;                           // sysid_control_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_001:sink_valid
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;                   // sysid_control_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_001:sink_startofpacket
	wire  [90:0] sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_data;                            // sysid_control_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_001:sink_data
	wire         sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_ready;                           // id_router_001:sink_ready -> sysid_control_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_001_src_endofpacket;                                                                    // id_router_001:src_endofpacket -> rsp_xbar_demux_001:sink_endofpacket
	wire         id_router_001_src_valid;                                                                          // id_router_001:src_valid -> rsp_xbar_demux_001:sink_valid
	wire         id_router_001_src_startofpacket;                                                                  // id_router_001:src_startofpacket -> rsp_xbar_demux_001:sink_startofpacket
	wire  [90:0] id_router_001_src_data;                                                                           // id_router_001:src_data -> rsp_xbar_demux_001:sink_data
	wire  [36:0] id_router_001_src_channel;                                                                        // id_router_001:src_channel -> rsp_xbar_demux_001:sink_channel
	wire         id_router_001_src_ready;                                                                          // rsp_xbar_demux_001:sink_ready -> id_router_001:src_ready
	wire         key_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                  // key_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_002:sink_endofpacket
	wire         key_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                        // key_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_002:sink_valid
	wire         key_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                // key_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_002:sink_startofpacket
	wire  [90:0] key_s1_translator_avalon_universal_slave_0_agent_rp_data;                                         // key_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_002:sink_data
	wire         key_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                        // id_router_002:sink_ready -> key_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_002_src_endofpacket;                                                                    // id_router_002:src_endofpacket -> rsp_xbar_demux_002:sink_endofpacket
	wire         id_router_002_src_valid;                                                                          // id_router_002:src_valid -> rsp_xbar_demux_002:sink_valid
	wire         id_router_002_src_startofpacket;                                                                  // id_router_002:src_startofpacket -> rsp_xbar_demux_002:sink_startofpacket
	wire  [90:0] id_router_002_src_data;                                                                           // id_router_002:src_data -> rsp_xbar_demux_002:sink_data
	wire  [36:0] id_router_002_src_channel;                                                                        // id_router_002:src_channel -> rsp_xbar_demux_002:sink_channel
	wire         id_router_002_src_ready;                                                                          // rsp_xbar_demux_002:sink_ready -> id_router_002:src_ready
	wire         sw_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                   // sw_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_003:sink_endofpacket
	wire         sw_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                         // sw_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_003:sink_valid
	wire         sw_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                 // sw_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_003:sink_startofpacket
	wire  [90:0] sw_s1_translator_avalon_universal_slave_0_agent_rp_data;                                          // sw_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_003:sink_data
	wire         sw_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                         // id_router_003:sink_ready -> sw_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_003_src_endofpacket;                                                                    // id_router_003:src_endofpacket -> rsp_xbar_demux_003:sink_endofpacket
	wire         id_router_003_src_valid;                                                                          // id_router_003:src_valid -> rsp_xbar_demux_003:sink_valid
	wire         id_router_003_src_startofpacket;                                                                  // id_router_003:src_startofpacket -> rsp_xbar_demux_003:sink_startofpacket
	wire  [90:0] id_router_003_src_data;                                                                           // id_router_003:src_data -> rsp_xbar_demux_003:sink_data
	wire  [36:0] id_router_003_src_channel;                                                                        // id_router_003:src_channel -> rsp_xbar_demux_003:sink_channel
	wire         id_router_003_src_ready;                                                                          // rsp_xbar_demux_003:sink_ready -> id_router_003:src_ready
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                 // ledg_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_004:sink_endofpacket
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                       // ledg_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_004:sink_valid
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                               // ledg_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_004:sink_startofpacket
	wire  [90:0] ledg_s1_translator_avalon_universal_slave_0_agent_rp_data;                                        // ledg_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_004:sink_data
	wire         ledg_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                       // id_router_004:sink_ready -> ledg_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_004_src_endofpacket;                                                                    // id_router_004:src_endofpacket -> rsp_xbar_demux_004:sink_endofpacket
	wire         id_router_004_src_valid;                                                                          // id_router_004:src_valid -> rsp_xbar_demux_004:sink_valid
	wire         id_router_004_src_startofpacket;                                                                  // id_router_004:src_startofpacket -> rsp_xbar_demux_004:sink_startofpacket
	wire  [90:0] id_router_004_src_data;                                                                           // id_router_004:src_data -> rsp_xbar_demux_004:sink_data
	wire  [36:0] id_router_004_src_channel;                                                                        // id_router_004:src_channel -> rsp_xbar_demux_004:sink_channel
	wire         id_router_004_src_ready;                                                                          // rsp_xbar_demux_004:sink_ready -> id_router_004:src_ready
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                 // ledr_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_005:sink_endofpacket
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                       // ledr_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_005:sink_valid
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                               // ledr_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_005:sink_startofpacket
	wire  [90:0] ledr_s1_translator_avalon_universal_slave_0_agent_rp_data;                                        // ledr_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_005:sink_data
	wire         ledr_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                       // id_router_005:sink_ready -> ledr_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_005_src_endofpacket;                                                                    // id_router_005:src_endofpacket -> rsp_xbar_demux_005:sink_endofpacket
	wire         id_router_005_src_valid;                                                                          // id_router_005:src_valid -> rsp_xbar_demux_005:sink_valid
	wire         id_router_005_src_startofpacket;                                                                  // id_router_005:src_startofpacket -> rsp_xbar_demux_005:sink_startofpacket
	wire  [90:0] id_router_005_src_data;                                                                           // id_router_005:src_data -> rsp_xbar_demux_005:sink_data
	wire  [36:0] id_router_005_src_channel;                                                                        // id_router_005:src_channel -> rsp_xbar_demux_005:sink_channel
	wire         id_router_005_src_ready;                                                                          // rsp_xbar_demux_005:sink_ready -> id_router_005:src_ready
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                // rs232_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_006:sink_endofpacket
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                      // rs232_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_006:sink_valid
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                              // rs232_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_006:sink_startofpacket
	wire  [90:0] rs232_s1_translator_avalon_universal_slave_0_agent_rp_data;                                       // rs232_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_006:sink_data
	wire         rs232_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                      // id_router_006:sink_ready -> rs232_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_006_src_endofpacket;                                                                    // id_router_006:src_endofpacket -> rsp_xbar_demux_006:sink_endofpacket
	wire         id_router_006_src_valid;                                                                          // id_router_006:src_valid -> rsp_xbar_demux_006:sink_valid
	wire         id_router_006_src_startofpacket;                                                                  // id_router_006:src_startofpacket -> rsp_xbar_demux_006:sink_startofpacket
	wire  [90:0] id_router_006_src_data;                                                                           // id_router_006:src_data -> rsp_xbar_demux_006:sink_data
	wire  [36:0] id_router_006_src_channel;                                                                        // id_router_006:src_channel -> rsp_xbar_demux_006:sink_channel
	wire         id_router_006_src_ready;                                                                          // rsp_xbar_demux_006:sink_ready -> id_router_006:src_ready
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_007:sink_endofpacket
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                    // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_007:sink_valid
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_007:sink_startofpacket
	wire  [90:0] i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_data;                                     // i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_007:sink_data
	wire         i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router_007:sink_ready -> i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_007_src_endofpacket;                                                                    // id_router_007:src_endofpacket -> rsp_xbar_demux_007:sink_endofpacket
	wire         id_router_007_src_valid;                                                                          // id_router_007:src_valid -> rsp_xbar_demux_007:sink_valid
	wire         id_router_007_src_startofpacket;                                                                  // id_router_007:src_startofpacket -> rsp_xbar_demux_007:sink_startofpacket
	wire  [90:0] id_router_007_src_data;                                                                           // id_router_007:src_data -> rsp_xbar_demux_007:sink_data
	wire  [36:0] id_router_007_src_channel;                                                                        // id_router_007:src_channel -> rsp_xbar_demux_007:sink_channel
	wire         id_router_007_src_ready;                                                                          // rsp_xbar_demux_007:sink_ready -> id_router_007:src_ready
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_008:sink_endofpacket
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                    // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_008:sink_valid
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_008:sink_startofpacket
	wire  [90:0] i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_data;                                     // i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_008:sink_data
	wire         i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router_008:sink_ready -> i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_008_src_endofpacket;                                                                    // id_router_008:src_endofpacket -> rsp_xbar_demux_008:sink_endofpacket
	wire         id_router_008_src_valid;                                                                          // id_router_008:src_valid -> rsp_xbar_demux_008:sink_valid
	wire         id_router_008_src_startofpacket;                                                                  // id_router_008:src_startofpacket -> rsp_xbar_demux_008:sink_startofpacket
	wire  [90:0] id_router_008_src_data;                                                                           // id_router_008:src_data -> rsp_xbar_demux_008:sink_data
	wire  [36:0] id_router_008_src_channel;                                                                        // id_router_008:src_channel -> rsp_xbar_demux_008:sink_channel
	wire         id_router_008_src_ready;                                                                          // rsp_xbar_demux_008:sink_ready -> id_router_008:src_ready
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                          // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_009:sink_endofpacket
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_009:sink_valid
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                        // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_009:sink_startofpacket
	wire  [90:0] eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_data;                                 // eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_009:sink_data
	wire         eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                // id_router_009:sink_ready -> eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_009_src_endofpacket;                                                                    // id_router_009:src_endofpacket -> rsp_xbar_demux_009:sink_endofpacket
	wire         id_router_009_src_valid;                                                                          // id_router_009:src_valid -> rsp_xbar_demux_009:sink_valid
	wire         id_router_009_src_startofpacket;                                                                  // id_router_009:src_startofpacket -> rsp_xbar_demux_009:sink_startofpacket
	wire  [90:0] id_router_009_src_data;                                                                           // id_router_009:src_data -> rsp_xbar_demux_009:sink_data
	wire  [36:0] id_router_009_src_channel;                                                                        // id_router_009:src_channel -> rsp_xbar_demux_009:sink_channel
	wire         id_router_009_src_ready;                                                                          // rsp_xbar_demux_009:sink_ready -> id_router_009:src_ready
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                          // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_010:sink_endofpacket
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_010:sink_valid
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                        // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_010:sink_startofpacket
	wire  [90:0] eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_data;                                 // eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_010:sink_data
	wire         eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                // id_router_010:sink_ready -> eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_010_src_endofpacket;                                                                    // id_router_010:src_endofpacket -> rsp_xbar_demux_010:sink_endofpacket
	wire         id_router_010_src_valid;                                                                          // id_router_010:src_valid -> rsp_xbar_demux_010:sink_valid
	wire         id_router_010_src_startofpacket;                                                                  // id_router_010:src_startofpacket -> rsp_xbar_demux_010:sink_startofpacket
	wire  [90:0] id_router_010_src_data;                                                                           // id_router_010:src_data -> rsp_xbar_demux_010:sink_data
	wire  [36:0] id_router_010_src_channel;                                                                        // id_router_010:src_channel -> rsp_xbar_demux_010:sink_channel
	wire         id_router_010_src_ready;                                                                          // rsp_xbar_demux_010:sink_ready -> id_router_010:src_ready
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;                       // lcd_control_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_011:sink_endofpacket
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_valid;                             // lcd_control_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_011:sink_valid
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;                     // lcd_control_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_011:sink_startofpacket
	wire  [90:0] lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_data;                              // lcd_control_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_011:sink_data
	wire         lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_ready;                             // id_router_011:sink_ready -> lcd_control_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_011_src_endofpacket;                                                                    // id_router_011:src_endofpacket -> rsp_xbar_demux_011:sink_endofpacket
	wire         id_router_011_src_valid;                                                                          // id_router_011:src_valid -> rsp_xbar_demux_011:sink_valid
	wire         id_router_011_src_startofpacket;                                                                  // id_router_011:src_startofpacket -> rsp_xbar_demux_011:sink_startofpacket
	wire  [90:0] id_router_011_src_data;                                                                           // id_router_011:src_data -> rsp_xbar_demux_011:sink_data
	wire  [36:0] id_router_011_src_channel;                                                                        // id_router_011:src_channel -> rsp_xbar_demux_011:sink_channel
	wire         id_router_011_src_ready;                                                                          // rsp_xbar_demux_011:sink_ready -> id_router_011:src_ready
	wire         ir_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                                   // ir_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_012:sink_endofpacket
	wire         ir_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                         // ir_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_012:sink_valid
	wire         ir_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                                 // ir_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_012:sink_startofpacket
	wire  [90:0] ir_s1_translator_avalon_universal_slave_0_agent_rp_data;                                          // ir_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_012:sink_data
	wire         ir_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                         // id_router_012:sink_ready -> ir_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_012_src_endofpacket;                                                                    // id_router_012:src_endofpacket -> rsp_xbar_demux_012:sink_endofpacket
	wire         id_router_012_src_valid;                                                                          // id_router_012:src_valid -> rsp_xbar_demux_012:sink_valid
	wire         id_router_012_src_startofpacket;                                                                  // id_router_012:src_startofpacket -> rsp_xbar_demux_012:sink_startofpacket
	wire  [90:0] id_router_012_src_data;                                                                           // id_router_012:src_data -> rsp_xbar_demux_012:sink_data
	wire  [36:0] id_router_012_src_channel;                                                                        // id_router_012:src_channel -> rsp_xbar_demux_012:sink_channel
	wire         id_router_012_src_ready;                                                                          // rsp_xbar_demux_012:sink_ready -> id_router_012:src_ready
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;                       // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_013:sink_endofpacket
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_valid;                             // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_013:sink_valid
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;                     // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_013:sink_startofpacket
	wire  [90:0] seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_data;                              // seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_013:sink_data
	wire         seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_ready;                             // id_router_013:sink_ready -> seg7_avalon_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_013_src_endofpacket;                                                                    // id_router_013:src_endofpacket -> rsp_xbar_demux_013:sink_endofpacket
	wire         id_router_013_src_valid;                                                                          // id_router_013:src_valid -> rsp_xbar_demux_013:sink_valid
	wire         id_router_013_src_startofpacket;                                                                  // id_router_013:src_startofpacket -> rsp_xbar_demux_013:sink_startofpacket
	wire  [90:0] id_router_013_src_data;                                                                           // id_router_013:src_data -> rsp_xbar_demux_013:sink_data
	wire  [36:0] id_router_013_src_channel;                                                                        // id_router_013:src_channel -> rsp_xbar_demux_013:sink_channel
	wire         id_router_013_src_ready;                                                                          // rsp_xbar_demux_013:sink_ready -> id_router_013:src_ready
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                               // sd_clk_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_014:sink_endofpacket
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                     // sd_clk_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_014:sink_valid
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                             // sd_clk_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_014:sink_startofpacket
	wire  [90:0] sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_data;                                      // sd_clk_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_014:sink_data
	wire         sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                     // id_router_014:sink_ready -> sd_clk_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_014_src_endofpacket;                                                                    // id_router_014:src_endofpacket -> rsp_xbar_demux_014:sink_endofpacket
	wire         id_router_014_src_valid;                                                                          // id_router_014:src_valid -> rsp_xbar_demux_014:sink_valid
	wire         id_router_014_src_startofpacket;                                                                  // id_router_014:src_startofpacket -> rsp_xbar_demux_014:sink_startofpacket
	wire  [90:0] id_router_014_src_data;                                                                           // id_router_014:src_data -> rsp_xbar_demux_014:sink_data
	wire  [36:0] id_router_014_src_channel;                                                                        // id_router_014:src_channel -> rsp_xbar_demux_014:sink_channel
	wire         id_router_014_src_ready;                                                                          // rsp_xbar_demux_014:sink_ready -> id_router_014:src_ready
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                               // sd_cmd_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_015:sink_endofpacket
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                     // sd_cmd_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_015:sink_valid
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                             // sd_cmd_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_015:sink_startofpacket
	wire  [90:0] sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_data;                                      // sd_cmd_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_015:sink_data
	wire         sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                     // id_router_015:sink_ready -> sd_cmd_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_015_src_endofpacket;                                                                    // id_router_015:src_endofpacket -> rsp_xbar_demux_015:sink_endofpacket
	wire         id_router_015_src_valid;                                                                          // id_router_015:src_valid -> rsp_xbar_demux_015:sink_valid
	wire         id_router_015_src_startofpacket;                                                                  // id_router_015:src_startofpacket -> rsp_xbar_demux_015:sink_startofpacket
	wire  [90:0] id_router_015_src_data;                                                                           // id_router_015:src_data -> rsp_xbar_demux_015:sink_data
	wire  [36:0] id_router_015_src_channel;                                                                        // id_router_015:src_channel -> rsp_xbar_demux_015:sink_channel
	wire         id_router_015_src_ready;                                                                          // rsp_xbar_demux_015:sink_ready -> id_router_015:src_ready
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                               // sd_dat_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_016:sink_endofpacket
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                     // sd_dat_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_016:sink_valid
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                             // sd_dat_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_016:sink_startofpacket
	wire  [90:0] sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_data;                                      // sd_dat_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_016:sink_data
	wire         sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                     // id_router_016:sink_ready -> sd_dat_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_016_src_endofpacket;                                                                    // id_router_016:src_endofpacket -> rsp_xbar_demux_016:sink_endofpacket
	wire         id_router_016_src_valid;                                                                          // id_router_016:src_valid -> rsp_xbar_demux_016:sink_valid
	wire         id_router_016_src_startofpacket;                                                                  // id_router_016:src_startofpacket -> rsp_xbar_demux_016:sink_startofpacket
	wire  [90:0] id_router_016_src_data;                                                                           // id_router_016:src_data -> rsp_xbar_demux_016:sink_data
	wire  [36:0] id_router_016_src_channel;                                                                        // id_router_016:src_channel -> rsp_xbar_demux_016:sink_channel
	wire         id_router_016_src_ready;                                                                          // rsp_xbar_demux_016:sink_ready -> id_router_016:src_ready
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_017:sink_endofpacket
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                    // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_017:sink_valid
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_017:sink_startofpacket
	wire  [90:0] sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_data;                                     // sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_017:sink_data
	wire         sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router_017:sink_ready -> sd_wp_n_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_017_src_endofpacket;                                                                    // id_router_017:src_endofpacket -> rsp_xbar_demux_017:sink_endofpacket
	wire         id_router_017_src_valid;                                                                          // id_router_017:src_valid -> rsp_xbar_demux_017:sink_valid
	wire         id_router_017_src_startofpacket;                                                                  // id_router_017:src_startofpacket -> rsp_xbar_demux_017:sink_startofpacket
	wire  [90:0] id_router_017_src_data;                                                                           // id_router_017:src_data -> rsp_xbar_demux_017:sink_data
	wire  [36:0] id_router_017_src_channel;                                                                        // id_router_017:src_channel -> rsp_xbar_demux_017:sink_channel
	wire         id_router_017_src_ready;                                                                          // rsp_xbar_demux_017:sink_ready -> id_router_017:src_ready
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;             // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_018:sink_endofpacket
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid;                   // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_018:sink_valid
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;           // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_018:sink_startofpacket
	wire  [90:0] jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data;                    // jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_018:sink_data
	wire         jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready;                   // id_router_018:sink_ready -> jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_018_src_endofpacket;                                                                    // id_router_018:src_endofpacket -> rsp_xbar_demux_018:sink_endofpacket
	wire         id_router_018_src_valid;                                                                          // id_router_018:src_valid -> rsp_xbar_demux_018:sink_valid
	wire         id_router_018_src_startofpacket;                                                                  // id_router_018:src_startofpacket -> rsp_xbar_demux_018:sink_startofpacket
	wire  [90:0] id_router_018_src_data;                                                                           // id_router_018:src_data -> rsp_xbar_demux_018:sink_data
	wire  [36:0] id_router_018_src_channel;                                                                        // id_router_018:src_channel -> rsp_xbar_demux_018:sink_channel
	wire         id_router_018_src_ready;                                                                          // rsp_xbar_demux_018:sink_ready -> id_router_018:src_ready
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_endofpacket;                 // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_019:sink_endofpacket
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_valid;                       // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_019:sink_valid
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_startofpacket;               // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_019:sink_startofpacket
	wire  [90:0] sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_data;                        // sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rp_data -> id_router_019:sink_data
	wire         sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_ready;                       // id_router_019:sink_ready -> sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_019_src_endofpacket;                                                                    // id_router_019:src_endofpacket -> rsp_xbar_demux_019:sink_endofpacket
	wire         id_router_019_src_valid;                                                                          // id_router_019:src_valid -> rsp_xbar_demux_019:sink_valid
	wire         id_router_019_src_startofpacket;                                                                  // id_router_019:src_startofpacket -> rsp_xbar_demux_019:sink_startofpacket
	wire  [90:0] id_router_019_src_data;                                                                           // id_router_019:src_data -> rsp_xbar_demux_019:sink_data
	wire  [36:0] id_router_019_src_channel;                                                                        // id_router_019:src_channel -> rsp_xbar_demux_019:sink_channel
	wire         id_router_019_src_ready;                                                                          // rsp_xbar_demux_019:sink_ready -> id_router_019:src_ready
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // timer_0_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_020:sink_endofpacket
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                    // timer_0_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_020:sink_valid
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // timer_0_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_020:sink_startofpacket
	wire  [90:0] timer_0_s1_translator_avalon_universal_slave_0_agent_rp_data;                                     // timer_0_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_020:sink_data
	wire         timer_0_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router_020:sink_ready -> timer_0_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_020_src_endofpacket;                                                                    // id_router_020:src_endofpacket -> rsp_xbar_demux_020:sink_endofpacket
	wire         id_router_020_src_valid;                                                                          // id_router_020:src_valid -> rsp_xbar_demux_020:sink_valid
	wire         id_router_020_src_startofpacket;                                                                  // id_router_020:src_startofpacket -> rsp_xbar_demux_020:sink_startofpacket
	wire  [90:0] id_router_020_src_data;                                                                           // id_router_020:src_data -> rsp_xbar_demux_020:sink_data
	wire  [36:0] id_router_020_src_channel;                                                                        // id_router_020:src_channel -> rsp_xbar_demux_020:sink_channel
	wire         id_router_020_src_ready;                                                                          // rsp_xbar_demux_020:sink_ready -> id_router_020:src_ready
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // timer_1_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_021:sink_endofpacket
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                    // timer_1_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_021:sink_valid
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // timer_1_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_021:sink_startofpacket
	wire  [90:0] timer_1_s1_translator_avalon_universal_slave_0_agent_rp_data;                                     // timer_1_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_021:sink_data
	wire         timer_1_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router_021:sink_ready -> timer_1_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_021_src_endofpacket;                                                                    // id_router_021:src_endofpacket -> rsp_xbar_demux_021:sink_endofpacket
	wire         id_router_021_src_valid;                                                                          // id_router_021:src_valid -> rsp_xbar_demux_021:sink_valid
	wire         id_router_021_src_startofpacket;                                                                  // id_router_021:src_startofpacket -> rsp_xbar_demux_021:sink_startofpacket
	wire  [90:0] id_router_021_src_data;                                                                           // id_router_021:src_data -> rsp_xbar_demux_021:sink_data
	wire  [36:0] id_router_021_src_channel;                                                                        // id_router_021:src_channel -> rsp_xbar_demux_021:sink_channel
	wire         id_router_021_src_ready;                                                                          // rsp_xbar_demux_021:sink_ready -> id_router_021:src_ready
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // timer_2_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_022:sink_endofpacket
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                    // timer_2_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_022:sink_valid
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // timer_2_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_022:sink_startofpacket
	wire  [90:0] timer_2_s1_translator_avalon_universal_slave_0_agent_rp_data;                                     // timer_2_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_022:sink_data
	wire         timer_2_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router_022:sink_ready -> timer_2_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_022_src_endofpacket;                                                                    // id_router_022:src_endofpacket -> rsp_xbar_demux_022:sink_endofpacket
	wire         id_router_022_src_valid;                                                                          // id_router_022:src_valid -> rsp_xbar_demux_022:sink_valid
	wire         id_router_022_src_startofpacket;                                                                  // id_router_022:src_startofpacket -> rsp_xbar_demux_022:sink_startofpacket
	wire  [90:0] id_router_022_src_data;                                                                           // id_router_022:src_data -> rsp_xbar_demux_022:sink_data
	wire  [36:0] id_router_022_src_channel;                                                                        // id_router_022:src_channel -> rsp_xbar_demux_022:sink_channel
	wire         id_router_022_src_ready;                                                                          // rsp_xbar_demux_022:sink_ready -> id_router_022:src_ready
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // timer_3_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_023:sink_endofpacket
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                    // timer_3_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_023:sink_valid
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // timer_3_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_023:sink_startofpacket
	wire  [90:0] timer_3_s1_translator_avalon_universal_slave_0_agent_rp_data;                                     // timer_3_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_023:sink_data
	wire         timer_3_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router_023:sink_ready -> timer_3_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_023_src_endofpacket;                                                                    // id_router_023:src_endofpacket -> rsp_xbar_demux_023:sink_endofpacket
	wire         id_router_023_src_valid;                                                                          // id_router_023:src_valid -> rsp_xbar_demux_023:sink_valid
	wire         id_router_023_src_startofpacket;                                                                  // id_router_023:src_startofpacket -> rsp_xbar_demux_023:sink_startofpacket
	wire  [90:0] id_router_023_src_data;                                                                           // id_router_023:src_data -> rsp_xbar_demux_023:sink_data
	wire  [36:0] id_router_023_src_channel;                                                                        // id_router_023:src_channel -> rsp_xbar_demux_023:sink_channel
	wire         id_router_023_src_ready;                                                                          // rsp_xbar_demux_023:sink_ready -> id_router_023:src_ready
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // timer_4_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_024:sink_endofpacket
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                    // timer_4_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_024:sink_valid
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // timer_4_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_024:sink_startofpacket
	wire  [90:0] timer_4_s1_translator_avalon_universal_slave_0_agent_rp_data;                                     // timer_4_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_024:sink_data
	wire         timer_4_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router_024:sink_ready -> timer_4_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_024_src_endofpacket;                                                                    // id_router_024:src_endofpacket -> rsp_xbar_demux_024:sink_endofpacket
	wire         id_router_024_src_valid;                                                                          // id_router_024:src_valid -> rsp_xbar_demux_024:sink_valid
	wire         id_router_024_src_startofpacket;                                                                  // id_router_024:src_startofpacket -> rsp_xbar_demux_024:sink_startofpacket
	wire  [90:0] id_router_024_src_data;                                                                           // id_router_024:src_data -> rsp_xbar_demux_024:sink_data
	wire  [36:0] id_router_024_src_channel;                                                                        // id_router_024:src_channel -> rsp_xbar_demux_024:sink_channel
	wire         id_router_024_src_ready;                                                                          // rsp_xbar_demux_024:sink_ready -> id_router_024:src_ready
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // timer_5_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_025:sink_endofpacket
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                    // timer_5_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_025:sink_valid
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // timer_5_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_025:sink_startofpacket
	wire  [90:0] timer_5_s1_translator_avalon_universal_slave_0_agent_rp_data;                                     // timer_5_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_025:sink_data
	wire         timer_5_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router_025:sink_ready -> timer_5_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_025_src_endofpacket;                                                                    // id_router_025:src_endofpacket -> rsp_xbar_demux_025:sink_endofpacket
	wire         id_router_025_src_valid;                                                                          // id_router_025:src_valid -> rsp_xbar_demux_025:sink_valid
	wire         id_router_025_src_startofpacket;                                                                  // id_router_025:src_startofpacket -> rsp_xbar_demux_025:sink_startofpacket
	wire  [90:0] id_router_025_src_data;                                                                           // id_router_025:src_data -> rsp_xbar_demux_025:sink_data
	wire  [36:0] id_router_025_src_channel;                                                                        // id_router_025:src_channel -> rsp_xbar_demux_025:sink_channel
	wire         id_router_025_src_ready;                                                                          // rsp_xbar_demux_025:sink_ready -> id_router_025:src_ready
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // timer_6_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_026:sink_endofpacket
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                    // timer_6_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_026:sink_valid
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // timer_6_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_026:sink_startofpacket
	wire  [90:0] timer_6_s1_translator_avalon_universal_slave_0_agent_rp_data;                                     // timer_6_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_026:sink_data
	wire         timer_6_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router_026:sink_ready -> timer_6_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_026_src_endofpacket;                                                                    // id_router_026:src_endofpacket -> rsp_xbar_demux_026:sink_endofpacket
	wire         id_router_026_src_valid;                                                                          // id_router_026:src_valid -> rsp_xbar_demux_026:sink_valid
	wire         id_router_026_src_startofpacket;                                                                  // id_router_026:src_startofpacket -> rsp_xbar_demux_026:sink_startofpacket
	wire  [90:0] id_router_026_src_data;                                                                           // id_router_026:src_data -> rsp_xbar_demux_026:sink_data
	wire  [36:0] id_router_026_src_channel;                                                                        // id_router_026:src_channel -> rsp_xbar_demux_026:sink_channel
	wire         id_router_026_src_ready;                                                                          // rsp_xbar_demux_026:sink_ready -> id_router_026:src_ready
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // timer_7_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_027:sink_endofpacket
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                    // timer_7_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_027:sink_valid
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // timer_7_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_027:sink_startofpacket
	wire  [90:0] timer_7_s1_translator_avalon_universal_slave_0_agent_rp_data;                                     // timer_7_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_027:sink_data
	wire         timer_7_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router_027:sink_ready -> timer_7_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_027_src_endofpacket;                                                                    // id_router_027:src_endofpacket -> rsp_xbar_demux_027:sink_endofpacket
	wire         id_router_027_src_valid;                                                                          // id_router_027:src_valid -> rsp_xbar_demux_027:sink_valid
	wire         id_router_027_src_startofpacket;                                                                  // id_router_027:src_startofpacket -> rsp_xbar_demux_027:sink_startofpacket
	wire  [90:0] id_router_027_src_data;                                                                           // id_router_027:src_data -> rsp_xbar_demux_027:sink_data
	wire  [36:0] id_router_027_src_channel;                                                                        // id_router_027:src_channel -> rsp_xbar_demux_027:sink_channel
	wire         id_router_027_src_ready;                                                                          // rsp_xbar_demux_027:sink_ready -> id_router_027:src_ready
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // timer_8_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_028:sink_endofpacket
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                    // timer_8_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_028:sink_valid
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // timer_8_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_028:sink_startofpacket
	wire  [90:0] timer_8_s1_translator_avalon_universal_slave_0_agent_rp_data;                                     // timer_8_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_028:sink_data
	wire         timer_8_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router_028:sink_ready -> timer_8_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_028_src_endofpacket;                                                                    // id_router_028:src_endofpacket -> rsp_xbar_demux_028:sink_endofpacket
	wire         id_router_028_src_valid;                                                                          // id_router_028:src_valid -> rsp_xbar_demux_028:sink_valid
	wire         id_router_028_src_startofpacket;                                                                  // id_router_028:src_startofpacket -> rsp_xbar_demux_028:sink_startofpacket
	wire  [90:0] id_router_028_src_data;                                                                           // id_router_028:src_data -> rsp_xbar_demux_028:sink_data
	wire  [36:0] id_router_028_src_channel;                                                                        // id_router_028:src_channel -> rsp_xbar_demux_028:sink_channel
	wire         id_router_028_src_ready;                                                                          // rsp_xbar_demux_028:sink_ready -> id_router_028:src_ready
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                              // timer_9_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_029:sink_endofpacket
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                    // timer_9_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_029:sink_valid
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                            // timer_9_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_029:sink_startofpacket
	wire  [90:0] timer_9_s1_translator_avalon_universal_slave_0_agent_rp_data;                                     // timer_9_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_029:sink_data
	wire         timer_9_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                    // id_router_029:sink_ready -> timer_9_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_029_src_endofpacket;                                                                    // id_router_029:src_endofpacket -> rsp_xbar_demux_029:sink_endofpacket
	wire         id_router_029_src_valid;                                                                          // id_router_029:src_valid -> rsp_xbar_demux_029:sink_valid
	wire         id_router_029_src_startofpacket;                                                                  // id_router_029:src_startofpacket -> rsp_xbar_demux_029:sink_startofpacket
	wire  [90:0] id_router_029_src_data;                                                                           // id_router_029:src_data -> rsp_xbar_demux_029:sink_data
	wire  [36:0] id_router_029_src_channel;                                                                        // id_router_029:src_channel -> rsp_xbar_demux_029:sink_channel
	wire         id_router_029_src_ready;                                                                          // rsp_xbar_demux_029:sink_ready -> id_router_029:src_ready
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // timer_10_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_030:sink_endofpacket
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                   // timer_10_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_030:sink_valid
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // timer_10_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_030:sink_startofpacket
	wire  [90:0] timer_10_s1_translator_avalon_universal_slave_0_agent_rp_data;                                    // timer_10_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_030:sink_data
	wire         timer_10_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_030:sink_ready -> timer_10_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_030_src_endofpacket;                                                                    // id_router_030:src_endofpacket -> rsp_xbar_demux_030:sink_endofpacket
	wire         id_router_030_src_valid;                                                                          // id_router_030:src_valid -> rsp_xbar_demux_030:sink_valid
	wire         id_router_030_src_startofpacket;                                                                  // id_router_030:src_startofpacket -> rsp_xbar_demux_030:sink_startofpacket
	wire  [90:0] id_router_030_src_data;                                                                           // id_router_030:src_data -> rsp_xbar_demux_030:sink_data
	wire  [36:0] id_router_030_src_channel;                                                                        // id_router_030:src_channel -> rsp_xbar_demux_030:sink_channel
	wire         id_router_030_src_ready;                                                                          // rsp_xbar_demux_030:sink_ready -> id_router_030:src_ready
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // timer_11_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_031:sink_endofpacket
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                   // timer_11_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_031:sink_valid
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // timer_11_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_031:sink_startofpacket
	wire  [90:0] timer_11_s1_translator_avalon_universal_slave_0_agent_rp_data;                                    // timer_11_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_031:sink_data
	wire         timer_11_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_031:sink_ready -> timer_11_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_031_src_endofpacket;                                                                    // id_router_031:src_endofpacket -> rsp_xbar_demux_031:sink_endofpacket
	wire         id_router_031_src_valid;                                                                          // id_router_031:src_valid -> rsp_xbar_demux_031:sink_valid
	wire         id_router_031_src_startofpacket;                                                                  // id_router_031:src_startofpacket -> rsp_xbar_demux_031:sink_startofpacket
	wire  [90:0] id_router_031_src_data;                                                                           // id_router_031:src_data -> rsp_xbar_demux_031:sink_data
	wire  [36:0] id_router_031_src_channel;                                                                        // id_router_031:src_channel -> rsp_xbar_demux_031:sink_channel
	wire         id_router_031_src_ready;                                                                          // rsp_xbar_demux_031:sink_ready -> id_router_031:src_ready
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // timer_12_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_032:sink_endofpacket
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                   // timer_12_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_032:sink_valid
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // timer_12_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_032:sink_startofpacket
	wire  [90:0] timer_12_s1_translator_avalon_universal_slave_0_agent_rp_data;                                    // timer_12_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_032:sink_data
	wire         timer_12_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_032:sink_ready -> timer_12_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_032_src_endofpacket;                                                                    // id_router_032:src_endofpacket -> rsp_xbar_demux_032:sink_endofpacket
	wire         id_router_032_src_valid;                                                                          // id_router_032:src_valid -> rsp_xbar_demux_032:sink_valid
	wire         id_router_032_src_startofpacket;                                                                  // id_router_032:src_startofpacket -> rsp_xbar_demux_032:sink_startofpacket
	wire  [90:0] id_router_032_src_data;                                                                           // id_router_032:src_data -> rsp_xbar_demux_032:sink_data
	wire  [36:0] id_router_032_src_channel;                                                                        // id_router_032:src_channel -> rsp_xbar_demux_032:sink_channel
	wire         id_router_032_src_ready;                                                                          // rsp_xbar_demux_032:sink_ready -> id_router_032:src_ready
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // timer_13_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_033:sink_endofpacket
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                   // timer_13_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_033:sink_valid
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // timer_13_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_033:sink_startofpacket
	wire  [90:0] timer_13_s1_translator_avalon_universal_slave_0_agent_rp_data;                                    // timer_13_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_033:sink_data
	wire         timer_13_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_033:sink_ready -> timer_13_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_033_src_endofpacket;                                                                    // id_router_033:src_endofpacket -> rsp_xbar_demux_033:sink_endofpacket
	wire         id_router_033_src_valid;                                                                          // id_router_033:src_valid -> rsp_xbar_demux_033:sink_valid
	wire         id_router_033_src_startofpacket;                                                                  // id_router_033:src_startofpacket -> rsp_xbar_demux_033:sink_startofpacket
	wire  [90:0] id_router_033_src_data;                                                                           // id_router_033:src_data -> rsp_xbar_demux_033:sink_data
	wire  [36:0] id_router_033_src_channel;                                                                        // id_router_033:src_channel -> rsp_xbar_demux_033:sink_channel
	wire         id_router_033_src_ready;                                                                          // rsp_xbar_demux_033:sink_ready -> id_router_033:src_ready
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // timer_14_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_034:sink_endofpacket
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                   // timer_14_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_034:sink_valid
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // timer_14_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_034:sink_startofpacket
	wire  [90:0] timer_14_s1_translator_avalon_universal_slave_0_agent_rp_data;                                    // timer_14_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_034:sink_data
	wire         timer_14_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_034:sink_ready -> timer_14_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_034_src_endofpacket;                                                                    // id_router_034:src_endofpacket -> rsp_xbar_demux_034:sink_endofpacket
	wire         id_router_034_src_valid;                                                                          // id_router_034:src_valid -> rsp_xbar_demux_034:sink_valid
	wire         id_router_034_src_startofpacket;                                                                  // id_router_034:src_startofpacket -> rsp_xbar_demux_034:sink_startofpacket
	wire  [90:0] id_router_034_src_data;                                                                           // id_router_034:src_data -> rsp_xbar_demux_034:sink_data
	wire  [36:0] id_router_034_src_channel;                                                                        // id_router_034:src_channel -> rsp_xbar_demux_034:sink_channel
	wire         id_router_034_src_ready;                                                                          // rsp_xbar_demux_034:sink_ready -> id_router_034:src_ready
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket;                             // timer_15_s1_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_035:sink_endofpacket
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_rp_valid;                                   // timer_15_s1_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_035:sink_valid
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket;                           // timer_15_s1_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_035:sink_startofpacket
	wire  [90:0] timer_15_s1_translator_avalon_universal_slave_0_agent_rp_data;                                    // timer_15_s1_translator_avalon_universal_slave_0_agent:rp_data -> id_router_035:sink_data
	wire         timer_15_s1_translator_avalon_universal_slave_0_agent_rp_ready;                                   // id_router_035:sink_ready -> timer_15_s1_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_035_src_endofpacket;                                                                    // id_router_035:src_endofpacket -> rsp_xbar_demux_035:sink_endofpacket
	wire         id_router_035_src_valid;                                                                          // id_router_035:src_valid -> rsp_xbar_demux_035:sink_valid
	wire         id_router_035_src_startofpacket;                                                                  // id_router_035:src_startofpacket -> rsp_xbar_demux_035:sink_startofpacket
	wire  [90:0] id_router_035_src_data;                                                                           // id_router_035:src_data -> rsp_xbar_demux_035:sink_data
	wire  [36:0] id_router_035_src_channel;                                                                        // id_router_035:src_channel -> rsp_xbar_demux_035:sink_channel
	wire         id_router_035_src_ready;                                                                          // rsp_xbar_demux_035:sink_ready -> id_router_035:src_ready
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket;                           // pll_pll_slave_translator_avalon_universal_slave_0_agent:rp_endofpacket -> id_router_036:sink_endofpacket
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_valid;                                 // pll_pll_slave_translator_avalon_universal_slave_0_agent:rp_valid -> id_router_036:sink_valid
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket;                         // pll_pll_slave_translator_avalon_universal_slave_0_agent:rp_startofpacket -> id_router_036:sink_startofpacket
	wire  [90:0] pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_data;                                  // pll_pll_slave_translator_avalon_universal_slave_0_agent:rp_data -> id_router_036:sink_data
	wire         pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_ready;                                 // id_router_036:sink_ready -> pll_pll_slave_translator_avalon_universal_slave_0_agent:rp_ready
	wire         id_router_036_src_endofpacket;                                                                    // id_router_036:src_endofpacket -> rsp_xbar_demux_036:sink_endofpacket
	wire         id_router_036_src_valid;                                                                          // id_router_036:src_valid -> rsp_xbar_demux_036:sink_valid
	wire         id_router_036_src_startofpacket;                                                                  // id_router_036:src_startofpacket -> rsp_xbar_demux_036:sink_startofpacket
	wire  [90:0] id_router_036_src_data;                                                                           // id_router_036:src_data -> rsp_xbar_demux_036:sink_data
	wire  [36:0] id_router_036_src_channel;                                                                        // id_router_036:src_channel -> rsp_xbar_demux_036:sink_channel
	wire         id_router_036_src_ready;                                                                          // rsp_xbar_demux_036:sink_ready -> id_router_036:src_ready
	wire         addr_router_src_endofpacket;                                                                      // addr_router:src_endofpacket -> limiter:cmd_sink_endofpacket
	wire         addr_router_src_valid;                                                                            // addr_router:src_valid -> limiter:cmd_sink_valid
	wire         addr_router_src_startofpacket;                                                                    // addr_router:src_startofpacket -> limiter:cmd_sink_startofpacket
	wire  [90:0] addr_router_src_data;                                                                             // addr_router:src_data -> limiter:cmd_sink_data
	wire  [36:0] addr_router_src_channel;                                                                          // addr_router:src_channel -> limiter:cmd_sink_channel
	wire         addr_router_src_ready;                                                                            // limiter:cmd_sink_ready -> addr_router:src_ready
	wire         limiter_cmd_src_endofpacket;                                                                      // limiter:cmd_src_endofpacket -> cmd_xbar_demux:sink_endofpacket
	wire         limiter_cmd_src_startofpacket;                                                                    // limiter:cmd_src_startofpacket -> cmd_xbar_demux:sink_startofpacket
	wire  [90:0] limiter_cmd_src_data;                                                                             // limiter:cmd_src_data -> cmd_xbar_demux:sink_data
	wire  [36:0] limiter_cmd_src_channel;                                                                          // limiter:cmd_src_channel -> cmd_xbar_demux:sink_channel
	wire         limiter_cmd_src_ready;                                                                            // cmd_xbar_demux:sink_ready -> limiter:cmd_src_ready
	wire         rsp_xbar_mux_src_endofpacket;                                                                     // rsp_xbar_mux:src_endofpacket -> limiter:rsp_sink_endofpacket
	wire         rsp_xbar_mux_src_valid;                                                                           // rsp_xbar_mux:src_valid -> limiter:rsp_sink_valid
	wire         rsp_xbar_mux_src_startofpacket;                                                                   // rsp_xbar_mux:src_startofpacket -> limiter:rsp_sink_startofpacket
	wire  [90:0] rsp_xbar_mux_src_data;                                                                            // rsp_xbar_mux:src_data -> limiter:rsp_sink_data
	wire  [36:0] rsp_xbar_mux_src_channel;                                                                         // rsp_xbar_mux:src_channel -> limiter:rsp_sink_channel
	wire         rsp_xbar_mux_src_ready;                                                                           // limiter:rsp_sink_ready -> rsp_xbar_mux:src_ready
	wire         limiter_rsp_src_endofpacket;                                                                      // limiter:rsp_src_endofpacket -> clock_crossing_io_m0_translator_avalon_universal_master_0_agent:rp_endofpacket
	wire         limiter_rsp_src_valid;                                                                            // limiter:rsp_src_valid -> clock_crossing_io_m0_translator_avalon_universal_master_0_agent:rp_valid
	wire         limiter_rsp_src_startofpacket;                                                                    // limiter:rsp_src_startofpacket -> clock_crossing_io_m0_translator_avalon_universal_master_0_agent:rp_startofpacket
	wire  [90:0] limiter_rsp_src_data;                                                                             // limiter:rsp_src_data -> clock_crossing_io_m0_translator_avalon_universal_master_0_agent:rp_data
	wire  [36:0] limiter_rsp_src_channel;                                                                          // limiter:rsp_src_channel -> clock_crossing_io_m0_translator_avalon_universal_master_0_agent:rp_channel
	wire         limiter_rsp_src_ready;                                                                            // clock_crossing_io_m0_translator_avalon_universal_master_0_agent:rp_ready -> limiter:rsp_src_ready
	wire         cmd_xbar_demux_src0_endofpacket;                                                                  // cmd_xbar_demux:src0_endofpacket -> cmd_xbar_mux:sink0_endofpacket
	wire         cmd_xbar_demux_src0_valid;                                                                        // cmd_xbar_demux:src0_valid -> cmd_xbar_mux:sink0_valid
	wire         cmd_xbar_demux_src0_startofpacket;                                                                // cmd_xbar_demux:src0_startofpacket -> cmd_xbar_mux:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src0_data;                                                                         // cmd_xbar_demux:src0_data -> cmd_xbar_mux:sink0_data
	wire  [36:0] cmd_xbar_demux_src0_channel;                                                                      // cmd_xbar_demux:src0_channel -> cmd_xbar_mux:sink0_channel
	wire         cmd_xbar_demux_src0_ready;                                                                        // cmd_xbar_mux:sink0_ready -> cmd_xbar_demux:src0_ready
	wire         cmd_xbar_demux_src1_endofpacket;                                                                  // cmd_xbar_demux:src1_endofpacket -> cmd_xbar_mux_001:sink0_endofpacket
	wire         cmd_xbar_demux_src1_valid;                                                                        // cmd_xbar_demux:src1_valid -> cmd_xbar_mux_001:sink0_valid
	wire         cmd_xbar_demux_src1_startofpacket;                                                                // cmd_xbar_demux:src1_startofpacket -> cmd_xbar_mux_001:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src1_data;                                                                         // cmd_xbar_demux:src1_data -> cmd_xbar_mux_001:sink0_data
	wire  [36:0] cmd_xbar_demux_src1_channel;                                                                      // cmd_xbar_demux:src1_channel -> cmd_xbar_mux_001:sink0_channel
	wire         cmd_xbar_demux_src1_ready;                                                                        // cmd_xbar_mux_001:sink0_ready -> cmd_xbar_demux:src1_ready
	wire         cmd_xbar_demux_src2_endofpacket;                                                                  // cmd_xbar_demux:src2_endofpacket -> cmd_xbar_mux_002:sink0_endofpacket
	wire         cmd_xbar_demux_src2_valid;                                                                        // cmd_xbar_demux:src2_valid -> cmd_xbar_mux_002:sink0_valid
	wire         cmd_xbar_demux_src2_startofpacket;                                                                // cmd_xbar_demux:src2_startofpacket -> cmd_xbar_mux_002:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src2_data;                                                                         // cmd_xbar_demux:src2_data -> cmd_xbar_mux_002:sink0_data
	wire  [36:0] cmd_xbar_demux_src2_channel;                                                                      // cmd_xbar_demux:src2_channel -> cmd_xbar_mux_002:sink0_channel
	wire         cmd_xbar_demux_src2_ready;                                                                        // cmd_xbar_mux_002:sink0_ready -> cmd_xbar_demux:src2_ready
	wire         cmd_xbar_demux_src3_endofpacket;                                                                  // cmd_xbar_demux:src3_endofpacket -> cmd_xbar_mux_003:sink0_endofpacket
	wire         cmd_xbar_demux_src3_valid;                                                                        // cmd_xbar_demux:src3_valid -> cmd_xbar_mux_003:sink0_valid
	wire         cmd_xbar_demux_src3_startofpacket;                                                                // cmd_xbar_demux:src3_startofpacket -> cmd_xbar_mux_003:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src3_data;                                                                         // cmd_xbar_demux:src3_data -> cmd_xbar_mux_003:sink0_data
	wire  [36:0] cmd_xbar_demux_src3_channel;                                                                      // cmd_xbar_demux:src3_channel -> cmd_xbar_mux_003:sink0_channel
	wire         cmd_xbar_demux_src3_ready;                                                                        // cmd_xbar_mux_003:sink0_ready -> cmd_xbar_demux:src3_ready
	wire         cmd_xbar_demux_src4_endofpacket;                                                                  // cmd_xbar_demux:src4_endofpacket -> cmd_xbar_mux_004:sink0_endofpacket
	wire         cmd_xbar_demux_src4_valid;                                                                        // cmd_xbar_demux:src4_valid -> cmd_xbar_mux_004:sink0_valid
	wire         cmd_xbar_demux_src4_startofpacket;                                                                // cmd_xbar_demux:src4_startofpacket -> cmd_xbar_mux_004:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src4_data;                                                                         // cmd_xbar_demux:src4_data -> cmd_xbar_mux_004:sink0_data
	wire  [36:0] cmd_xbar_demux_src4_channel;                                                                      // cmd_xbar_demux:src4_channel -> cmd_xbar_mux_004:sink0_channel
	wire         cmd_xbar_demux_src4_ready;                                                                        // cmd_xbar_mux_004:sink0_ready -> cmd_xbar_demux:src4_ready
	wire         cmd_xbar_demux_src5_endofpacket;                                                                  // cmd_xbar_demux:src5_endofpacket -> cmd_xbar_mux_005:sink0_endofpacket
	wire         cmd_xbar_demux_src5_valid;                                                                        // cmd_xbar_demux:src5_valid -> cmd_xbar_mux_005:sink0_valid
	wire         cmd_xbar_demux_src5_startofpacket;                                                                // cmd_xbar_demux:src5_startofpacket -> cmd_xbar_mux_005:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src5_data;                                                                         // cmd_xbar_demux:src5_data -> cmd_xbar_mux_005:sink0_data
	wire  [36:0] cmd_xbar_demux_src5_channel;                                                                      // cmd_xbar_demux:src5_channel -> cmd_xbar_mux_005:sink0_channel
	wire         cmd_xbar_demux_src5_ready;                                                                        // cmd_xbar_mux_005:sink0_ready -> cmd_xbar_demux:src5_ready
	wire         cmd_xbar_demux_src6_endofpacket;                                                                  // cmd_xbar_demux:src6_endofpacket -> cmd_xbar_mux_006:sink0_endofpacket
	wire         cmd_xbar_demux_src6_valid;                                                                        // cmd_xbar_demux:src6_valid -> cmd_xbar_mux_006:sink0_valid
	wire         cmd_xbar_demux_src6_startofpacket;                                                                // cmd_xbar_demux:src6_startofpacket -> cmd_xbar_mux_006:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src6_data;                                                                         // cmd_xbar_demux:src6_data -> cmd_xbar_mux_006:sink0_data
	wire  [36:0] cmd_xbar_demux_src6_channel;                                                                      // cmd_xbar_demux:src6_channel -> cmd_xbar_mux_006:sink0_channel
	wire         cmd_xbar_demux_src6_ready;                                                                        // cmd_xbar_mux_006:sink0_ready -> cmd_xbar_demux:src6_ready
	wire         cmd_xbar_demux_src7_endofpacket;                                                                  // cmd_xbar_demux:src7_endofpacket -> cmd_xbar_mux_007:sink0_endofpacket
	wire         cmd_xbar_demux_src7_valid;                                                                        // cmd_xbar_demux:src7_valid -> cmd_xbar_mux_007:sink0_valid
	wire         cmd_xbar_demux_src7_startofpacket;                                                                // cmd_xbar_demux:src7_startofpacket -> cmd_xbar_mux_007:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src7_data;                                                                         // cmd_xbar_demux:src7_data -> cmd_xbar_mux_007:sink0_data
	wire  [36:0] cmd_xbar_demux_src7_channel;                                                                      // cmd_xbar_demux:src7_channel -> cmd_xbar_mux_007:sink0_channel
	wire         cmd_xbar_demux_src7_ready;                                                                        // cmd_xbar_mux_007:sink0_ready -> cmd_xbar_demux:src7_ready
	wire         cmd_xbar_demux_src8_endofpacket;                                                                  // cmd_xbar_demux:src8_endofpacket -> cmd_xbar_mux_008:sink0_endofpacket
	wire         cmd_xbar_demux_src8_valid;                                                                        // cmd_xbar_demux:src8_valid -> cmd_xbar_mux_008:sink0_valid
	wire         cmd_xbar_demux_src8_startofpacket;                                                                // cmd_xbar_demux:src8_startofpacket -> cmd_xbar_mux_008:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src8_data;                                                                         // cmd_xbar_demux:src8_data -> cmd_xbar_mux_008:sink0_data
	wire  [36:0] cmd_xbar_demux_src8_channel;                                                                      // cmd_xbar_demux:src8_channel -> cmd_xbar_mux_008:sink0_channel
	wire         cmd_xbar_demux_src8_ready;                                                                        // cmd_xbar_mux_008:sink0_ready -> cmd_xbar_demux:src8_ready
	wire         cmd_xbar_demux_src9_endofpacket;                                                                  // cmd_xbar_demux:src9_endofpacket -> cmd_xbar_mux_009:sink0_endofpacket
	wire         cmd_xbar_demux_src9_valid;                                                                        // cmd_xbar_demux:src9_valid -> cmd_xbar_mux_009:sink0_valid
	wire         cmd_xbar_demux_src9_startofpacket;                                                                // cmd_xbar_demux:src9_startofpacket -> cmd_xbar_mux_009:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src9_data;                                                                         // cmd_xbar_demux:src9_data -> cmd_xbar_mux_009:sink0_data
	wire  [36:0] cmd_xbar_demux_src9_channel;                                                                      // cmd_xbar_demux:src9_channel -> cmd_xbar_mux_009:sink0_channel
	wire         cmd_xbar_demux_src9_ready;                                                                        // cmd_xbar_mux_009:sink0_ready -> cmd_xbar_demux:src9_ready
	wire         cmd_xbar_demux_src10_endofpacket;                                                                 // cmd_xbar_demux:src10_endofpacket -> cmd_xbar_mux_010:sink0_endofpacket
	wire         cmd_xbar_demux_src10_valid;                                                                       // cmd_xbar_demux:src10_valid -> cmd_xbar_mux_010:sink0_valid
	wire         cmd_xbar_demux_src10_startofpacket;                                                               // cmd_xbar_demux:src10_startofpacket -> cmd_xbar_mux_010:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src10_data;                                                                        // cmd_xbar_demux:src10_data -> cmd_xbar_mux_010:sink0_data
	wire  [36:0] cmd_xbar_demux_src10_channel;                                                                     // cmd_xbar_demux:src10_channel -> cmd_xbar_mux_010:sink0_channel
	wire         cmd_xbar_demux_src10_ready;                                                                       // cmd_xbar_mux_010:sink0_ready -> cmd_xbar_demux:src10_ready
	wire         cmd_xbar_demux_src11_endofpacket;                                                                 // cmd_xbar_demux:src11_endofpacket -> cmd_xbar_mux_011:sink0_endofpacket
	wire         cmd_xbar_demux_src11_valid;                                                                       // cmd_xbar_demux:src11_valid -> cmd_xbar_mux_011:sink0_valid
	wire         cmd_xbar_demux_src11_startofpacket;                                                               // cmd_xbar_demux:src11_startofpacket -> cmd_xbar_mux_011:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src11_data;                                                                        // cmd_xbar_demux:src11_data -> cmd_xbar_mux_011:sink0_data
	wire  [36:0] cmd_xbar_demux_src11_channel;                                                                     // cmd_xbar_demux:src11_channel -> cmd_xbar_mux_011:sink0_channel
	wire         cmd_xbar_demux_src11_ready;                                                                       // cmd_xbar_mux_011:sink0_ready -> cmd_xbar_demux:src11_ready
	wire         cmd_xbar_demux_src12_endofpacket;                                                                 // cmd_xbar_demux:src12_endofpacket -> cmd_xbar_mux_012:sink0_endofpacket
	wire         cmd_xbar_demux_src12_valid;                                                                       // cmd_xbar_demux:src12_valid -> cmd_xbar_mux_012:sink0_valid
	wire         cmd_xbar_demux_src12_startofpacket;                                                               // cmd_xbar_demux:src12_startofpacket -> cmd_xbar_mux_012:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src12_data;                                                                        // cmd_xbar_demux:src12_data -> cmd_xbar_mux_012:sink0_data
	wire  [36:0] cmd_xbar_demux_src12_channel;                                                                     // cmd_xbar_demux:src12_channel -> cmd_xbar_mux_012:sink0_channel
	wire         cmd_xbar_demux_src12_ready;                                                                       // cmd_xbar_mux_012:sink0_ready -> cmd_xbar_demux:src12_ready
	wire         cmd_xbar_demux_src13_endofpacket;                                                                 // cmd_xbar_demux:src13_endofpacket -> cmd_xbar_mux_013:sink0_endofpacket
	wire         cmd_xbar_demux_src13_valid;                                                                       // cmd_xbar_demux:src13_valid -> cmd_xbar_mux_013:sink0_valid
	wire         cmd_xbar_demux_src13_startofpacket;                                                               // cmd_xbar_demux:src13_startofpacket -> cmd_xbar_mux_013:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src13_data;                                                                        // cmd_xbar_demux:src13_data -> cmd_xbar_mux_013:sink0_data
	wire  [36:0] cmd_xbar_demux_src13_channel;                                                                     // cmd_xbar_demux:src13_channel -> cmd_xbar_mux_013:sink0_channel
	wire         cmd_xbar_demux_src13_ready;                                                                       // cmd_xbar_mux_013:sink0_ready -> cmd_xbar_demux:src13_ready
	wire         cmd_xbar_demux_src14_endofpacket;                                                                 // cmd_xbar_demux:src14_endofpacket -> cmd_xbar_mux_014:sink0_endofpacket
	wire         cmd_xbar_demux_src14_valid;                                                                       // cmd_xbar_demux:src14_valid -> cmd_xbar_mux_014:sink0_valid
	wire         cmd_xbar_demux_src14_startofpacket;                                                               // cmd_xbar_demux:src14_startofpacket -> cmd_xbar_mux_014:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src14_data;                                                                        // cmd_xbar_demux:src14_data -> cmd_xbar_mux_014:sink0_data
	wire  [36:0] cmd_xbar_demux_src14_channel;                                                                     // cmd_xbar_demux:src14_channel -> cmd_xbar_mux_014:sink0_channel
	wire         cmd_xbar_demux_src14_ready;                                                                       // cmd_xbar_mux_014:sink0_ready -> cmd_xbar_demux:src14_ready
	wire         cmd_xbar_demux_src15_endofpacket;                                                                 // cmd_xbar_demux:src15_endofpacket -> cmd_xbar_mux_015:sink0_endofpacket
	wire         cmd_xbar_demux_src15_valid;                                                                       // cmd_xbar_demux:src15_valid -> cmd_xbar_mux_015:sink0_valid
	wire         cmd_xbar_demux_src15_startofpacket;                                                               // cmd_xbar_demux:src15_startofpacket -> cmd_xbar_mux_015:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src15_data;                                                                        // cmd_xbar_demux:src15_data -> cmd_xbar_mux_015:sink0_data
	wire  [36:0] cmd_xbar_demux_src15_channel;                                                                     // cmd_xbar_demux:src15_channel -> cmd_xbar_mux_015:sink0_channel
	wire         cmd_xbar_demux_src15_ready;                                                                       // cmd_xbar_mux_015:sink0_ready -> cmd_xbar_demux:src15_ready
	wire         cmd_xbar_demux_src16_endofpacket;                                                                 // cmd_xbar_demux:src16_endofpacket -> cmd_xbar_mux_016:sink0_endofpacket
	wire         cmd_xbar_demux_src16_valid;                                                                       // cmd_xbar_demux:src16_valid -> cmd_xbar_mux_016:sink0_valid
	wire         cmd_xbar_demux_src16_startofpacket;                                                               // cmd_xbar_demux:src16_startofpacket -> cmd_xbar_mux_016:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src16_data;                                                                        // cmd_xbar_demux:src16_data -> cmd_xbar_mux_016:sink0_data
	wire  [36:0] cmd_xbar_demux_src16_channel;                                                                     // cmd_xbar_demux:src16_channel -> cmd_xbar_mux_016:sink0_channel
	wire         cmd_xbar_demux_src16_ready;                                                                       // cmd_xbar_mux_016:sink0_ready -> cmd_xbar_demux:src16_ready
	wire         cmd_xbar_demux_src17_endofpacket;                                                                 // cmd_xbar_demux:src17_endofpacket -> cmd_xbar_mux_017:sink0_endofpacket
	wire         cmd_xbar_demux_src17_valid;                                                                       // cmd_xbar_demux:src17_valid -> cmd_xbar_mux_017:sink0_valid
	wire         cmd_xbar_demux_src17_startofpacket;                                                               // cmd_xbar_demux:src17_startofpacket -> cmd_xbar_mux_017:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src17_data;                                                                        // cmd_xbar_demux:src17_data -> cmd_xbar_mux_017:sink0_data
	wire  [36:0] cmd_xbar_demux_src17_channel;                                                                     // cmd_xbar_demux:src17_channel -> cmd_xbar_mux_017:sink0_channel
	wire         cmd_xbar_demux_src17_ready;                                                                       // cmd_xbar_mux_017:sink0_ready -> cmd_xbar_demux:src17_ready
	wire         cmd_xbar_demux_src18_endofpacket;                                                                 // cmd_xbar_demux:src18_endofpacket -> cmd_xbar_mux_018:sink0_endofpacket
	wire         cmd_xbar_demux_src18_valid;                                                                       // cmd_xbar_demux:src18_valid -> cmd_xbar_mux_018:sink0_valid
	wire         cmd_xbar_demux_src18_startofpacket;                                                               // cmd_xbar_demux:src18_startofpacket -> cmd_xbar_mux_018:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src18_data;                                                                        // cmd_xbar_demux:src18_data -> cmd_xbar_mux_018:sink0_data
	wire  [36:0] cmd_xbar_demux_src18_channel;                                                                     // cmd_xbar_demux:src18_channel -> cmd_xbar_mux_018:sink0_channel
	wire         cmd_xbar_demux_src18_ready;                                                                       // cmd_xbar_mux_018:sink0_ready -> cmd_xbar_demux:src18_ready
	wire         cmd_xbar_demux_src19_endofpacket;                                                                 // cmd_xbar_demux:src19_endofpacket -> cmd_xbar_mux_019:sink0_endofpacket
	wire         cmd_xbar_demux_src19_valid;                                                                       // cmd_xbar_demux:src19_valid -> cmd_xbar_mux_019:sink0_valid
	wire         cmd_xbar_demux_src19_startofpacket;                                                               // cmd_xbar_demux:src19_startofpacket -> cmd_xbar_mux_019:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src19_data;                                                                        // cmd_xbar_demux:src19_data -> cmd_xbar_mux_019:sink0_data
	wire  [36:0] cmd_xbar_demux_src19_channel;                                                                     // cmd_xbar_demux:src19_channel -> cmd_xbar_mux_019:sink0_channel
	wire         cmd_xbar_demux_src19_ready;                                                                       // cmd_xbar_mux_019:sink0_ready -> cmd_xbar_demux:src19_ready
	wire         cmd_xbar_demux_src20_endofpacket;                                                                 // cmd_xbar_demux:src20_endofpacket -> cmd_xbar_mux_020:sink0_endofpacket
	wire         cmd_xbar_demux_src20_valid;                                                                       // cmd_xbar_demux:src20_valid -> cmd_xbar_mux_020:sink0_valid
	wire         cmd_xbar_demux_src20_startofpacket;                                                               // cmd_xbar_demux:src20_startofpacket -> cmd_xbar_mux_020:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src20_data;                                                                        // cmd_xbar_demux:src20_data -> cmd_xbar_mux_020:sink0_data
	wire  [36:0] cmd_xbar_demux_src20_channel;                                                                     // cmd_xbar_demux:src20_channel -> cmd_xbar_mux_020:sink0_channel
	wire         cmd_xbar_demux_src20_ready;                                                                       // cmd_xbar_mux_020:sink0_ready -> cmd_xbar_demux:src20_ready
	wire         cmd_xbar_demux_src21_endofpacket;                                                                 // cmd_xbar_demux:src21_endofpacket -> cmd_xbar_mux_021:sink0_endofpacket
	wire         cmd_xbar_demux_src21_valid;                                                                       // cmd_xbar_demux:src21_valid -> cmd_xbar_mux_021:sink0_valid
	wire         cmd_xbar_demux_src21_startofpacket;                                                               // cmd_xbar_demux:src21_startofpacket -> cmd_xbar_mux_021:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src21_data;                                                                        // cmd_xbar_demux:src21_data -> cmd_xbar_mux_021:sink0_data
	wire  [36:0] cmd_xbar_demux_src21_channel;                                                                     // cmd_xbar_demux:src21_channel -> cmd_xbar_mux_021:sink0_channel
	wire         cmd_xbar_demux_src21_ready;                                                                       // cmd_xbar_mux_021:sink0_ready -> cmd_xbar_demux:src21_ready
	wire         cmd_xbar_demux_src22_endofpacket;                                                                 // cmd_xbar_demux:src22_endofpacket -> cmd_xbar_mux_022:sink0_endofpacket
	wire         cmd_xbar_demux_src22_valid;                                                                       // cmd_xbar_demux:src22_valid -> cmd_xbar_mux_022:sink0_valid
	wire         cmd_xbar_demux_src22_startofpacket;                                                               // cmd_xbar_demux:src22_startofpacket -> cmd_xbar_mux_022:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src22_data;                                                                        // cmd_xbar_demux:src22_data -> cmd_xbar_mux_022:sink0_data
	wire  [36:0] cmd_xbar_demux_src22_channel;                                                                     // cmd_xbar_demux:src22_channel -> cmd_xbar_mux_022:sink0_channel
	wire         cmd_xbar_demux_src22_ready;                                                                       // cmd_xbar_mux_022:sink0_ready -> cmd_xbar_demux:src22_ready
	wire         cmd_xbar_demux_src23_endofpacket;                                                                 // cmd_xbar_demux:src23_endofpacket -> cmd_xbar_mux_023:sink0_endofpacket
	wire         cmd_xbar_demux_src23_valid;                                                                       // cmd_xbar_demux:src23_valid -> cmd_xbar_mux_023:sink0_valid
	wire         cmd_xbar_demux_src23_startofpacket;                                                               // cmd_xbar_demux:src23_startofpacket -> cmd_xbar_mux_023:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src23_data;                                                                        // cmd_xbar_demux:src23_data -> cmd_xbar_mux_023:sink0_data
	wire  [36:0] cmd_xbar_demux_src23_channel;                                                                     // cmd_xbar_demux:src23_channel -> cmd_xbar_mux_023:sink0_channel
	wire         cmd_xbar_demux_src23_ready;                                                                       // cmd_xbar_mux_023:sink0_ready -> cmd_xbar_demux:src23_ready
	wire         cmd_xbar_demux_src24_endofpacket;                                                                 // cmd_xbar_demux:src24_endofpacket -> cmd_xbar_mux_024:sink0_endofpacket
	wire         cmd_xbar_demux_src24_valid;                                                                       // cmd_xbar_demux:src24_valid -> cmd_xbar_mux_024:sink0_valid
	wire         cmd_xbar_demux_src24_startofpacket;                                                               // cmd_xbar_demux:src24_startofpacket -> cmd_xbar_mux_024:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src24_data;                                                                        // cmd_xbar_demux:src24_data -> cmd_xbar_mux_024:sink0_data
	wire  [36:0] cmd_xbar_demux_src24_channel;                                                                     // cmd_xbar_demux:src24_channel -> cmd_xbar_mux_024:sink0_channel
	wire         cmd_xbar_demux_src24_ready;                                                                       // cmd_xbar_mux_024:sink0_ready -> cmd_xbar_demux:src24_ready
	wire         cmd_xbar_demux_src25_endofpacket;                                                                 // cmd_xbar_demux:src25_endofpacket -> cmd_xbar_mux_025:sink0_endofpacket
	wire         cmd_xbar_demux_src25_valid;                                                                       // cmd_xbar_demux:src25_valid -> cmd_xbar_mux_025:sink0_valid
	wire         cmd_xbar_demux_src25_startofpacket;                                                               // cmd_xbar_demux:src25_startofpacket -> cmd_xbar_mux_025:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src25_data;                                                                        // cmd_xbar_demux:src25_data -> cmd_xbar_mux_025:sink0_data
	wire  [36:0] cmd_xbar_demux_src25_channel;                                                                     // cmd_xbar_demux:src25_channel -> cmd_xbar_mux_025:sink0_channel
	wire         cmd_xbar_demux_src25_ready;                                                                       // cmd_xbar_mux_025:sink0_ready -> cmd_xbar_demux:src25_ready
	wire         cmd_xbar_demux_src26_endofpacket;                                                                 // cmd_xbar_demux:src26_endofpacket -> cmd_xbar_mux_026:sink0_endofpacket
	wire         cmd_xbar_demux_src26_valid;                                                                       // cmd_xbar_demux:src26_valid -> cmd_xbar_mux_026:sink0_valid
	wire         cmd_xbar_demux_src26_startofpacket;                                                               // cmd_xbar_demux:src26_startofpacket -> cmd_xbar_mux_026:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src26_data;                                                                        // cmd_xbar_demux:src26_data -> cmd_xbar_mux_026:sink0_data
	wire  [36:0] cmd_xbar_demux_src26_channel;                                                                     // cmd_xbar_demux:src26_channel -> cmd_xbar_mux_026:sink0_channel
	wire         cmd_xbar_demux_src26_ready;                                                                       // cmd_xbar_mux_026:sink0_ready -> cmd_xbar_demux:src26_ready
	wire         cmd_xbar_demux_src27_endofpacket;                                                                 // cmd_xbar_demux:src27_endofpacket -> cmd_xbar_mux_027:sink0_endofpacket
	wire         cmd_xbar_demux_src27_valid;                                                                       // cmd_xbar_demux:src27_valid -> cmd_xbar_mux_027:sink0_valid
	wire         cmd_xbar_demux_src27_startofpacket;                                                               // cmd_xbar_demux:src27_startofpacket -> cmd_xbar_mux_027:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src27_data;                                                                        // cmd_xbar_demux:src27_data -> cmd_xbar_mux_027:sink0_data
	wire  [36:0] cmd_xbar_demux_src27_channel;                                                                     // cmd_xbar_demux:src27_channel -> cmd_xbar_mux_027:sink0_channel
	wire         cmd_xbar_demux_src27_ready;                                                                       // cmd_xbar_mux_027:sink0_ready -> cmd_xbar_demux:src27_ready
	wire         cmd_xbar_demux_src28_endofpacket;                                                                 // cmd_xbar_demux:src28_endofpacket -> cmd_xbar_mux_028:sink0_endofpacket
	wire         cmd_xbar_demux_src28_valid;                                                                       // cmd_xbar_demux:src28_valid -> cmd_xbar_mux_028:sink0_valid
	wire         cmd_xbar_demux_src28_startofpacket;                                                               // cmd_xbar_demux:src28_startofpacket -> cmd_xbar_mux_028:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src28_data;                                                                        // cmd_xbar_demux:src28_data -> cmd_xbar_mux_028:sink0_data
	wire  [36:0] cmd_xbar_demux_src28_channel;                                                                     // cmd_xbar_demux:src28_channel -> cmd_xbar_mux_028:sink0_channel
	wire         cmd_xbar_demux_src28_ready;                                                                       // cmd_xbar_mux_028:sink0_ready -> cmd_xbar_demux:src28_ready
	wire         cmd_xbar_demux_src29_endofpacket;                                                                 // cmd_xbar_demux:src29_endofpacket -> cmd_xbar_mux_029:sink0_endofpacket
	wire         cmd_xbar_demux_src29_valid;                                                                       // cmd_xbar_demux:src29_valid -> cmd_xbar_mux_029:sink0_valid
	wire         cmd_xbar_demux_src29_startofpacket;                                                               // cmd_xbar_demux:src29_startofpacket -> cmd_xbar_mux_029:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src29_data;                                                                        // cmd_xbar_demux:src29_data -> cmd_xbar_mux_029:sink0_data
	wire  [36:0] cmd_xbar_demux_src29_channel;                                                                     // cmd_xbar_demux:src29_channel -> cmd_xbar_mux_029:sink0_channel
	wire         cmd_xbar_demux_src29_ready;                                                                       // cmd_xbar_mux_029:sink0_ready -> cmd_xbar_demux:src29_ready
	wire         cmd_xbar_demux_src30_endofpacket;                                                                 // cmd_xbar_demux:src30_endofpacket -> cmd_xbar_mux_030:sink0_endofpacket
	wire         cmd_xbar_demux_src30_valid;                                                                       // cmd_xbar_demux:src30_valid -> cmd_xbar_mux_030:sink0_valid
	wire         cmd_xbar_demux_src30_startofpacket;                                                               // cmd_xbar_demux:src30_startofpacket -> cmd_xbar_mux_030:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src30_data;                                                                        // cmd_xbar_demux:src30_data -> cmd_xbar_mux_030:sink0_data
	wire  [36:0] cmd_xbar_demux_src30_channel;                                                                     // cmd_xbar_demux:src30_channel -> cmd_xbar_mux_030:sink0_channel
	wire         cmd_xbar_demux_src30_ready;                                                                       // cmd_xbar_mux_030:sink0_ready -> cmd_xbar_demux:src30_ready
	wire         cmd_xbar_demux_src31_endofpacket;                                                                 // cmd_xbar_demux:src31_endofpacket -> cmd_xbar_mux_031:sink0_endofpacket
	wire         cmd_xbar_demux_src31_valid;                                                                       // cmd_xbar_demux:src31_valid -> cmd_xbar_mux_031:sink0_valid
	wire         cmd_xbar_demux_src31_startofpacket;                                                               // cmd_xbar_demux:src31_startofpacket -> cmd_xbar_mux_031:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src31_data;                                                                        // cmd_xbar_demux:src31_data -> cmd_xbar_mux_031:sink0_data
	wire  [36:0] cmd_xbar_demux_src31_channel;                                                                     // cmd_xbar_demux:src31_channel -> cmd_xbar_mux_031:sink0_channel
	wire         cmd_xbar_demux_src31_ready;                                                                       // cmd_xbar_mux_031:sink0_ready -> cmd_xbar_demux:src31_ready
	wire         cmd_xbar_demux_src32_endofpacket;                                                                 // cmd_xbar_demux:src32_endofpacket -> cmd_xbar_mux_032:sink0_endofpacket
	wire         cmd_xbar_demux_src32_valid;                                                                       // cmd_xbar_demux:src32_valid -> cmd_xbar_mux_032:sink0_valid
	wire         cmd_xbar_demux_src32_startofpacket;                                                               // cmd_xbar_demux:src32_startofpacket -> cmd_xbar_mux_032:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src32_data;                                                                        // cmd_xbar_demux:src32_data -> cmd_xbar_mux_032:sink0_data
	wire  [36:0] cmd_xbar_demux_src32_channel;                                                                     // cmd_xbar_demux:src32_channel -> cmd_xbar_mux_032:sink0_channel
	wire         cmd_xbar_demux_src32_ready;                                                                       // cmd_xbar_mux_032:sink0_ready -> cmd_xbar_demux:src32_ready
	wire         cmd_xbar_demux_src33_endofpacket;                                                                 // cmd_xbar_demux:src33_endofpacket -> cmd_xbar_mux_033:sink0_endofpacket
	wire         cmd_xbar_demux_src33_valid;                                                                       // cmd_xbar_demux:src33_valid -> cmd_xbar_mux_033:sink0_valid
	wire         cmd_xbar_demux_src33_startofpacket;                                                               // cmd_xbar_demux:src33_startofpacket -> cmd_xbar_mux_033:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src33_data;                                                                        // cmd_xbar_demux:src33_data -> cmd_xbar_mux_033:sink0_data
	wire  [36:0] cmd_xbar_demux_src33_channel;                                                                     // cmd_xbar_demux:src33_channel -> cmd_xbar_mux_033:sink0_channel
	wire         cmd_xbar_demux_src33_ready;                                                                       // cmd_xbar_mux_033:sink0_ready -> cmd_xbar_demux:src33_ready
	wire         cmd_xbar_demux_src34_endofpacket;                                                                 // cmd_xbar_demux:src34_endofpacket -> cmd_xbar_mux_034:sink0_endofpacket
	wire         cmd_xbar_demux_src34_valid;                                                                       // cmd_xbar_demux:src34_valid -> cmd_xbar_mux_034:sink0_valid
	wire         cmd_xbar_demux_src34_startofpacket;                                                               // cmd_xbar_demux:src34_startofpacket -> cmd_xbar_mux_034:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src34_data;                                                                        // cmd_xbar_demux:src34_data -> cmd_xbar_mux_034:sink0_data
	wire  [36:0] cmd_xbar_demux_src34_channel;                                                                     // cmd_xbar_demux:src34_channel -> cmd_xbar_mux_034:sink0_channel
	wire         cmd_xbar_demux_src34_ready;                                                                       // cmd_xbar_mux_034:sink0_ready -> cmd_xbar_demux:src34_ready
	wire         cmd_xbar_demux_src35_endofpacket;                                                                 // cmd_xbar_demux:src35_endofpacket -> cmd_xbar_mux_035:sink0_endofpacket
	wire         cmd_xbar_demux_src35_valid;                                                                       // cmd_xbar_demux:src35_valid -> cmd_xbar_mux_035:sink0_valid
	wire         cmd_xbar_demux_src35_startofpacket;                                                               // cmd_xbar_demux:src35_startofpacket -> cmd_xbar_mux_035:sink0_startofpacket
	wire  [90:0] cmd_xbar_demux_src35_data;                                                                        // cmd_xbar_demux:src35_data -> cmd_xbar_mux_035:sink0_data
	wire  [36:0] cmd_xbar_demux_src35_channel;                                                                     // cmd_xbar_demux:src35_channel -> cmd_xbar_mux_035:sink0_channel
	wire         cmd_xbar_demux_src35_ready;                                                                       // cmd_xbar_mux_035:sink0_ready -> cmd_xbar_demux:src35_ready
	wire         rsp_xbar_demux_src0_endofpacket;                                                                  // rsp_xbar_demux:src0_endofpacket -> rsp_xbar_mux:sink0_endofpacket
	wire         rsp_xbar_demux_src0_valid;                                                                        // rsp_xbar_demux:src0_valid -> rsp_xbar_mux:sink0_valid
	wire         rsp_xbar_demux_src0_startofpacket;                                                                // rsp_xbar_demux:src0_startofpacket -> rsp_xbar_mux:sink0_startofpacket
	wire  [90:0] rsp_xbar_demux_src0_data;                                                                         // rsp_xbar_demux:src0_data -> rsp_xbar_mux:sink0_data
	wire  [36:0] rsp_xbar_demux_src0_channel;                                                                      // rsp_xbar_demux:src0_channel -> rsp_xbar_mux:sink0_channel
	wire         rsp_xbar_demux_src0_ready;                                                                        // rsp_xbar_mux:sink0_ready -> rsp_xbar_demux:src0_ready
	wire         rsp_xbar_demux_001_src0_endofpacket;                                                              // rsp_xbar_demux_001:src0_endofpacket -> rsp_xbar_mux:sink1_endofpacket
	wire         rsp_xbar_demux_001_src0_valid;                                                                    // rsp_xbar_demux_001:src0_valid -> rsp_xbar_mux:sink1_valid
	wire         rsp_xbar_demux_001_src0_startofpacket;                                                            // rsp_xbar_demux_001:src0_startofpacket -> rsp_xbar_mux:sink1_startofpacket
	wire  [90:0] rsp_xbar_demux_001_src0_data;                                                                     // rsp_xbar_demux_001:src0_data -> rsp_xbar_mux:sink1_data
	wire  [36:0] rsp_xbar_demux_001_src0_channel;                                                                  // rsp_xbar_demux_001:src0_channel -> rsp_xbar_mux:sink1_channel
	wire         rsp_xbar_demux_001_src0_ready;                                                                    // rsp_xbar_mux:sink1_ready -> rsp_xbar_demux_001:src0_ready
	wire         rsp_xbar_demux_002_src0_endofpacket;                                                              // rsp_xbar_demux_002:src0_endofpacket -> rsp_xbar_mux:sink2_endofpacket
	wire         rsp_xbar_demux_002_src0_valid;                                                                    // rsp_xbar_demux_002:src0_valid -> rsp_xbar_mux:sink2_valid
	wire         rsp_xbar_demux_002_src0_startofpacket;                                                            // rsp_xbar_demux_002:src0_startofpacket -> rsp_xbar_mux:sink2_startofpacket
	wire  [90:0] rsp_xbar_demux_002_src0_data;                                                                     // rsp_xbar_demux_002:src0_data -> rsp_xbar_mux:sink2_data
	wire  [36:0] rsp_xbar_demux_002_src0_channel;                                                                  // rsp_xbar_demux_002:src0_channel -> rsp_xbar_mux:sink2_channel
	wire         rsp_xbar_demux_002_src0_ready;                                                                    // rsp_xbar_mux:sink2_ready -> rsp_xbar_demux_002:src0_ready
	wire         rsp_xbar_demux_003_src0_endofpacket;                                                              // rsp_xbar_demux_003:src0_endofpacket -> rsp_xbar_mux:sink3_endofpacket
	wire         rsp_xbar_demux_003_src0_valid;                                                                    // rsp_xbar_demux_003:src0_valid -> rsp_xbar_mux:sink3_valid
	wire         rsp_xbar_demux_003_src0_startofpacket;                                                            // rsp_xbar_demux_003:src0_startofpacket -> rsp_xbar_mux:sink3_startofpacket
	wire  [90:0] rsp_xbar_demux_003_src0_data;                                                                     // rsp_xbar_demux_003:src0_data -> rsp_xbar_mux:sink3_data
	wire  [36:0] rsp_xbar_demux_003_src0_channel;                                                                  // rsp_xbar_demux_003:src0_channel -> rsp_xbar_mux:sink3_channel
	wire         rsp_xbar_demux_003_src0_ready;                                                                    // rsp_xbar_mux:sink3_ready -> rsp_xbar_demux_003:src0_ready
	wire         rsp_xbar_demux_004_src0_endofpacket;                                                              // rsp_xbar_demux_004:src0_endofpacket -> rsp_xbar_mux:sink4_endofpacket
	wire         rsp_xbar_demux_004_src0_valid;                                                                    // rsp_xbar_demux_004:src0_valid -> rsp_xbar_mux:sink4_valid
	wire         rsp_xbar_demux_004_src0_startofpacket;                                                            // rsp_xbar_demux_004:src0_startofpacket -> rsp_xbar_mux:sink4_startofpacket
	wire  [90:0] rsp_xbar_demux_004_src0_data;                                                                     // rsp_xbar_demux_004:src0_data -> rsp_xbar_mux:sink4_data
	wire  [36:0] rsp_xbar_demux_004_src0_channel;                                                                  // rsp_xbar_demux_004:src0_channel -> rsp_xbar_mux:sink4_channel
	wire         rsp_xbar_demux_004_src0_ready;                                                                    // rsp_xbar_mux:sink4_ready -> rsp_xbar_demux_004:src0_ready
	wire         rsp_xbar_demux_005_src0_endofpacket;                                                              // rsp_xbar_demux_005:src0_endofpacket -> rsp_xbar_mux:sink5_endofpacket
	wire         rsp_xbar_demux_005_src0_valid;                                                                    // rsp_xbar_demux_005:src0_valid -> rsp_xbar_mux:sink5_valid
	wire         rsp_xbar_demux_005_src0_startofpacket;                                                            // rsp_xbar_demux_005:src0_startofpacket -> rsp_xbar_mux:sink5_startofpacket
	wire  [90:0] rsp_xbar_demux_005_src0_data;                                                                     // rsp_xbar_demux_005:src0_data -> rsp_xbar_mux:sink5_data
	wire  [36:0] rsp_xbar_demux_005_src0_channel;                                                                  // rsp_xbar_demux_005:src0_channel -> rsp_xbar_mux:sink5_channel
	wire         rsp_xbar_demux_005_src0_ready;                                                                    // rsp_xbar_mux:sink5_ready -> rsp_xbar_demux_005:src0_ready
	wire         rsp_xbar_demux_006_src0_endofpacket;                                                              // rsp_xbar_demux_006:src0_endofpacket -> rsp_xbar_mux:sink6_endofpacket
	wire         rsp_xbar_demux_006_src0_valid;                                                                    // rsp_xbar_demux_006:src0_valid -> rsp_xbar_mux:sink6_valid
	wire         rsp_xbar_demux_006_src0_startofpacket;                                                            // rsp_xbar_demux_006:src0_startofpacket -> rsp_xbar_mux:sink6_startofpacket
	wire  [90:0] rsp_xbar_demux_006_src0_data;                                                                     // rsp_xbar_demux_006:src0_data -> rsp_xbar_mux:sink6_data
	wire  [36:0] rsp_xbar_demux_006_src0_channel;                                                                  // rsp_xbar_demux_006:src0_channel -> rsp_xbar_mux:sink6_channel
	wire         rsp_xbar_demux_006_src0_ready;                                                                    // rsp_xbar_mux:sink6_ready -> rsp_xbar_demux_006:src0_ready
	wire         rsp_xbar_demux_007_src0_endofpacket;                                                              // rsp_xbar_demux_007:src0_endofpacket -> rsp_xbar_mux:sink7_endofpacket
	wire         rsp_xbar_demux_007_src0_valid;                                                                    // rsp_xbar_demux_007:src0_valid -> rsp_xbar_mux:sink7_valid
	wire         rsp_xbar_demux_007_src0_startofpacket;                                                            // rsp_xbar_demux_007:src0_startofpacket -> rsp_xbar_mux:sink7_startofpacket
	wire  [90:0] rsp_xbar_demux_007_src0_data;                                                                     // rsp_xbar_demux_007:src0_data -> rsp_xbar_mux:sink7_data
	wire  [36:0] rsp_xbar_demux_007_src0_channel;                                                                  // rsp_xbar_demux_007:src0_channel -> rsp_xbar_mux:sink7_channel
	wire         rsp_xbar_demux_007_src0_ready;                                                                    // rsp_xbar_mux:sink7_ready -> rsp_xbar_demux_007:src0_ready
	wire         rsp_xbar_demux_008_src0_endofpacket;                                                              // rsp_xbar_demux_008:src0_endofpacket -> rsp_xbar_mux:sink8_endofpacket
	wire         rsp_xbar_demux_008_src0_valid;                                                                    // rsp_xbar_demux_008:src0_valid -> rsp_xbar_mux:sink8_valid
	wire         rsp_xbar_demux_008_src0_startofpacket;                                                            // rsp_xbar_demux_008:src0_startofpacket -> rsp_xbar_mux:sink8_startofpacket
	wire  [90:0] rsp_xbar_demux_008_src0_data;                                                                     // rsp_xbar_demux_008:src0_data -> rsp_xbar_mux:sink8_data
	wire  [36:0] rsp_xbar_demux_008_src0_channel;                                                                  // rsp_xbar_demux_008:src0_channel -> rsp_xbar_mux:sink8_channel
	wire         rsp_xbar_demux_008_src0_ready;                                                                    // rsp_xbar_mux:sink8_ready -> rsp_xbar_demux_008:src0_ready
	wire         rsp_xbar_demux_009_src0_endofpacket;                                                              // rsp_xbar_demux_009:src0_endofpacket -> rsp_xbar_mux:sink9_endofpacket
	wire         rsp_xbar_demux_009_src0_valid;                                                                    // rsp_xbar_demux_009:src0_valid -> rsp_xbar_mux:sink9_valid
	wire         rsp_xbar_demux_009_src0_startofpacket;                                                            // rsp_xbar_demux_009:src0_startofpacket -> rsp_xbar_mux:sink9_startofpacket
	wire  [90:0] rsp_xbar_demux_009_src0_data;                                                                     // rsp_xbar_demux_009:src0_data -> rsp_xbar_mux:sink9_data
	wire  [36:0] rsp_xbar_demux_009_src0_channel;                                                                  // rsp_xbar_demux_009:src0_channel -> rsp_xbar_mux:sink9_channel
	wire         rsp_xbar_demux_009_src0_ready;                                                                    // rsp_xbar_mux:sink9_ready -> rsp_xbar_demux_009:src0_ready
	wire         rsp_xbar_demux_010_src0_endofpacket;                                                              // rsp_xbar_demux_010:src0_endofpacket -> rsp_xbar_mux:sink10_endofpacket
	wire         rsp_xbar_demux_010_src0_valid;                                                                    // rsp_xbar_demux_010:src0_valid -> rsp_xbar_mux:sink10_valid
	wire         rsp_xbar_demux_010_src0_startofpacket;                                                            // rsp_xbar_demux_010:src0_startofpacket -> rsp_xbar_mux:sink10_startofpacket
	wire  [90:0] rsp_xbar_demux_010_src0_data;                                                                     // rsp_xbar_demux_010:src0_data -> rsp_xbar_mux:sink10_data
	wire  [36:0] rsp_xbar_demux_010_src0_channel;                                                                  // rsp_xbar_demux_010:src0_channel -> rsp_xbar_mux:sink10_channel
	wire         rsp_xbar_demux_010_src0_ready;                                                                    // rsp_xbar_mux:sink10_ready -> rsp_xbar_demux_010:src0_ready
	wire         rsp_xbar_demux_011_src0_endofpacket;                                                              // rsp_xbar_demux_011:src0_endofpacket -> rsp_xbar_mux:sink11_endofpacket
	wire         rsp_xbar_demux_011_src0_valid;                                                                    // rsp_xbar_demux_011:src0_valid -> rsp_xbar_mux:sink11_valid
	wire         rsp_xbar_demux_011_src0_startofpacket;                                                            // rsp_xbar_demux_011:src0_startofpacket -> rsp_xbar_mux:sink11_startofpacket
	wire  [90:0] rsp_xbar_demux_011_src0_data;                                                                     // rsp_xbar_demux_011:src0_data -> rsp_xbar_mux:sink11_data
	wire  [36:0] rsp_xbar_demux_011_src0_channel;                                                                  // rsp_xbar_demux_011:src0_channel -> rsp_xbar_mux:sink11_channel
	wire         rsp_xbar_demux_011_src0_ready;                                                                    // rsp_xbar_mux:sink11_ready -> rsp_xbar_demux_011:src0_ready
	wire         rsp_xbar_demux_012_src0_endofpacket;                                                              // rsp_xbar_demux_012:src0_endofpacket -> rsp_xbar_mux:sink12_endofpacket
	wire         rsp_xbar_demux_012_src0_valid;                                                                    // rsp_xbar_demux_012:src0_valid -> rsp_xbar_mux:sink12_valid
	wire         rsp_xbar_demux_012_src0_startofpacket;                                                            // rsp_xbar_demux_012:src0_startofpacket -> rsp_xbar_mux:sink12_startofpacket
	wire  [90:0] rsp_xbar_demux_012_src0_data;                                                                     // rsp_xbar_demux_012:src0_data -> rsp_xbar_mux:sink12_data
	wire  [36:0] rsp_xbar_demux_012_src0_channel;                                                                  // rsp_xbar_demux_012:src0_channel -> rsp_xbar_mux:sink12_channel
	wire         rsp_xbar_demux_012_src0_ready;                                                                    // rsp_xbar_mux:sink12_ready -> rsp_xbar_demux_012:src0_ready
	wire         rsp_xbar_demux_013_src0_endofpacket;                                                              // rsp_xbar_demux_013:src0_endofpacket -> rsp_xbar_mux:sink13_endofpacket
	wire         rsp_xbar_demux_013_src0_valid;                                                                    // rsp_xbar_demux_013:src0_valid -> rsp_xbar_mux:sink13_valid
	wire         rsp_xbar_demux_013_src0_startofpacket;                                                            // rsp_xbar_demux_013:src0_startofpacket -> rsp_xbar_mux:sink13_startofpacket
	wire  [90:0] rsp_xbar_demux_013_src0_data;                                                                     // rsp_xbar_demux_013:src0_data -> rsp_xbar_mux:sink13_data
	wire  [36:0] rsp_xbar_demux_013_src0_channel;                                                                  // rsp_xbar_demux_013:src0_channel -> rsp_xbar_mux:sink13_channel
	wire         rsp_xbar_demux_013_src0_ready;                                                                    // rsp_xbar_mux:sink13_ready -> rsp_xbar_demux_013:src0_ready
	wire         rsp_xbar_demux_014_src0_endofpacket;                                                              // rsp_xbar_demux_014:src0_endofpacket -> rsp_xbar_mux:sink14_endofpacket
	wire         rsp_xbar_demux_014_src0_valid;                                                                    // rsp_xbar_demux_014:src0_valid -> rsp_xbar_mux:sink14_valid
	wire         rsp_xbar_demux_014_src0_startofpacket;                                                            // rsp_xbar_demux_014:src0_startofpacket -> rsp_xbar_mux:sink14_startofpacket
	wire  [90:0] rsp_xbar_demux_014_src0_data;                                                                     // rsp_xbar_demux_014:src0_data -> rsp_xbar_mux:sink14_data
	wire  [36:0] rsp_xbar_demux_014_src0_channel;                                                                  // rsp_xbar_demux_014:src0_channel -> rsp_xbar_mux:sink14_channel
	wire         rsp_xbar_demux_014_src0_ready;                                                                    // rsp_xbar_mux:sink14_ready -> rsp_xbar_demux_014:src0_ready
	wire         rsp_xbar_demux_015_src0_endofpacket;                                                              // rsp_xbar_demux_015:src0_endofpacket -> rsp_xbar_mux:sink15_endofpacket
	wire         rsp_xbar_demux_015_src0_valid;                                                                    // rsp_xbar_demux_015:src0_valid -> rsp_xbar_mux:sink15_valid
	wire         rsp_xbar_demux_015_src0_startofpacket;                                                            // rsp_xbar_demux_015:src0_startofpacket -> rsp_xbar_mux:sink15_startofpacket
	wire  [90:0] rsp_xbar_demux_015_src0_data;                                                                     // rsp_xbar_demux_015:src0_data -> rsp_xbar_mux:sink15_data
	wire  [36:0] rsp_xbar_demux_015_src0_channel;                                                                  // rsp_xbar_demux_015:src0_channel -> rsp_xbar_mux:sink15_channel
	wire         rsp_xbar_demux_015_src0_ready;                                                                    // rsp_xbar_mux:sink15_ready -> rsp_xbar_demux_015:src0_ready
	wire         rsp_xbar_demux_016_src0_endofpacket;                                                              // rsp_xbar_demux_016:src0_endofpacket -> rsp_xbar_mux:sink16_endofpacket
	wire         rsp_xbar_demux_016_src0_valid;                                                                    // rsp_xbar_demux_016:src0_valid -> rsp_xbar_mux:sink16_valid
	wire         rsp_xbar_demux_016_src0_startofpacket;                                                            // rsp_xbar_demux_016:src0_startofpacket -> rsp_xbar_mux:sink16_startofpacket
	wire  [90:0] rsp_xbar_demux_016_src0_data;                                                                     // rsp_xbar_demux_016:src0_data -> rsp_xbar_mux:sink16_data
	wire  [36:0] rsp_xbar_demux_016_src0_channel;                                                                  // rsp_xbar_demux_016:src0_channel -> rsp_xbar_mux:sink16_channel
	wire         rsp_xbar_demux_016_src0_ready;                                                                    // rsp_xbar_mux:sink16_ready -> rsp_xbar_demux_016:src0_ready
	wire         rsp_xbar_demux_017_src0_endofpacket;                                                              // rsp_xbar_demux_017:src0_endofpacket -> rsp_xbar_mux:sink17_endofpacket
	wire         rsp_xbar_demux_017_src0_valid;                                                                    // rsp_xbar_demux_017:src0_valid -> rsp_xbar_mux:sink17_valid
	wire         rsp_xbar_demux_017_src0_startofpacket;                                                            // rsp_xbar_demux_017:src0_startofpacket -> rsp_xbar_mux:sink17_startofpacket
	wire  [90:0] rsp_xbar_demux_017_src0_data;                                                                     // rsp_xbar_demux_017:src0_data -> rsp_xbar_mux:sink17_data
	wire  [36:0] rsp_xbar_demux_017_src0_channel;                                                                  // rsp_xbar_demux_017:src0_channel -> rsp_xbar_mux:sink17_channel
	wire         rsp_xbar_demux_017_src0_ready;                                                                    // rsp_xbar_mux:sink17_ready -> rsp_xbar_demux_017:src0_ready
	wire         rsp_xbar_demux_018_src0_endofpacket;                                                              // rsp_xbar_demux_018:src0_endofpacket -> rsp_xbar_mux:sink18_endofpacket
	wire         rsp_xbar_demux_018_src0_valid;                                                                    // rsp_xbar_demux_018:src0_valid -> rsp_xbar_mux:sink18_valid
	wire         rsp_xbar_demux_018_src0_startofpacket;                                                            // rsp_xbar_demux_018:src0_startofpacket -> rsp_xbar_mux:sink18_startofpacket
	wire  [90:0] rsp_xbar_demux_018_src0_data;                                                                     // rsp_xbar_demux_018:src0_data -> rsp_xbar_mux:sink18_data
	wire  [36:0] rsp_xbar_demux_018_src0_channel;                                                                  // rsp_xbar_demux_018:src0_channel -> rsp_xbar_mux:sink18_channel
	wire         rsp_xbar_demux_018_src0_ready;                                                                    // rsp_xbar_mux:sink18_ready -> rsp_xbar_demux_018:src0_ready
	wire         rsp_xbar_demux_019_src0_endofpacket;                                                              // rsp_xbar_demux_019:src0_endofpacket -> rsp_xbar_mux:sink19_endofpacket
	wire         rsp_xbar_demux_019_src0_valid;                                                                    // rsp_xbar_demux_019:src0_valid -> rsp_xbar_mux:sink19_valid
	wire         rsp_xbar_demux_019_src0_startofpacket;                                                            // rsp_xbar_demux_019:src0_startofpacket -> rsp_xbar_mux:sink19_startofpacket
	wire  [90:0] rsp_xbar_demux_019_src0_data;                                                                     // rsp_xbar_demux_019:src0_data -> rsp_xbar_mux:sink19_data
	wire  [36:0] rsp_xbar_demux_019_src0_channel;                                                                  // rsp_xbar_demux_019:src0_channel -> rsp_xbar_mux:sink19_channel
	wire         rsp_xbar_demux_019_src0_ready;                                                                    // rsp_xbar_mux:sink19_ready -> rsp_xbar_demux_019:src0_ready
	wire         rsp_xbar_demux_020_src0_endofpacket;                                                              // rsp_xbar_demux_020:src0_endofpacket -> rsp_xbar_mux:sink20_endofpacket
	wire         rsp_xbar_demux_020_src0_valid;                                                                    // rsp_xbar_demux_020:src0_valid -> rsp_xbar_mux:sink20_valid
	wire         rsp_xbar_demux_020_src0_startofpacket;                                                            // rsp_xbar_demux_020:src0_startofpacket -> rsp_xbar_mux:sink20_startofpacket
	wire  [90:0] rsp_xbar_demux_020_src0_data;                                                                     // rsp_xbar_demux_020:src0_data -> rsp_xbar_mux:sink20_data
	wire  [36:0] rsp_xbar_demux_020_src0_channel;                                                                  // rsp_xbar_demux_020:src0_channel -> rsp_xbar_mux:sink20_channel
	wire         rsp_xbar_demux_020_src0_ready;                                                                    // rsp_xbar_mux:sink20_ready -> rsp_xbar_demux_020:src0_ready
	wire         rsp_xbar_demux_021_src0_endofpacket;                                                              // rsp_xbar_demux_021:src0_endofpacket -> rsp_xbar_mux:sink21_endofpacket
	wire         rsp_xbar_demux_021_src0_valid;                                                                    // rsp_xbar_demux_021:src0_valid -> rsp_xbar_mux:sink21_valid
	wire         rsp_xbar_demux_021_src0_startofpacket;                                                            // rsp_xbar_demux_021:src0_startofpacket -> rsp_xbar_mux:sink21_startofpacket
	wire  [90:0] rsp_xbar_demux_021_src0_data;                                                                     // rsp_xbar_demux_021:src0_data -> rsp_xbar_mux:sink21_data
	wire  [36:0] rsp_xbar_demux_021_src0_channel;                                                                  // rsp_xbar_demux_021:src0_channel -> rsp_xbar_mux:sink21_channel
	wire         rsp_xbar_demux_021_src0_ready;                                                                    // rsp_xbar_mux:sink21_ready -> rsp_xbar_demux_021:src0_ready
	wire         rsp_xbar_demux_022_src0_endofpacket;                                                              // rsp_xbar_demux_022:src0_endofpacket -> rsp_xbar_mux:sink22_endofpacket
	wire         rsp_xbar_demux_022_src0_valid;                                                                    // rsp_xbar_demux_022:src0_valid -> rsp_xbar_mux:sink22_valid
	wire         rsp_xbar_demux_022_src0_startofpacket;                                                            // rsp_xbar_demux_022:src0_startofpacket -> rsp_xbar_mux:sink22_startofpacket
	wire  [90:0] rsp_xbar_demux_022_src0_data;                                                                     // rsp_xbar_demux_022:src0_data -> rsp_xbar_mux:sink22_data
	wire  [36:0] rsp_xbar_demux_022_src0_channel;                                                                  // rsp_xbar_demux_022:src0_channel -> rsp_xbar_mux:sink22_channel
	wire         rsp_xbar_demux_022_src0_ready;                                                                    // rsp_xbar_mux:sink22_ready -> rsp_xbar_demux_022:src0_ready
	wire         rsp_xbar_demux_023_src0_endofpacket;                                                              // rsp_xbar_demux_023:src0_endofpacket -> rsp_xbar_mux:sink23_endofpacket
	wire         rsp_xbar_demux_023_src0_valid;                                                                    // rsp_xbar_demux_023:src0_valid -> rsp_xbar_mux:sink23_valid
	wire         rsp_xbar_demux_023_src0_startofpacket;                                                            // rsp_xbar_demux_023:src0_startofpacket -> rsp_xbar_mux:sink23_startofpacket
	wire  [90:0] rsp_xbar_demux_023_src0_data;                                                                     // rsp_xbar_demux_023:src0_data -> rsp_xbar_mux:sink23_data
	wire  [36:0] rsp_xbar_demux_023_src0_channel;                                                                  // rsp_xbar_demux_023:src0_channel -> rsp_xbar_mux:sink23_channel
	wire         rsp_xbar_demux_023_src0_ready;                                                                    // rsp_xbar_mux:sink23_ready -> rsp_xbar_demux_023:src0_ready
	wire         rsp_xbar_demux_024_src0_endofpacket;                                                              // rsp_xbar_demux_024:src0_endofpacket -> rsp_xbar_mux:sink24_endofpacket
	wire         rsp_xbar_demux_024_src0_valid;                                                                    // rsp_xbar_demux_024:src0_valid -> rsp_xbar_mux:sink24_valid
	wire         rsp_xbar_demux_024_src0_startofpacket;                                                            // rsp_xbar_demux_024:src0_startofpacket -> rsp_xbar_mux:sink24_startofpacket
	wire  [90:0] rsp_xbar_demux_024_src0_data;                                                                     // rsp_xbar_demux_024:src0_data -> rsp_xbar_mux:sink24_data
	wire  [36:0] rsp_xbar_demux_024_src0_channel;                                                                  // rsp_xbar_demux_024:src0_channel -> rsp_xbar_mux:sink24_channel
	wire         rsp_xbar_demux_024_src0_ready;                                                                    // rsp_xbar_mux:sink24_ready -> rsp_xbar_demux_024:src0_ready
	wire         rsp_xbar_demux_025_src0_endofpacket;                                                              // rsp_xbar_demux_025:src0_endofpacket -> rsp_xbar_mux:sink25_endofpacket
	wire         rsp_xbar_demux_025_src0_valid;                                                                    // rsp_xbar_demux_025:src0_valid -> rsp_xbar_mux:sink25_valid
	wire         rsp_xbar_demux_025_src0_startofpacket;                                                            // rsp_xbar_demux_025:src0_startofpacket -> rsp_xbar_mux:sink25_startofpacket
	wire  [90:0] rsp_xbar_demux_025_src0_data;                                                                     // rsp_xbar_demux_025:src0_data -> rsp_xbar_mux:sink25_data
	wire  [36:0] rsp_xbar_demux_025_src0_channel;                                                                  // rsp_xbar_demux_025:src0_channel -> rsp_xbar_mux:sink25_channel
	wire         rsp_xbar_demux_025_src0_ready;                                                                    // rsp_xbar_mux:sink25_ready -> rsp_xbar_demux_025:src0_ready
	wire         rsp_xbar_demux_026_src0_endofpacket;                                                              // rsp_xbar_demux_026:src0_endofpacket -> rsp_xbar_mux:sink26_endofpacket
	wire         rsp_xbar_demux_026_src0_valid;                                                                    // rsp_xbar_demux_026:src0_valid -> rsp_xbar_mux:sink26_valid
	wire         rsp_xbar_demux_026_src0_startofpacket;                                                            // rsp_xbar_demux_026:src0_startofpacket -> rsp_xbar_mux:sink26_startofpacket
	wire  [90:0] rsp_xbar_demux_026_src0_data;                                                                     // rsp_xbar_demux_026:src0_data -> rsp_xbar_mux:sink26_data
	wire  [36:0] rsp_xbar_demux_026_src0_channel;                                                                  // rsp_xbar_demux_026:src0_channel -> rsp_xbar_mux:sink26_channel
	wire         rsp_xbar_demux_026_src0_ready;                                                                    // rsp_xbar_mux:sink26_ready -> rsp_xbar_demux_026:src0_ready
	wire         rsp_xbar_demux_027_src0_endofpacket;                                                              // rsp_xbar_demux_027:src0_endofpacket -> rsp_xbar_mux:sink27_endofpacket
	wire         rsp_xbar_demux_027_src0_valid;                                                                    // rsp_xbar_demux_027:src0_valid -> rsp_xbar_mux:sink27_valid
	wire         rsp_xbar_demux_027_src0_startofpacket;                                                            // rsp_xbar_demux_027:src0_startofpacket -> rsp_xbar_mux:sink27_startofpacket
	wire  [90:0] rsp_xbar_demux_027_src0_data;                                                                     // rsp_xbar_demux_027:src0_data -> rsp_xbar_mux:sink27_data
	wire  [36:0] rsp_xbar_demux_027_src0_channel;                                                                  // rsp_xbar_demux_027:src0_channel -> rsp_xbar_mux:sink27_channel
	wire         rsp_xbar_demux_027_src0_ready;                                                                    // rsp_xbar_mux:sink27_ready -> rsp_xbar_demux_027:src0_ready
	wire         rsp_xbar_demux_028_src0_endofpacket;                                                              // rsp_xbar_demux_028:src0_endofpacket -> rsp_xbar_mux:sink28_endofpacket
	wire         rsp_xbar_demux_028_src0_valid;                                                                    // rsp_xbar_demux_028:src0_valid -> rsp_xbar_mux:sink28_valid
	wire         rsp_xbar_demux_028_src0_startofpacket;                                                            // rsp_xbar_demux_028:src0_startofpacket -> rsp_xbar_mux:sink28_startofpacket
	wire  [90:0] rsp_xbar_demux_028_src0_data;                                                                     // rsp_xbar_demux_028:src0_data -> rsp_xbar_mux:sink28_data
	wire  [36:0] rsp_xbar_demux_028_src0_channel;                                                                  // rsp_xbar_demux_028:src0_channel -> rsp_xbar_mux:sink28_channel
	wire         rsp_xbar_demux_028_src0_ready;                                                                    // rsp_xbar_mux:sink28_ready -> rsp_xbar_demux_028:src0_ready
	wire         rsp_xbar_demux_029_src0_endofpacket;                                                              // rsp_xbar_demux_029:src0_endofpacket -> rsp_xbar_mux:sink29_endofpacket
	wire         rsp_xbar_demux_029_src0_valid;                                                                    // rsp_xbar_demux_029:src0_valid -> rsp_xbar_mux:sink29_valid
	wire         rsp_xbar_demux_029_src0_startofpacket;                                                            // rsp_xbar_demux_029:src0_startofpacket -> rsp_xbar_mux:sink29_startofpacket
	wire  [90:0] rsp_xbar_demux_029_src0_data;                                                                     // rsp_xbar_demux_029:src0_data -> rsp_xbar_mux:sink29_data
	wire  [36:0] rsp_xbar_demux_029_src0_channel;                                                                  // rsp_xbar_demux_029:src0_channel -> rsp_xbar_mux:sink29_channel
	wire         rsp_xbar_demux_029_src0_ready;                                                                    // rsp_xbar_mux:sink29_ready -> rsp_xbar_demux_029:src0_ready
	wire         rsp_xbar_demux_030_src0_endofpacket;                                                              // rsp_xbar_demux_030:src0_endofpacket -> rsp_xbar_mux:sink30_endofpacket
	wire         rsp_xbar_demux_030_src0_valid;                                                                    // rsp_xbar_demux_030:src0_valid -> rsp_xbar_mux:sink30_valid
	wire         rsp_xbar_demux_030_src0_startofpacket;                                                            // rsp_xbar_demux_030:src0_startofpacket -> rsp_xbar_mux:sink30_startofpacket
	wire  [90:0] rsp_xbar_demux_030_src0_data;                                                                     // rsp_xbar_demux_030:src0_data -> rsp_xbar_mux:sink30_data
	wire  [36:0] rsp_xbar_demux_030_src0_channel;                                                                  // rsp_xbar_demux_030:src0_channel -> rsp_xbar_mux:sink30_channel
	wire         rsp_xbar_demux_030_src0_ready;                                                                    // rsp_xbar_mux:sink30_ready -> rsp_xbar_demux_030:src0_ready
	wire         rsp_xbar_demux_031_src0_endofpacket;                                                              // rsp_xbar_demux_031:src0_endofpacket -> rsp_xbar_mux:sink31_endofpacket
	wire         rsp_xbar_demux_031_src0_valid;                                                                    // rsp_xbar_demux_031:src0_valid -> rsp_xbar_mux:sink31_valid
	wire         rsp_xbar_demux_031_src0_startofpacket;                                                            // rsp_xbar_demux_031:src0_startofpacket -> rsp_xbar_mux:sink31_startofpacket
	wire  [90:0] rsp_xbar_demux_031_src0_data;                                                                     // rsp_xbar_demux_031:src0_data -> rsp_xbar_mux:sink31_data
	wire  [36:0] rsp_xbar_demux_031_src0_channel;                                                                  // rsp_xbar_demux_031:src0_channel -> rsp_xbar_mux:sink31_channel
	wire         rsp_xbar_demux_031_src0_ready;                                                                    // rsp_xbar_mux:sink31_ready -> rsp_xbar_demux_031:src0_ready
	wire         rsp_xbar_demux_032_src0_endofpacket;                                                              // rsp_xbar_demux_032:src0_endofpacket -> rsp_xbar_mux:sink32_endofpacket
	wire         rsp_xbar_demux_032_src0_valid;                                                                    // rsp_xbar_demux_032:src0_valid -> rsp_xbar_mux:sink32_valid
	wire         rsp_xbar_demux_032_src0_startofpacket;                                                            // rsp_xbar_demux_032:src0_startofpacket -> rsp_xbar_mux:sink32_startofpacket
	wire  [90:0] rsp_xbar_demux_032_src0_data;                                                                     // rsp_xbar_demux_032:src0_data -> rsp_xbar_mux:sink32_data
	wire  [36:0] rsp_xbar_demux_032_src0_channel;                                                                  // rsp_xbar_demux_032:src0_channel -> rsp_xbar_mux:sink32_channel
	wire         rsp_xbar_demux_032_src0_ready;                                                                    // rsp_xbar_mux:sink32_ready -> rsp_xbar_demux_032:src0_ready
	wire         rsp_xbar_demux_033_src0_endofpacket;                                                              // rsp_xbar_demux_033:src0_endofpacket -> rsp_xbar_mux:sink33_endofpacket
	wire         rsp_xbar_demux_033_src0_valid;                                                                    // rsp_xbar_demux_033:src0_valid -> rsp_xbar_mux:sink33_valid
	wire         rsp_xbar_demux_033_src0_startofpacket;                                                            // rsp_xbar_demux_033:src0_startofpacket -> rsp_xbar_mux:sink33_startofpacket
	wire  [90:0] rsp_xbar_demux_033_src0_data;                                                                     // rsp_xbar_demux_033:src0_data -> rsp_xbar_mux:sink33_data
	wire  [36:0] rsp_xbar_demux_033_src0_channel;                                                                  // rsp_xbar_demux_033:src0_channel -> rsp_xbar_mux:sink33_channel
	wire         rsp_xbar_demux_033_src0_ready;                                                                    // rsp_xbar_mux:sink33_ready -> rsp_xbar_demux_033:src0_ready
	wire         rsp_xbar_demux_034_src0_endofpacket;                                                              // rsp_xbar_demux_034:src0_endofpacket -> rsp_xbar_mux:sink34_endofpacket
	wire         rsp_xbar_demux_034_src0_valid;                                                                    // rsp_xbar_demux_034:src0_valid -> rsp_xbar_mux:sink34_valid
	wire         rsp_xbar_demux_034_src0_startofpacket;                                                            // rsp_xbar_demux_034:src0_startofpacket -> rsp_xbar_mux:sink34_startofpacket
	wire  [90:0] rsp_xbar_demux_034_src0_data;                                                                     // rsp_xbar_demux_034:src0_data -> rsp_xbar_mux:sink34_data
	wire  [36:0] rsp_xbar_demux_034_src0_channel;                                                                  // rsp_xbar_demux_034:src0_channel -> rsp_xbar_mux:sink34_channel
	wire         rsp_xbar_demux_034_src0_ready;                                                                    // rsp_xbar_mux:sink34_ready -> rsp_xbar_demux_034:src0_ready
	wire         rsp_xbar_demux_035_src0_endofpacket;                                                              // rsp_xbar_demux_035:src0_endofpacket -> rsp_xbar_mux:sink35_endofpacket
	wire         rsp_xbar_demux_035_src0_valid;                                                                    // rsp_xbar_demux_035:src0_valid -> rsp_xbar_mux:sink35_valid
	wire         rsp_xbar_demux_035_src0_startofpacket;                                                            // rsp_xbar_demux_035:src0_startofpacket -> rsp_xbar_mux:sink35_startofpacket
	wire  [90:0] rsp_xbar_demux_035_src0_data;                                                                     // rsp_xbar_demux_035:src0_data -> rsp_xbar_mux:sink35_data
	wire  [36:0] rsp_xbar_demux_035_src0_channel;                                                                  // rsp_xbar_demux_035:src0_channel -> rsp_xbar_mux:sink35_channel
	wire         rsp_xbar_demux_035_src0_ready;                                                                    // rsp_xbar_mux:sink35_ready -> rsp_xbar_demux_035:src0_ready
	wire         cmd_xbar_demux_src36_endofpacket;                                                                 // cmd_xbar_demux:src36_endofpacket -> crosser:in_endofpacket
	wire         cmd_xbar_demux_src36_valid;                                                                       // cmd_xbar_demux:src36_valid -> crosser:in_valid
	wire         cmd_xbar_demux_src36_startofpacket;                                                               // cmd_xbar_demux:src36_startofpacket -> crosser:in_startofpacket
	wire  [90:0] cmd_xbar_demux_src36_data;                                                                        // cmd_xbar_demux:src36_data -> crosser:in_data
	wire  [36:0] cmd_xbar_demux_src36_channel;                                                                     // cmd_xbar_demux:src36_channel -> crosser:in_channel
	wire         cmd_xbar_demux_src36_ready;                                                                       // crosser:in_ready -> cmd_xbar_demux:src36_ready
	wire         crosser_out_endofpacket;                                                                          // crosser:out_endofpacket -> cmd_xbar_mux_036:sink0_endofpacket
	wire         crosser_out_valid;                                                                                // crosser:out_valid -> cmd_xbar_mux_036:sink0_valid
	wire         crosser_out_startofpacket;                                                                        // crosser:out_startofpacket -> cmd_xbar_mux_036:sink0_startofpacket
	wire  [90:0] crosser_out_data;                                                                                 // crosser:out_data -> cmd_xbar_mux_036:sink0_data
	wire  [36:0] crosser_out_channel;                                                                              // crosser:out_channel -> cmd_xbar_mux_036:sink0_channel
	wire         crosser_out_ready;                                                                                // cmd_xbar_mux_036:sink0_ready -> crosser:out_ready
	wire         rsp_xbar_demux_036_src0_endofpacket;                                                              // rsp_xbar_demux_036:src0_endofpacket -> crosser_001:in_endofpacket
	wire         rsp_xbar_demux_036_src0_valid;                                                                    // rsp_xbar_demux_036:src0_valid -> crosser_001:in_valid
	wire         rsp_xbar_demux_036_src0_startofpacket;                                                            // rsp_xbar_demux_036:src0_startofpacket -> crosser_001:in_startofpacket
	wire  [90:0] rsp_xbar_demux_036_src0_data;                                                                     // rsp_xbar_demux_036:src0_data -> crosser_001:in_data
	wire  [36:0] rsp_xbar_demux_036_src0_channel;                                                                  // rsp_xbar_demux_036:src0_channel -> crosser_001:in_channel
	wire         rsp_xbar_demux_036_src0_ready;                                                                    // crosser_001:in_ready -> rsp_xbar_demux_036:src0_ready
	wire         crosser_001_out_endofpacket;                                                                      // crosser_001:out_endofpacket -> rsp_xbar_mux:sink36_endofpacket
	wire         crosser_001_out_valid;                                                                            // crosser_001:out_valid -> rsp_xbar_mux:sink36_valid
	wire         crosser_001_out_startofpacket;                                                                    // crosser_001:out_startofpacket -> rsp_xbar_mux:sink36_startofpacket
	wire  [90:0] crosser_001_out_data;                                                                             // crosser_001:out_data -> rsp_xbar_mux:sink36_data
	wire  [36:0] crosser_001_out_channel;                                                                          // crosser_001:out_channel -> rsp_xbar_mux:sink36_channel
	wire         crosser_001_out_ready;                                                                            // rsp_xbar_mux:sink36_ready -> crosser_001:out_ready
	wire  [36:0] limiter_cmd_valid_data;                                                                           // limiter:cmd_src_valid -> cmd_xbar_demux:sink_valid

	altera_merlin_master_translator #(
		.AV_ADDRESS_W                (11),
		.AV_DATA_W                   (32),
		.AV_BURSTCOUNT_W             (1),
		.AV_BYTEENABLE_W             (4),
		.UAV_ADDRESS_W               (11),
		.UAV_BURSTCOUNT_W            (3),
		.USE_READ                    (1),
		.USE_WRITE                   (1),
		.USE_BEGINBURSTTRANSFER      (0),
		.USE_BEGINTRANSFER           (0),
		.USE_CHIPSELECT              (0),
		.USE_BURSTCOUNT              (1),
		.USE_READDATAVALID           (1),
		.USE_WAITREQUEST             (1),
		.USE_READRESPONSE            (0),
		.USE_WRITERESPONSE           (0),
		.AV_SYMBOLS_PER_WORD         (4),
		.AV_ADDRESS_SYMBOLS          (1),
		.AV_BURSTCOUNT_SYMBOLS       (0),
		.AV_CONSTANT_BURST_BEHAVIOR  (0),
		.UAV_CONSTANT_BURST_BEHAVIOR (0),
		.AV_LINEWRAPBURSTS           (0),
		.AV_REGISTERINCOMINGSIGNALS  (0)
	) clock_crossing_io_m0_translator (
		.clk                      (pll_c2_clk),                                                              //                       clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                  //                     reset.reset
		.uav_address              (clock_crossing_io_m0_translator_avalon_universal_master_0_address),       // avalon_universal_master_0.address
		.uav_burstcount           (clock_crossing_io_m0_translator_avalon_universal_master_0_burstcount),    //                          .burstcount
		.uav_read                 (clock_crossing_io_m0_translator_avalon_universal_master_0_read),          //                          .read
		.uav_write                (clock_crossing_io_m0_translator_avalon_universal_master_0_write),         //                          .write
		.uav_waitrequest          (clock_crossing_io_m0_translator_avalon_universal_master_0_waitrequest),   //                          .waitrequest
		.uav_readdatavalid        (clock_crossing_io_m0_translator_avalon_universal_master_0_readdatavalid), //                          .readdatavalid
		.uav_byteenable           (clock_crossing_io_m0_translator_avalon_universal_master_0_byteenable),    //                          .byteenable
		.uav_readdata             (clock_crossing_io_m0_translator_avalon_universal_master_0_readdata),      //                          .readdata
		.uav_writedata            (clock_crossing_io_m0_translator_avalon_universal_master_0_writedata),     //                          .writedata
		.uav_lock                 (clock_crossing_io_m0_translator_avalon_universal_master_0_lock),          //                          .lock
		.uav_debugaccess          (clock_crossing_io_m0_translator_avalon_universal_master_0_debugaccess),   //                          .debugaccess
		.av_address               (clock_crossing_io_m0_address),                                            //      avalon_anti_master_0.address
		.av_waitrequest           (clock_crossing_io_m0_waitrequest),                                        //                          .waitrequest
		.av_burstcount            (clock_crossing_io_m0_burstcount),                                         //                          .burstcount
		.av_byteenable            (clock_crossing_io_m0_byteenable),                                         //                          .byteenable
		.av_read                  (clock_crossing_io_m0_read),                                               //                          .read
		.av_readdata              (clock_crossing_io_m0_readdata),                                           //                          .readdata
		.av_readdatavalid         (clock_crossing_io_m0_readdatavalid),                                      //                          .readdatavalid
		.av_write                 (clock_crossing_io_m0_write),                                              //                          .write
		.av_writedata             (clock_crossing_io_m0_writedata),                                          //                          .writedata
		.av_debugaccess           (clock_crossing_io_m0_debugaccess),                                        //                          .debugaccess
		.av_beginbursttransfer    (1'b0),                                                                    //               (terminated)
		.av_begintransfer         (1'b0),                                                                    //               (terminated)
		.av_chipselect            (1'b0),                                                                    //               (terminated)
		.av_lock                  (1'b0),                                                                    //               (terminated)
		.uav_clken                (),                                                                        //               (terminated)
		.av_clken                 (1'b1),                                                                    //               (terminated)
		.uav_response             (2'b00),                                                                   //               (terminated)
		.av_response              (),                                                                        //               (terminated)
		.uav_writeresponserequest (),                                                                        //               (terminated)
		.uav_writeresponsevalid   (1'b0),                                                                    //               (terminated)
		.av_writeresponserequest  (1'b0),                                                                    //               (terminated)
		.av_writeresponsevalid    ()                                                                         //               (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sys_clk_timer_s1_translator (
		.clk                      (pll_c2_clk),                                                                  //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                      //                    reset.reset
		.uav_address              (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sys_clk_timer_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (sys_clk_timer_s1_write),                                                      //                         .write
		.av_readdata              (sys_clk_timer_s1_readdata),                                                   //                         .readdata
		.av_writedata             (sys_clk_timer_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (sys_clk_timer_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                            //              (terminated)
		.av_begintransfer         (),                                                                            //              (terminated)
		.av_beginbursttransfer    (),                                                                            //              (terminated)
		.av_burstcount            (),                                                                            //              (terminated)
		.av_byteenable            (),                                                                            //              (terminated)
		.av_readdatavalid         (1'b0),                                                                        //              (terminated)
		.av_waitrequest           (1'b0),                                                                        //              (terminated)
		.av_writebyteenable       (),                                                                            //              (terminated)
		.av_lock                  (),                                                                            //              (terminated)
		.av_clken                 (),                                                                            //              (terminated)
		.uav_clken                (1'b0),                                                                        //              (terminated)
		.av_debugaccess           (),                                                                            //              (terminated)
		.av_outputenable          (),                                                                            //              (terminated)
		.uav_response             (),                                                                            //              (terminated)
		.av_response              (2'b00),                                                                       //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                        //              (terminated)
		.uav_writeresponsevalid   (),                                                                            //              (terminated)
		.av_writeresponserequest  (),                                                                            //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                         //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sysid_control_slave_translator (
		.clk                      (pll_c2_clk),                                                                     //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                         //                    reset.reset
		.uav_address              (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sysid_control_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (sysid_control_slave_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                               //              (terminated)
		.av_read                  (),                                                                               //              (terminated)
		.av_writedata             (),                                                                               //              (terminated)
		.av_begintransfer         (),                                                                               //              (terminated)
		.av_beginbursttransfer    (),                                                                               //              (terminated)
		.av_burstcount            (),                                                                               //              (terminated)
		.av_byteenable            (),                                                                               //              (terminated)
		.av_readdatavalid         (1'b0),                                                                           //              (terminated)
		.av_waitrequest           (1'b0),                                                                           //              (terminated)
		.av_writebyteenable       (),                                                                               //              (terminated)
		.av_lock                  (),                                                                               //              (terminated)
		.av_chipselect            (),                                                                               //              (terminated)
		.av_clken                 (),                                                                               //              (terminated)
		.uav_clken                (1'b0),                                                                           //              (terminated)
		.av_debugaccess           (),                                                                               //              (terminated)
		.av_outputenable          (),                                                                               //              (terminated)
		.uav_response             (),                                                                               //              (terminated)
		.av_response              (2'b00),                                                                          //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                           //              (terminated)
		.uav_writeresponsevalid   (),                                                                               //              (terminated)
		.av_writeresponserequest  (),                                                                               //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                            //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) key_s1_translator (
		.clk                      (pll_c2_clk),                                                        //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),            //                    reset.reset
		.uav_address              (key_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (key_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (key_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (key_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (key_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (key_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (key_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (key_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (key_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (key_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (key_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (key_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (key_s1_write),                                                      //                         .write
		.av_readdata              (key_s1_readdata),                                                   //                         .readdata
		.av_writedata             (key_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (key_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                  //              (terminated)
		.av_begintransfer         (),                                                                  //              (terminated)
		.av_beginbursttransfer    (),                                                                  //              (terminated)
		.av_burstcount            (),                                                                  //              (terminated)
		.av_byteenable            (),                                                                  //              (terminated)
		.av_readdatavalid         (1'b0),                                                              //              (terminated)
		.av_waitrequest           (1'b0),                                                              //              (terminated)
		.av_writebyteenable       (),                                                                  //              (terminated)
		.av_lock                  (),                                                                  //              (terminated)
		.av_clken                 (),                                                                  //              (terminated)
		.uav_clken                (1'b0),                                                              //              (terminated)
		.av_debugaccess           (),                                                                  //              (terminated)
		.av_outputenable          (),                                                                  //              (terminated)
		.uav_response             (),                                                                  //              (terminated)
		.av_response              (2'b00),                                                             //              (terminated)
		.uav_writeresponserequest (1'b0),                                                              //              (terminated)
		.uav_writeresponsevalid   (),                                                                  //              (terminated)
		.av_writeresponserequest  (),                                                                  //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                               //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sw_s1_translator (
		.clk                      (pll_c2_clk),                                                       //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),           //                    reset.reset
		.uav_address              (sw_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sw_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sw_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sw_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sw_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sw_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sw_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sw_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sw_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sw_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sw_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sw_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (sw_s1_write),                                                      //                         .write
		.av_readdata              (sw_s1_readdata),                                                   //                         .readdata
		.av_writedata             (sw_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (sw_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                 //              (terminated)
		.av_begintransfer         (),                                                                 //              (terminated)
		.av_beginbursttransfer    (),                                                                 //              (terminated)
		.av_burstcount            (),                                                                 //              (terminated)
		.av_byteenable            (),                                                                 //              (terminated)
		.av_readdatavalid         (1'b0),                                                             //              (terminated)
		.av_waitrequest           (1'b0),                                                             //              (terminated)
		.av_writebyteenable       (),                                                                 //              (terminated)
		.av_lock                  (),                                                                 //              (terminated)
		.av_clken                 (),                                                                 //              (terminated)
		.uav_clken                (1'b0),                                                             //              (terminated)
		.av_debugaccess           (),                                                                 //              (terminated)
		.av_outputenable          (),                                                                 //              (terminated)
		.uav_response             (),                                                                 //              (terminated)
		.av_response              (2'b00),                                                            //              (terminated)
		.uav_writeresponserequest (1'b0),                                                             //              (terminated)
		.uav_writeresponsevalid   (),                                                                 //              (terminated)
		.av_writeresponserequest  (),                                                                 //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                              //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) ledg_s1_translator (
		.clk                      (pll_c2_clk),                                                         //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),             //                    reset.reset
		.uav_address              (ledg_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (ledg_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (ledg_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (ledg_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (ledg_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (ledg_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (ledg_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (ledg_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (ledg_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (ledg_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (ledg_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (ledg_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (ledg_s1_write),                                                      //                         .write
		.av_readdata              (ledg_s1_readdata),                                                   //                         .readdata
		.av_writedata             (ledg_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (ledg_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                   //              (terminated)
		.av_begintransfer         (),                                                                   //              (terminated)
		.av_beginbursttransfer    (),                                                                   //              (terminated)
		.av_burstcount            (),                                                                   //              (terminated)
		.av_byteenable            (),                                                                   //              (terminated)
		.av_readdatavalid         (1'b0),                                                               //              (terminated)
		.av_waitrequest           (1'b0),                                                               //              (terminated)
		.av_writebyteenable       (),                                                                   //              (terminated)
		.av_lock                  (),                                                                   //              (terminated)
		.av_clken                 (),                                                                   //              (terminated)
		.uav_clken                (1'b0),                                                               //              (terminated)
		.av_debugaccess           (),                                                                   //              (terminated)
		.av_outputenable          (),                                                                   //              (terminated)
		.uav_response             (),                                                                   //              (terminated)
		.av_response              (2'b00),                                                              //              (terminated)
		.uav_writeresponserequest (1'b0),                                                               //              (terminated)
		.uav_writeresponsevalid   (),                                                                   //              (terminated)
		.av_writeresponserequest  (),                                                                   //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) ledr_s1_translator (
		.clk                      (pll_c2_clk),                                                         //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),             //                    reset.reset
		.uav_address              (ledr_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (ledr_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (ledr_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (ledr_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (ledr_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (ledr_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (ledr_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (ledr_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (ledr_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (ledr_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (ledr_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (ledr_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (ledr_s1_write),                                                      //                         .write
		.av_readdata              (ledr_s1_readdata),                                                   //                         .readdata
		.av_writedata             (ledr_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (ledr_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                   //              (terminated)
		.av_begintransfer         (),                                                                   //              (terminated)
		.av_beginbursttransfer    (),                                                                   //              (terminated)
		.av_burstcount            (),                                                                   //              (terminated)
		.av_byteenable            (),                                                                   //              (terminated)
		.av_readdatavalid         (1'b0),                                                               //              (terminated)
		.av_waitrequest           (1'b0),                                                               //              (terminated)
		.av_writebyteenable       (),                                                                   //              (terminated)
		.av_lock                  (),                                                                   //              (terminated)
		.av_clken                 (),                                                                   //              (terminated)
		.uav_clken                (1'b0),                                                               //              (terminated)
		.av_debugaccess           (),                                                                   //              (terminated)
		.av_outputenable          (),                                                                   //              (terminated)
		.uav_response             (),                                                                   //              (terminated)
		.av_response              (2'b00),                                                              //              (terminated)
		.uav_writeresponserequest (1'b0),                                                               //              (terminated)
		.uav_writeresponsevalid   (),                                                                   //              (terminated)
		.av_writeresponserequest  (),                                                                   //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (1),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) rs232_s1_translator (
		.clk                      (pll_c2_clk),                                                          //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),              //                    reset.reset
		.uav_address              (rs232_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (rs232_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (rs232_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (rs232_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (rs232_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (rs232_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (rs232_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (rs232_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (rs232_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (rs232_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (rs232_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (rs232_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (rs232_s1_write),                                                      //                         .write
		.av_read                  (rs232_s1_read),                                                       //                         .read
		.av_readdata              (rs232_s1_readdata),                                                   //                         .readdata
		.av_writedata             (rs232_s1_writedata),                                                  //                         .writedata
		.av_begintransfer         (rs232_s1_begintransfer),                                              //                         .begintransfer
		.av_chipselect            (rs232_s1_chipselect),                                                 //                         .chipselect
		.av_beginbursttransfer    (),                                                                    //              (terminated)
		.av_burstcount            (),                                                                    //              (terminated)
		.av_byteenable            (),                                                                    //              (terminated)
		.av_readdatavalid         (1'b0),                                                                //              (terminated)
		.av_waitrequest           (1'b0),                                                                //              (terminated)
		.av_writebyteenable       (),                                                                    //              (terminated)
		.av_lock                  (),                                                                    //              (terminated)
		.av_clken                 (),                                                                    //              (terminated)
		.uav_clken                (1'b0),                                                                //              (terminated)
		.av_debugaccess           (),                                                                    //              (terminated)
		.av_outputenable          (),                                                                    //              (terminated)
		.uav_response             (),                                                                    //              (terminated)
		.av_response              (2'b00),                                                               //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                //              (terminated)
		.uav_writeresponsevalid   (),                                                                    //              (terminated)
		.av_writeresponserequest  (),                                                                    //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                 //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) i2c_scl_s1_translator (
		.clk                      (pll_c2_clk),                                                            //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                //                    reset.reset
		.uav_address              (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (i2c_scl_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (i2c_scl_s1_write),                                                      //                         .write
		.av_readdata              (i2c_scl_s1_readdata),                                                   //                         .readdata
		.av_writedata             (i2c_scl_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (i2c_scl_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) i2c_sda_s1_translator (
		.clk                      (pll_c2_clk),                                                            //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                //                    reset.reset
		.uav_address              (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (i2c_sda_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (i2c_sda_s1_write),                                                      //                         .write
		.av_readdata              (i2c_sda_s1_readdata),                                                   //                         .readdata
		.av_writedata             (i2c_sda_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (i2c_sda_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) eep_i2c_scl_s1_translator (
		.clk                      (pll_c2_clk),                                                                //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                    //                    reset.reset
		.uav_address              (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (eep_i2c_scl_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (eep_i2c_scl_s1_write),                                                      //                         .write
		.av_readdata              (eep_i2c_scl_s1_readdata),                                                   //                         .readdata
		.av_writedata             (eep_i2c_scl_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (eep_i2c_scl_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                          //              (terminated)
		.av_begintransfer         (),                                                                          //              (terminated)
		.av_beginbursttransfer    (),                                                                          //              (terminated)
		.av_burstcount            (),                                                                          //              (terminated)
		.av_byteenable            (),                                                                          //              (terminated)
		.av_readdatavalid         (1'b0),                                                                      //              (terminated)
		.av_waitrequest           (1'b0),                                                                      //              (terminated)
		.av_writebyteenable       (),                                                                          //              (terminated)
		.av_lock                  (),                                                                          //              (terminated)
		.av_clken                 (),                                                                          //              (terminated)
		.uav_clken                (1'b0),                                                                      //              (terminated)
		.av_debugaccess           (),                                                                          //              (terminated)
		.av_outputenable          (),                                                                          //              (terminated)
		.uav_response             (),                                                                          //              (terminated)
		.av_response              (2'b00),                                                                     //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                      //              (terminated)
		.uav_writeresponsevalid   (),                                                                          //              (terminated)
		.av_writeresponserequest  (),                                                                          //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                       //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) eep_i2c_sda_s1_translator (
		.clk                      (pll_c2_clk),                                                                //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                    //                    reset.reset
		.uav_address              (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (eep_i2c_sda_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (eep_i2c_sda_s1_write),                                                      //                         .write
		.av_readdata              (eep_i2c_sda_s1_readdata),                                                   //                         .readdata
		.av_writedata             (eep_i2c_sda_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (eep_i2c_sda_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                          //              (terminated)
		.av_begintransfer         (),                                                                          //              (terminated)
		.av_beginbursttransfer    (),                                                                          //              (terminated)
		.av_burstcount            (),                                                                          //              (terminated)
		.av_byteenable            (),                                                                          //              (terminated)
		.av_readdatavalid         (1'b0),                                                                      //              (terminated)
		.av_waitrequest           (1'b0),                                                                      //              (terminated)
		.av_writebyteenable       (),                                                                          //              (terminated)
		.av_lock                  (),                                                                          //              (terminated)
		.av_clken                 (),                                                                          //              (terminated)
		.uav_clken                (1'b0),                                                                      //              (terminated)
		.av_debugaccess           (),                                                                          //              (terminated)
		.av_outputenable          (),                                                                          //              (terminated)
		.uav_response             (),                                                                          //              (terminated)
		.av_response              (2'b00),                                                                     //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                      //              (terminated)
		.uav_writeresponsevalid   (),                                                                          //              (terminated)
		.av_writeresponserequest  (),                                                                          //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                       //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (15),
		.AV_WRITE_WAIT_CYCLES           (15),
		.AV_SETUP_WAIT_CYCLES           (15),
		.AV_DATA_HOLD_CYCLES            (15)
	) lcd_control_slave_translator (
		.clk                      (pll_c2_clk),                                                                   //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                       //                    reset.reset
		.uav_address              (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (lcd_control_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (lcd_control_slave_write),                                                      //                         .write
		.av_read                  (lcd_control_slave_read),                                                       //                         .read
		.av_readdata              (lcd_control_slave_readdata),                                                   //                         .readdata
		.av_writedata             (lcd_control_slave_writedata),                                                  //                         .writedata
		.av_begintransfer         (lcd_control_slave_begintransfer),                                              //                         .begintransfer
		.av_beginbursttransfer    (),                                                                             //              (terminated)
		.av_burstcount            (),                                                                             //              (terminated)
		.av_byteenable            (),                                                                             //              (terminated)
		.av_readdatavalid         (1'b0),                                                                         //              (terminated)
		.av_waitrequest           (1'b0),                                                                         //              (terminated)
		.av_writebyteenable       (),                                                                             //              (terminated)
		.av_lock                  (),                                                                             //              (terminated)
		.av_chipselect            (),                                                                             //              (terminated)
		.av_clken                 (),                                                                             //              (terminated)
		.uav_clken                (1'b0),                                                                         //              (terminated)
		.av_debugaccess           (),                                                                             //              (terminated)
		.av_outputenable          (),                                                                             //              (terminated)
		.uav_response             (),                                                                             //              (terminated)
		.av_response              (2'b00),                                                                        //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                         //              (terminated)
		.uav_writeresponsevalid   (),                                                                             //              (terminated)
		.av_writeresponserequest  (),                                                                             //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                          //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) ir_s1_translator (
		.clk                      (pll_c2_clk),                                                       //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),           //                    reset.reset
		.uav_address              (ir_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (ir_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (ir_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (ir_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (ir_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (ir_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (ir_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (ir_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (ir_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (ir_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (ir_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (ir_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (ir_s1_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                 //              (terminated)
		.av_read                  (),                                                                 //              (terminated)
		.av_writedata             (),                                                                 //              (terminated)
		.av_begintransfer         (),                                                                 //              (terminated)
		.av_beginbursttransfer    (),                                                                 //              (terminated)
		.av_burstcount            (),                                                                 //              (terminated)
		.av_byteenable            (),                                                                 //              (terminated)
		.av_readdatavalid         (1'b0),                                                             //              (terminated)
		.av_waitrequest           (1'b0),                                                             //              (terminated)
		.av_writebyteenable       (),                                                                 //              (terminated)
		.av_lock                  (),                                                                 //              (terminated)
		.av_chipselect            (),                                                                 //              (terminated)
		.av_clken                 (),                                                                 //              (terminated)
		.uav_clken                (1'b0),                                                             //              (terminated)
		.av_debugaccess           (),                                                                 //              (terminated)
		.av_outputenable          (),                                                                 //              (terminated)
		.uav_response             (),                                                                 //              (terminated)
		.av_response              (2'b00),                                                            //              (terminated)
		.uav_writeresponserequest (1'b0),                                                             //              (terminated)
		.uav_writeresponsevalid   (),                                                                 //              (terminated)
		.av_writeresponserequest  (),                                                                 //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                              //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (8),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) seg7_avalon_slave_translator (
		.clk                      (pll_c2_clk),                                                                   //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                       //                    reset.reset
		.uav_address              (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (seg7_avalon_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (seg7_avalon_slave_write),                                                      //                         .write
		.av_read                  (seg7_avalon_slave_read),                                                       //                         .read
		.av_readdata              (seg7_avalon_slave_readdata),                                                   //                         .readdata
		.av_writedata             (seg7_avalon_slave_writedata),                                                  //                         .writedata
		.av_begintransfer         (),                                                                             //              (terminated)
		.av_beginbursttransfer    (),                                                                             //              (terminated)
		.av_burstcount            (),                                                                             //              (terminated)
		.av_byteenable            (),                                                                             //              (terminated)
		.av_readdatavalid         (1'b0),                                                                         //              (terminated)
		.av_waitrequest           (1'b0),                                                                         //              (terminated)
		.av_writebyteenable       (),                                                                             //              (terminated)
		.av_lock                  (),                                                                             //              (terminated)
		.av_chipselect            (),                                                                             //              (terminated)
		.av_clken                 (),                                                                             //              (terminated)
		.uav_clken                (1'b0),                                                                         //              (terminated)
		.av_debugaccess           (),                                                                             //              (terminated)
		.av_outputenable          (),                                                                             //              (terminated)
		.uav_response             (),                                                                             //              (terminated)
		.av_response              (2'b00),                                                                        //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                         //              (terminated)
		.uav_writeresponsevalid   (),                                                                             //              (terminated)
		.av_writeresponserequest  (),                                                                             //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                          //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sd_clk_s1_translator (
		.clk                      (pll_c2_clk),                                                           //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),               //                    reset.reset
		.uav_address              (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sd_clk_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (sd_clk_s1_write),                                                      //                         .write
		.av_readdata              (sd_clk_s1_readdata),                                                   //                         .readdata
		.av_writedata             (sd_clk_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (sd_clk_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                     //              (terminated)
		.av_begintransfer         (),                                                                     //              (terminated)
		.av_beginbursttransfer    (),                                                                     //              (terminated)
		.av_burstcount            (),                                                                     //              (terminated)
		.av_byteenable            (),                                                                     //              (terminated)
		.av_readdatavalid         (1'b0),                                                                 //              (terminated)
		.av_waitrequest           (1'b0),                                                                 //              (terminated)
		.av_writebyteenable       (),                                                                     //              (terminated)
		.av_lock                  (),                                                                     //              (terminated)
		.av_clken                 (),                                                                     //              (terminated)
		.uav_clken                (1'b0),                                                                 //              (terminated)
		.av_debugaccess           (),                                                                     //              (terminated)
		.av_outputenable          (),                                                                     //              (terminated)
		.uav_response             (),                                                                     //              (terminated)
		.av_response              (2'b00),                                                                //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                 //              (terminated)
		.uav_writeresponsevalid   (),                                                                     //              (terminated)
		.av_writeresponserequest  (),                                                                     //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                  //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sd_cmd_s1_translator (
		.clk                      (pll_c2_clk),                                                           //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),               //                    reset.reset
		.uav_address              (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sd_cmd_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (sd_cmd_s1_write),                                                      //                         .write
		.av_readdata              (sd_cmd_s1_readdata),                                                   //                         .readdata
		.av_writedata             (sd_cmd_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (sd_cmd_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                     //              (terminated)
		.av_begintransfer         (),                                                                     //              (terminated)
		.av_beginbursttransfer    (),                                                                     //              (terminated)
		.av_burstcount            (),                                                                     //              (terminated)
		.av_byteenable            (),                                                                     //              (terminated)
		.av_readdatavalid         (1'b0),                                                                 //              (terminated)
		.av_waitrequest           (1'b0),                                                                 //              (terminated)
		.av_writebyteenable       (),                                                                     //              (terminated)
		.av_lock                  (),                                                                     //              (terminated)
		.av_clken                 (),                                                                     //              (terminated)
		.uav_clken                (1'b0),                                                                 //              (terminated)
		.av_debugaccess           (),                                                                     //              (terminated)
		.av_outputenable          (),                                                                     //              (terminated)
		.uav_response             (),                                                                     //              (terminated)
		.av_response              (2'b00),                                                                //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                 //              (terminated)
		.uav_writeresponsevalid   (),                                                                     //              (terminated)
		.av_writeresponserequest  (),                                                                     //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                  //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sd_dat_s1_translator (
		.clk                      (pll_c2_clk),                                                           //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),               //                    reset.reset
		.uav_address              (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sd_dat_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (sd_dat_s1_write),                                                      //                         .write
		.av_readdata              (sd_dat_s1_readdata),                                                   //                         .readdata
		.av_writedata             (sd_dat_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (sd_dat_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                     //              (terminated)
		.av_begintransfer         (),                                                                     //              (terminated)
		.av_beginbursttransfer    (),                                                                     //              (terminated)
		.av_burstcount            (),                                                                     //              (terminated)
		.av_byteenable            (),                                                                     //              (terminated)
		.av_readdatavalid         (1'b0),                                                                 //              (terminated)
		.av_waitrequest           (1'b0),                                                                 //              (terminated)
		.av_writebyteenable       (),                                                                     //              (terminated)
		.av_lock                  (),                                                                     //              (terminated)
		.av_clken                 (),                                                                     //              (terminated)
		.uav_clken                (1'b0),                                                                 //              (terminated)
		.av_debugaccess           (),                                                                     //              (terminated)
		.av_outputenable          (),                                                                     //              (terminated)
		.uav_response             (),                                                                     //              (terminated)
		.av_response              (2'b00),                                                                //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                 //              (terminated)
		.uav_writeresponsevalid   (),                                                                     //              (terminated)
		.av_writeresponserequest  (),                                                                     //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                  //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sd_wp_n_s1_translator (
		.clk                      (pll_c2_clk),                                                            //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                //                    reset.reset
		.uav_address              (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sd_wp_n_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_readdata              (sd_wp_n_s1_readdata),                                                   //                         .readdata
		.av_write                 (),                                                                      //              (terminated)
		.av_read                  (),                                                                      //              (terminated)
		.av_writedata             (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_chipselect            (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (1),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) jtag_uart_avalon_jtag_slave_translator (
		.clk                      (pll_c2_clk),                                                                             //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                                 //                    reset.reset
		.uav_address              (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (jtag_uart_avalon_jtag_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (jtag_uart_avalon_jtag_slave_write),                                                      //                         .write
		.av_read                  (jtag_uart_avalon_jtag_slave_read),                                                       //                         .read
		.av_readdata              (jtag_uart_avalon_jtag_slave_readdata),                                                   //                         .readdata
		.av_writedata             (jtag_uart_avalon_jtag_slave_writedata),                                                  //                         .writedata
		.av_waitrequest           (jtag_uart_avalon_jtag_slave_waitrequest),                                                //                         .waitrequest
		.av_chipselect            (jtag_uart_avalon_jtag_slave_chipselect),                                                 //                         .chipselect
		.av_begintransfer         (),                                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                                       //              (terminated)
		.av_burstcount            (),                                                                                       //              (terminated)
		.av_byteenable            (),                                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                                       //              (terminated)
		.av_lock                  (),                                                                                       //              (terminated)
		.av_clken                 (),                                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                                   //              (terminated)
		.av_debugaccess           (),                                                                                       //              (terminated)
		.av_outputenable          (),                                                                                       //              (terminated)
		.uav_response             (),                                                                                       //              (terminated)
		.av_response              (2'b00),                                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (1),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) sysver_0_avalon_slave_0_translator (
		.clk                      (pll_c2_clk),                                                                         //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                             //                    reset.reset
		.uav_address              (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (sysver_0_avalon_slave_0_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (sysver_0_avalon_slave_0_write),                                                      //                         .write
		.av_read                  (sysver_0_avalon_slave_0_read),                                                       //                         .read
		.av_readdata              (sysver_0_avalon_slave_0_readdata),                                                   //                         .readdata
		.av_writedata             (sysver_0_avalon_slave_0_writedata),                                                  //                         .writedata
		.av_byteenable            (sysver_0_avalon_slave_0_byteenable),                                                 //                         .byteenable
		.av_waitrequest           (sysver_0_avalon_slave_0_waitrequest),                                                //                         .waitrequest
		.av_chipselect            (sysver_0_avalon_slave_0_chipselect),                                                 //                         .chipselect
		.av_begintransfer         (),                                                                                   //              (terminated)
		.av_beginbursttransfer    (),                                                                                   //              (terminated)
		.av_burstcount            (),                                                                                   //              (terminated)
		.av_readdatavalid         (1'b0),                                                                               //              (terminated)
		.av_writebyteenable       (),                                                                                   //              (terminated)
		.av_lock                  (),                                                                                   //              (terminated)
		.av_clken                 (),                                                                                   //              (terminated)
		.uav_clken                (1'b0),                                                                               //              (terminated)
		.av_debugaccess           (),                                                                                   //              (terminated)
		.av_outputenable          (),                                                                                   //              (terminated)
		.uav_response             (),                                                                                   //              (terminated)
		.av_response              (2'b00),                                                                              //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                               //              (terminated)
		.uav_writeresponsevalid   (),                                                                                   //              (terminated)
		.av_writeresponserequest  (),                                                                                   //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                                //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_0_s1_translator (
		.clk                      (pll_c2_clk),                                                            //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                //                    reset.reset
		.uav_address              (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_0_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_0_s1_write),                                                      //                         .write
		.av_readdata              (timer_0_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_0_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_0_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_1_s1_translator (
		.clk                      (pll_c2_clk),                                                            //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                //                    reset.reset
		.uav_address              (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_1_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_1_s1_write),                                                      //                         .write
		.av_readdata              (timer_1_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_1_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_1_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_2_s1_translator (
		.clk                      (pll_c2_clk),                                                            //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                //                    reset.reset
		.uav_address              (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_2_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_2_s1_write),                                                      //                         .write
		.av_readdata              (timer_2_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_2_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_2_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_3_s1_translator (
		.clk                      (pll_c2_clk),                                                            //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                //                    reset.reset
		.uav_address              (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_3_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_3_s1_write),                                                      //                         .write
		.av_readdata              (timer_3_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_3_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_3_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_4_s1_translator (
		.clk                      (pll_c2_clk),                                                            //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                //                    reset.reset
		.uav_address              (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_4_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_4_s1_write),                                                      //                         .write
		.av_readdata              (timer_4_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_4_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_4_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_5_s1_translator (
		.clk                      (pll_c2_clk),                                                            //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                //                    reset.reset
		.uav_address              (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_5_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_5_s1_write),                                                      //                         .write
		.av_readdata              (timer_5_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_5_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_5_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_6_s1_translator (
		.clk                      (pll_c2_clk),                                                            //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                //                    reset.reset
		.uav_address              (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_6_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_6_s1_write),                                                      //                         .write
		.av_readdata              (timer_6_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_6_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_6_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_7_s1_translator (
		.clk                      (pll_c2_clk),                                                            //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                //                    reset.reset
		.uav_address              (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_7_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_7_s1_write),                                                      //                         .write
		.av_readdata              (timer_7_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_7_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_7_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_8_s1_translator (
		.clk                      (pll_c2_clk),                                                            //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                //                    reset.reset
		.uav_address              (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_8_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_8_s1_write),                                                      //                         .write
		.av_readdata              (timer_8_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_8_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_8_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_9_s1_translator (
		.clk                      (pll_c2_clk),                                                            //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                //                    reset.reset
		.uav_address              (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_9_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_9_s1_write),                                                      //                         .write
		.av_readdata              (timer_9_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_9_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_9_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                      //              (terminated)
		.av_begintransfer         (),                                                                      //              (terminated)
		.av_beginbursttransfer    (),                                                                      //              (terminated)
		.av_burstcount            (),                                                                      //              (terminated)
		.av_byteenable            (),                                                                      //              (terminated)
		.av_readdatavalid         (1'b0),                                                                  //              (terminated)
		.av_waitrequest           (1'b0),                                                                  //              (terminated)
		.av_writebyteenable       (),                                                                      //              (terminated)
		.av_lock                  (),                                                                      //              (terminated)
		.av_clken                 (),                                                                      //              (terminated)
		.uav_clken                (1'b0),                                                                  //              (terminated)
		.av_debugaccess           (),                                                                      //              (terminated)
		.av_outputenable          (),                                                                      //              (terminated)
		.uav_response             (),                                                                      //              (terminated)
		.av_response              (2'b00),                                                                 //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                  //              (terminated)
		.uav_writeresponsevalid   (),                                                                      //              (terminated)
		.av_writeresponserequest  (),                                                                      //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                   //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_10_s1_translator (
		.clk                      (pll_c2_clk),                                                             //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                 //                    reset.reset
		.uav_address              (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_10_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_10_s1_write),                                                      //                         .write
		.av_readdata              (timer_10_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_10_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_10_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                       //              (terminated)
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_burstcount            (),                                                                       //              (terminated)
		.av_byteenable            (),                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                   //              (terminated)
		.av_waitrequest           (1'b0),                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_debugaccess           (),                                                                       //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_11_s1_translator (
		.clk                      (pll_c2_clk),                                                             //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                 //                    reset.reset
		.uav_address              (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_11_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_11_s1_write),                                                      //                         .write
		.av_readdata              (timer_11_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_11_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_11_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                       //              (terminated)
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_burstcount            (),                                                                       //              (terminated)
		.av_byteenable            (),                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                   //              (terminated)
		.av_waitrequest           (1'b0),                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_debugaccess           (),                                                                       //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_12_s1_translator (
		.clk                      (pll_c2_clk),                                                             //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                 //                    reset.reset
		.uav_address              (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_12_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_12_s1_write),                                                      //                         .write
		.av_readdata              (timer_12_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_12_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_12_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                       //              (terminated)
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_burstcount            (),                                                                       //              (terminated)
		.av_byteenable            (),                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                   //              (terminated)
		.av_waitrequest           (1'b0),                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_debugaccess           (),                                                                       //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_13_s1_translator (
		.clk                      (pll_c2_clk),                                                             //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                 //                    reset.reset
		.uav_address              (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_13_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_13_s1_write),                                                      //                         .write
		.av_readdata              (timer_13_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_13_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_13_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                       //              (terminated)
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_burstcount            (),                                                                       //              (terminated)
		.av_byteenable            (),                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                   //              (terminated)
		.av_waitrequest           (1'b0),                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_debugaccess           (),                                                                       //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_14_s1_translator (
		.clk                      (pll_c2_clk),                                                             //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                 //                    reset.reset
		.uav_address              (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_14_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_14_s1_write),                                                      //                         .write
		.av_readdata              (timer_14_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_14_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_14_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                       //              (terminated)
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_burstcount            (),                                                                       //              (terminated)
		.av_byteenable            (),                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                   //              (terminated)
		.av_waitrequest           (1'b0),                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_debugaccess           (),                                                                       //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (3),
		.AV_DATA_W                      (16),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (1),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (1),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) timer_15_s1_translator (
		.clk                      (pll_c2_clk),                                                             //                      clk.clk
		.reset                    (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                 //                    reset.reset
		.uav_address              (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (timer_15_s1_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (timer_15_s1_write),                                                      //                         .write
		.av_readdata              (timer_15_s1_readdata),                                                   //                         .readdata
		.av_writedata             (timer_15_s1_writedata),                                                  //                         .writedata
		.av_chipselect            (timer_15_s1_chipselect),                                                 //                         .chipselect
		.av_read                  (),                                                                       //              (terminated)
		.av_begintransfer         (),                                                                       //              (terminated)
		.av_beginbursttransfer    (),                                                                       //              (terminated)
		.av_burstcount            (),                                                                       //              (terminated)
		.av_byteenable            (),                                                                       //              (terminated)
		.av_readdatavalid         (1'b0),                                                                   //              (terminated)
		.av_waitrequest           (1'b0),                                                                   //              (terminated)
		.av_writebyteenable       (),                                                                       //              (terminated)
		.av_lock                  (),                                                                       //              (terminated)
		.av_clken                 (),                                                                       //              (terminated)
		.uav_clken                (1'b0),                                                                   //              (terminated)
		.av_debugaccess           (),                                                                       //              (terminated)
		.av_outputenable          (),                                                                       //              (terminated)
		.uav_response             (),                                                                       //              (terminated)
		.av_response              (2'b00),                                                                  //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                   //              (terminated)
		.uav_writeresponsevalid   (),                                                                       //              (terminated)
		.av_writeresponserequest  (),                                                                       //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                    //              (terminated)
	);

	altera_merlin_slave_translator #(
		.AV_ADDRESS_W                   (2),
		.AV_DATA_W                      (32),
		.UAV_DATA_W                     (32),
		.AV_BURSTCOUNT_W                (1),
		.AV_BYTEENABLE_W                (4),
		.UAV_BYTEENABLE_W               (4),
		.UAV_ADDRESS_W                  (11),
		.UAV_BURSTCOUNT_W               (3),
		.AV_READLATENCY                 (0),
		.USE_READDATAVALID              (0),
		.USE_WAITREQUEST                (0),
		.USE_UAV_CLKEN                  (0),
		.USE_READRESPONSE               (0),
		.USE_WRITERESPONSE              (0),
		.AV_SYMBOLS_PER_WORD            (4),
		.AV_ADDRESS_SYMBOLS             (0),
		.AV_BURSTCOUNT_SYMBOLS          (0),
		.AV_CONSTANT_BURST_BEHAVIOR     (0),
		.UAV_CONSTANT_BURST_BEHAVIOR    (0),
		.AV_REQUIRE_UNALIGNED_ADDRESSES (0),
		.CHIPSELECT_THROUGH_READLATENCY (0),
		.AV_READ_WAIT_CYCLES            (0),
		.AV_WRITE_WAIT_CYCLES           (0),
		.AV_SETUP_WAIT_CYCLES           (0),
		.AV_DATA_HOLD_CYCLES            (0)
	) pll_pll_slave_translator (
		.clk                      (clk_50_clk_clk),                                                           //                      clk.clk
		.reset                    (pll_inclk_interface_reset_reset_bridge_in_reset_reset),                    //                    reset.reset
		.uav_address              (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_address),       // avalon_universal_slave_0.address
		.uav_burstcount           (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),    //                         .burstcount
		.uav_read                 (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_read),          //                         .read
		.uav_write                (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_write),         //                         .write
		.uav_waitrequest          (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),   //                         .waitrequest
		.uav_readdatavalid        (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid), //                         .readdatavalid
		.uav_byteenable           (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),    //                         .byteenable
		.uav_readdata             (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_readdata),      //                         .readdata
		.uav_writedata            (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_writedata),     //                         .writedata
		.uav_lock                 (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_lock),          //                         .lock
		.uav_debugaccess          (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),   //                         .debugaccess
		.av_address               (pll_pll_slave_address),                                                    //      avalon_anti_slave_0.address
		.av_write                 (pll_pll_slave_write),                                                      //                         .write
		.av_read                  (pll_pll_slave_read),                                                       //                         .read
		.av_readdata              (pll_pll_slave_readdata),                                                   //                         .readdata
		.av_writedata             (pll_pll_slave_writedata),                                                  //                         .writedata
		.av_begintransfer         (),                                                                         //              (terminated)
		.av_beginbursttransfer    (),                                                                         //              (terminated)
		.av_burstcount            (),                                                                         //              (terminated)
		.av_byteenable            (),                                                                         //              (terminated)
		.av_readdatavalid         (1'b0),                                                                     //              (terminated)
		.av_waitrequest           (1'b0),                                                                     //              (terminated)
		.av_writebyteenable       (),                                                                         //              (terminated)
		.av_lock                  (),                                                                         //              (terminated)
		.av_chipselect            (),                                                                         //              (terminated)
		.av_clken                 (),                                                                         //              (terminated)
		.uav_clken                (1'b0),                                                                     //              (terminated)
		.av_debugaccess           (),                                                                         //              (terminated)
		.av_outputenable          (),                                                                         //              (terminated)
		.uav_response             (),                                                                         //              (terminated)
		.av_response              (2'b00),                                                                    //              (terminated)
		.uav_writeresponserequest (1'b0),                                                                     //              (terminated)
		.uav_writeresponsevalid   (),                                                                         //              (terminated)
		.av_writeresponserequest  (),                                                                         //              (terminated)
		.av_writeresponsevalid    (1'b0)                                                                      //              (terminated)
	);

	altera_merlin_master_agent #(
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_BEGIN_BURST           (64),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_BURST_TYPE_H          (61),
		.PKT_BURST_TYPE_L          (60),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_TRANS_EXCLUSIVE       (52),
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_THREAD_ID_H           (78),
		.PKT_THREAD_ID_L           (78),
		.PKT_CACHE_H               (85),
		.PKT_CACHE_L               (82),
		.PKT_DATA_SIDEBAND_H       (63),
		.PKT_DATA_SIDEBAND_L       (63),
		.PKT_QOS_H                 (65),
		.PKT_QOS_L                 (65),
		.PKT_ADDR_SIDEBAND_H       (62),
		.PKT_ADDR_SIDEBAND_L       (62),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_DATA_W                 (91),
		.ST_CHANNEL_W              (37),
		.AV_BURSTCOUNT_W           (3),
		.SUPPRESS_0_BYTEEN_RSP     (0),
		.ID                        (0),
		.BURSTWRAP_VALUE           (1),
		.CACHE_VALUE               (0),
		.SECURE_ACCESS_BIT         (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) clock_crossing_io_m0_translator_avalon_universal_master_0_agent (
		.clk                     (pll_c2_clk),                                                                       //       clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.av_address              (clock_crossing_io_m0_translator_avalon_universal_master_0_address),                //        av.address
		.av_write                (clock_crossing_io_m0_translator_avalon_universal_master_0_write),                  //          .write
		.av_read                 (clock_crossing_io_m0_translator_avalon_universal_master_0_read),                   //          .read
		.av_writedata            (clock_crossing_io_m0_translator_avalon_universal_master_0_writedata),              //          .writedata
		.av_readdata             (clock_crossing_io_m0_translator_avalon_universal_master_0_readdata),               //          .readdata
		.av_waitrequest          (clock_crossing_io_m0_translator_avalon_universal_master_0_waitrequest),            //          .waitrequest
		.av_readdatavalid        (clock_crossing_io_m0_translator_avalon_universal_master_0_readdatavalid),          //          .readdatavalid
		.av_byteenable           (clock_crossing_io_m0_translator_avalon_universal_master_0_byteenable),             //          .byteenable
		.av_burstcount           (clock_crossing_io_m0_translator_avalon_universal_master_0_burstcount),             //          .burstcount
		.av_debugaccess          (clock_crossing_io_m0_translator_avalon_universal_master_0_debugaccess),            //          .debugaccess
		.av_lock                 (clock_crossing_io_m0_translator_avalon_universal_master_0_lock),                   //          .lock
		.cp_valid                (clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_valid),         //        cp.valid
		.cp_data                 (clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.cp_startofpacket        (clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.cp_endofpacket          (clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.cp_ready                (clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_ready),         //          .ready
		.rp_valid                (limiter_rsp_src_valid),                                                            //        rp.valid
		.rp_data                 (limiter_rsp_src_data),                                                             //          .data
		.rp_channel              (limiter_rsp_src_channel),                                                          //          .channel
		.rp_startofpacket        (limiter_rsp_src_startofpacket),                                                    //          .startofpacket
		.rp_endofpacket          (limiter_rsp_src_endofpacket),                                                      //          .endofpacket
		.rp_ready                (limiter_rsp_src_ready),                                                            //          .ready
		.av_response             (),                                                                                 // (terminated)
		.av_writeresponserequest (1'b0),                                                                             // (terminated)
		.av_writeresponsevalid   ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sys_clk_timer_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                            //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                                //       clk_reset.reset
		.m0_address              (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_src_ready),                                                                //              cp.ready
		.cp_valid                (cmd_xbar_mux_src_valid),                                                                //                .valid
		.cp_data                 (cmd_xbar_mux_src_data),                                                                 //                .data
		.cp_startofpacket        (cmd_xbar_mux_src_startofpacket),                                                        //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_src_endofpacket),                                                          //                .endofpacket
		.cp_channel              (cmd_xbar_mux_src_channel),                                                              //                .channel
		.rf_sink_ready           (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                 //     (terminated)
		.m0_writeresponserequest (),                                                                                      //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                   //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                            //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                                // clk_reset.reset
		.in_data           (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                 // (terminated)
		.csr_read          (1'b0),                                                                                  // (terminated)
		.csr_write         (1'b0),                                                                                  // (terminated)
		.csr_readdata      (),                                                                                      // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                  // (terminated)
		.almost_full_data  (),                                                                                      // (terminated)
		.almost_empty_data (),                                                                                      // (terminated)
		.in_empty          (1'b0),                                                                                  // (terminated)
		.out_empty         (),                                                                                      // (terminated)
		.in_error          (1'b0),                                                                                  // (terminated)
		.out_error         (),                                                                                      // (terminated)
		.in_channel        (1'b0),                                                                                  // (terminated)
		.out_channel       ()                                                                                       // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sysid_control_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                               //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                                   //       clk_reset.reset
		.m0_address              (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sysid_control_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_001_src_ready),                                                               //              cp.ready
		.cp_valid                (cmd_xbar_mux_001_src_valid),                                                               //                .valid
		.cp_data                 (cmd_xbar_mux_001_src_data),                                                                //                .data
		.cp_startofpacket        (cmd_xbar_mux_001_src_startofpacket),                                                       //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_001_src_endofpacket),                                                         //                .endofpacket
		.cp_channel              (cmd_xbar_mux_001_src_channel),                                                             //                .channel
		.rf_sink_ready           (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sysid_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                    //     (terminated)
		.m0_writeresponserequest (),                                                                                         //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                      //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                               //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                                   // clk_reset.reset
		.in_data           (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sysid_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sysid_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                    // (terminated)
		.csr_read          (1'b0),                                                                                     // (terminated)
		.csr_write         (1'b0),                                                                                     // (terminated)
		.csr_readdata      (),                                                                                         // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                     // (terminated)
		.almost_full_data  (),                                                                                         // (terminated)
		.almost_empty_data (),                                                                                         // (terminated)
		.in_empty          (1'b0),                                                                                     // (terminated)
		.out_empty         (),                                                                                         // (terminated)
		.in_error          (1'b0),                                                                                     // (terminated)
		.out_error         (),                                                                                         // (terminated)
		.in_channel        (1'b0),                                                                                     // (terminated)
		.out_channel       ()                                                                                          // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) key_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                  //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                      //       clk_reset.reset
		.m0_address              (key_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (key_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (key_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (key_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (key_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (key_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (key_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (key_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (key_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (key_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (key_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (key_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (key_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (key_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (key_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (key_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_002_src_ready),                                                  //              cp.ready
		.cp_valid                (cmd_xbar_mux_002_src_valid),                                                  //                .valid
		.cp_data                 (cmd_xbar_mux_002_src_data),                                                   //                .data
		.cp_startofpacket        (cmd_xbar_mux_002_src_startofpacket),                                          //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_002_src_endofpacket),                                            //                .endofpacket
		.cp_channel              (cmd_xbar_mux_002_src_channel),                                                //                .channel
		.rf_sink_ready           (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (key_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (key_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (key_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (key_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (key_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (key_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                       //     (terminated)
		.m0_writeresponserequest (),                                                                            //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                         //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                  //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                      // clk_reset.reset
		.in_data           (key_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (key_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (key_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (key_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (key_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (key_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                       // (terminated)
		.csr_read          (1'b0),                                                                        // (terminated)
		.csr_write         (1'b0),                                                                        // (terminated)
		.csr_readdata      (),                                                                            // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                        // (terminated)
		.almost_full_data  (),                                                                            // (terminated)
		.almost_empty_data (),                                                                            // (terminated)
		.in_empty          (1'b0),                                                                        // (terminated)
		.out_empty         (),                                                                            // (terminated)
		.in_error          (1'b0),                                                                        // (terminated)
		.out_error         (),                                                                            // (terminated)
		.in_channel        (1'b0),                                                                        // (terminated)
		.out_channel       ()                                                                             // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sw_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                 //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                     //       clk_reset.reset
		.m0_address              (sw_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sw_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sw_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sw_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sw_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sw_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sw_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sw_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sw_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sw_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sw_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sw_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sw_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sw_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sw_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sw_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_003_src_ready),                                                 //              cp.ready
		.cp_valid                (cmd_xbar_mux_003_src_valid),                                                 //                .valid
		.cp_data                 (cmd_xbar_mux_003_src_data),                                                  //                .data
		.cp_startofpacket        (cmd_xbar_mux_003_src_startofpacket),                                         //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_003_src_endofpacket),                                           //                .endofpacket
		.cp_channel              (cmd_xbar_mux_003_src_channel),                                               //                .channel
		.rf_sink_ready           (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sw_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                      //     (terminated)
		.m0_writeresponserequest (),                                                                           //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                        //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                 //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                     // clk_reset.reset
		.in_data           (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sw_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sw_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                      // (terminated)
		.csr_read          (1'b0),                                                                       // (terminated)
		.csr_write         (1'b0),                                                                       // (terminated)
		.csr_readdata      (),                                                                           // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                       // (terminated)
		.almost_full_data  (),                                                                           // (terminated)
		.almost_empty_data (),                                                                           // (terminated)
		.in_empty          (1'b0),                                                                       // (terminated)
		.out_empty         (),                                                                           // (terminated)
		.in_error          (1'b0),                                                                       // (terminated)
		.out_error         (),                                                                           // (terminated)
		.in_channel        (1'b0),                                                                       // (terminated)
		.out_channel       ()                                                                            // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) ledg_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                   //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                       //       clk_reset.reset
		.m0_address              (ledg_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (ledg_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (ledg_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (ledg_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (ledg_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (ledg_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (ledg_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (ledg_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (ledg_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (ledg_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (ledg_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (ledg_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (ledg_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (ledg_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (ledg_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (ledg_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_004_src_ready),                                                   //              cp.ready
		.cp_valid                (cmd_xbar_mux_004_src_valid),                                                   //                .valid
		.cp_data                 (cmd_xbar_mux_004_src_data),                                                    //                .data
		.cp_startofpacket        (cmd_xbar_mux_004_src_startofpacket),                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_004_src_endofpacket),                                             //                .endofpacket
		.cp_channel              (cmd_xbar_mux_004_src_channel),                                                 //                .channel
		.rf_sink_ready           (ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (ledg_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (ledg_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (ledg_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (ledg_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (ledg_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (ledg_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                        //     (terminated)
		.m0_writeresponserequest (),                                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                   //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.in_data           (ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (ledg_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (ledg_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                        // (terminated)
		.csr_read          (1'b0),                                                                         // (terminated)
		.csr_write         (1'b0),                                                                         // (terminated)
		.csr_readdata      (),                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                         // (terminated)
		.almost_full_data  (),                                                                             // (terminated)
		.almost_empty_data (),                                                                             // (terminated)
		.in_empty          (1'b0),                                                                         // (terminated)
		.out_empty         (),                                                                             // (terminated)
		.in_error          (1'b0),                                                                         // (terminated)
		.out_error         (),                                                                             // (terminated)
		.in_channel        (1'b0),                                                                         // (terminated)
		.out_channel       ()                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) ledr_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                   //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                       //       clk_reset.reset
		.m0_address              (ledr_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (ledr_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (ledr_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (ledr_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (ledr_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (ledr_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (ledr_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (ledr_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (ledr_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (ledr_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (ledr_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (ledr_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (ledr_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (ledr_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (ledr_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (ledr_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_005_src_ready),                                                   //              cp.ready
		.cp_valid                (cmd_xbar_mux_005_src_valid),                                                   //                .valid
		.cp_data                 (cmd_xbar_mux_005_src_data),                                                    //                .data
		.cp_startofpacket        (cmd_xbar_mux_005_src_startofpacket),                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_005_src_endofpacket),                                             //                .endofpacket
		.cp_channel              (cmd_xbar_mux_005_src_channel),                                                 //                .channel
		.rf_sink_ready           (ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (ledr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (ledr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (ledr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (ledr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (ledr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (ledr_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                        //     (terminated)
		.m0_writeresponserequest (),                                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                   //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.in_data           (ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (ledr_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (ledr_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                        // (terminated)
		.csr_read          (1'b0),                                                                         // (terminated)
		.csr_write         (1'b0),                                                                         // (terminated)
		.csr_readdata      (),                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                         // (terminated)
		.almost_full_data  (),                                                                             // (terminated)
		.almost_empty_data (),                                                                             // (terminated)
		.in_empty          (1'b0),                                                                         // (terminated)
		.out_empty         (),                                                                             // (terminated)
		.in_error          (1'b0),                                                                         // (terminated)
		.out_error         (),                                                                             // (terminated)
		.in_channel        (1'b0),                                                                         // (terminated)
		.out_channel       ()                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) rs232_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                    //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                        //       clk_reset.reset
		.m0_address              (rs232_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (rs232_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (rs232_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (rs232_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (rs232_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (rs232_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (rs232_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (rs232_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (rs232_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (rs232_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (rs232_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (rs232_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (rs232_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (rs232_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (rs232_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (rs232_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_006_src_ready),                                                    //              cp.ready
		.cp_valid                (cmd_xbar_mux_006_src_valid),                                                    //                .valid
		.cp_data                 (cmd_xbar_mux_006_src_data),                                                     //                .data
		.cp_startofpacket        (cmd_xbar_mux_006_src_startofpacket),                                            //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_006_src_endofpacket),                                              //                .endofpacket
		.cp_channel              (cmd_xbar_mux_006_src_channel),                                                  //                .channel
		.rf_sink_ready           (rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (rs232_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (rs232_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (rs232_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (rs232_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (rs232_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (rs232_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                         //     (terminated)
		.m0_writeresponserequest (),                                                                              //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                           //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                    //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                        // clk_reset.reset
		.in_data           (rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (rs232_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (rs232_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                         // (terminated)
		.csr_read          (1'b0),                                                                          // (terminated)
		.csr_write         (1'b0),                                                                          // (terminated)
		.csr_readdata      (),                                                                              // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                          // (terminated)
		.almost_full_data  (),                                                                              // (terminated)
		.almost_empty_data (),                                                                              // (terminated)
		.in_empty          (1'b0),                                                                          // (terminated)
		.out_empty         (),                                                                              // (terminated)
		.in_error          (1'b0),                                                                          // (terminated)
		.out_error         (),                                                                              // (terminated)
		.in_channel        (1'b0),                                                                          // (terminated)
		.out_channel       ()                                                                               // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) i2c_scl_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                      //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          //       clk_reset.reset
		.m0_address              (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_007_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_007_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_007_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_007_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_007_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_007_src_channel),                                                    //                .channel
		.rf_sink_ready           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                      //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.in_data           (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) i2c_sda_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                      //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          //       clk_reset.reset
		.m0_address              (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_008_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_008_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_008_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_008_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_008_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_008_src_channel),                                                    //                .channel
		.rf_sink_ready           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                      //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.in_data           (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                          //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                              //       clk_reset.reset
		.m0_address              (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_009_src_ready),                                                          //              cp.ready
		.cp_valid                (cmd_xbar_mux_009_src_valid),                                                          //                .valid
		.cp_data                 (cmd_xbar_mux_009_src_data),                                                           //                .data
		.cp_startofpacket        (cmd_xbar_mux_009_src_startofpacket),                                                  //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_009_src_endofpacket),                                                    //                .endofpacket
		.cp_channel              (cmd_xbar_mux_009_src_channel),                                                        //                .channel
		.rf_sink_ready           (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                               //     (terminated)
		.m0_writeresponserequest (),                                                                                    //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                 //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                          //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.in_data           (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                               // (terminated)
		.csr_read          (1'b0),                                                                                // (terminated)
		.csr_write         (1'b0),                                                                                // (terminated)
		.csr_readdata      (),                                                                                    // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                // (terminated)
		.almost_full_data  (),                                                                                    // (terminated)
		.almost_empty_data (),                                                                                    // (terminated)
		.in_empty          (1'b0),                                                                                // (terminated)
		.out_empty         (),                                                                                    // (terminated)
		.in_error          (1'b0),                                                                                // (terminated)
		.out_error         (),                                                                                    // (terminated)
		.in_channel        (1'b0),                                                                                // (terminated)
		.out_channel       ()                                                                                     // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                          //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                              //       clk_reset.reset
		.m0_address              (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_010_src_ready),                                                          //              cp.ready
		.cp_valid                (cmd_xbar_mux_010_src_valid),                                                          //                .valid
		.cp_data                 (cmd_xbar_mux_010_src_data),                                                           //                .data
		.cp_startofpacket        (cmd_xbar_mux_010_src_startofpacket),                                                  //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_010_src_endofpacket),                                                    //                .endofpacket
		.cp_channel              (cmd_xbar_mux_010_src_channel),                                                        //                .channel
		.rf_sink_ready           (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                               //     (terminated)
		.m0_writeresponserequest (),                                                                                    //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                 //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                          //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.in_data           (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                               // (terminated)
		.csr_read          (1'b0),                                                                                // (terminated)
		.csr_write         (1'b0),                                                                                // (terminated)
		.csr_readdata      (),                                                                                    // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                // (terminated)
		.almost_full_data  (),                                                                                    // (terminated)
		.almost_empty_data (),                                                                                    // (terminated)
		.in_empty          (1'b0),                                                                                // (terminated)
		.out_empty         (),                                                                                    // (terminated)
		.in_error          (1'b0),                                                                                // (terminated)
		.out_error         (),                                                                                    // (terminated)
		.in_channel        (1'b0),                                                                                // (terminated)
		.out_channel       ()                                                                                     // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) lcd_control_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                             //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                                 //       clk_reset.reset
		.m0_address              (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (lcd_control_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_011_src_ready),                                                             //              cp.ready
		.cp_valid                (cmd_xbar_mux_011_src_valid),                                                             //                .valid
		.cp_data                 (cmd_xbar_mux_011_src_data),                                                              //                .data
		.cp_startofpacket        (cmd_xbar_mux_011_src_startofpacket),                                                     //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_011_src_endofpacket),                                                       //                .endofpacket
		.cp_channel              (cmd_xbar_mux_011_src_channel),                                                           //                .channel
		.rf_sink_ready           (lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (lcd_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (lcd_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (lcd_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (lcd_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (lcd_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (lcd_control_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                  //     (terminated)
		.m0_writeresponserequest (),                                                                                       //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                             //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.in_data           (lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (lcd_control_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (lcd_control_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                  // (terminated)
		.csr_read          (1'b0),                                                                                   // (terminated)
		.csr_write         (1'b0),                                                                                   // (terminated)
		.csr_readdata      (),                                                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                   // (terminated)
		.almost_full_data  (),                                                                                       // (terminated)
		.almost_empty_data (),                                                                                       // (terminated)
		.in_empty          (1'b0),                                                                                   // (terminated)
		.out_empty         (),                                                                                       // (terminated)
		.in_error          (1'b0),                                                                                   // (terminated)
		.out_error         (),                                                                                       // (terminated)
		.in_channel        (1'b0),                                                                                   // (terminated)
		.out_channel       ()                                                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) ir_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                 //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                     //       clk_reset.reset
		.m0_address              (ir_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (ir_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (ir_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (ir_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (ir_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (ir_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (ir_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (ir_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (ir_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (ir_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (ir_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (ir_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (ir_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (ir_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (ir_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (ir_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_012_src_ready),                                                 //              cp.ready
		.cp_valid                (cmd_xbar_mux_012_src_valid),                                                 //                .valid
		.cp_data                 (cmd_xbar_mux_012_src_data),                                                  //                .data
		.cp_startofpacket        (cmd_xbar_mux_012_src_startofpacket),                                         //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_012_src_endofpacket),                                           //                .endofpacket
		.cp_channel              (cmd_xbar_mux_012_src_channel),                                               //                .channel
		.rf_sink_ready           (ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (ir_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (ir_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (ir_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (ir_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (ir_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (ir_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (ir_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (ir_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (ir_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (ir_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (ir_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                      //     (terminated)
		.m0_writeresponserequest (),                                                                           //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                        //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                 //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                     // clk_reset.reset
		.in_data           (ir_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (ir_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (ir_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (ir_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (ir_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (ir_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                      // (terminated)
		.csr_read          (1'b0),                                                                       // (terminated)
		.csr_write         (1'b0),                                                                       // (terminated)
		.csr_readdata      (),                                                                           // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                       // (terminated)
		.almost_full_data  (),                                                                           // (terminated)
		.almost_empty_data (),                                                                           // (terminated)
		.in_empty          (1'b0),                                                                       // (terminated)
		.out_empty         (),                                                                           // (terminated)
		.in_error          (1'b0),                                                                       // (terminated)
		.out_error         (),                                                                           // (terminated)
		.in_channel        (1'b0),                                                                       // (terminated)
		.out_channel       ()                                                                            // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) seg7_avalon_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                             //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                                 //       clk_reset.reset
		.m0_address              (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_013_src_ready),                                                             //              cp.ready
		.cp_valid                (cmd_xbar_mux_013_src_valid),                                                             //                .valid
		.cp_data                 (cmd_xbar_mux_013_src_data),                                                              //                .data
		.cp_startofpacket        (cmd_xbar_mux_013_src_startofpacket),                                                     //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_013_src_endofpacket),                                                       //                .endofpacket
		.cp_channel              (cmd_xbar_mux_013_src_channel),                                                           //                .channel
		.rf_sink_ready           (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                  //     (terminated)
		.m0_writeresponserequest (),                                                                                       //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                    //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                             //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.in_data           (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                  // (terminated)
		.csr_read          (1'b0),                                                                                   // (terminated)
		.csr_write         (1'b0),                                                                                   // (terminated)
		.csr_readdata      (),                                                                                       // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                   // (terminated)
		.almost_full_data  (),                                                                                       // (terminated)
		.almost_empty_data (),                                                                                       // (terminated)
		.in_empty          (1'b0),                                                                                   // (terminated)
		.out_empty         (),                                                                                       // (terminated)
		.in_error          (1'b0),                                                                                   // (terminated)
		.out_error         (),                                                                                       // (terminated)
		.in_channel        (1'b0),                                                                                   // (terminated)
		.out_channel       ()                                                                                        // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sd_clk_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                     //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                         //       clk_reset.reset
		.m0_address              (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sd_clk_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_014_src_ready),                                                     //              cp.ready
		.cp_valid                (cmd_xbar_mux_014_src_valid),                                                     //                .valid
		.cp_data                 (cmd_xbar_mux_014_src_data),                                                      //                .data
		.cp_startofpacket        (cmd_xbar_mux_014_src_startofpacket),                                             //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_014_src_endofpacket),                                               //                .endofpacket
		.cp_channel              (cmd_xbar_mux_014_src_channel),                                                   //                .channel
		.rf_sink_ready           (sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sd_clk_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sd_clk_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sd_clk_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sd_clk_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sd_clk_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sd_clk_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                          //     (terminated)
		.m0_writeresponserequest (),                                                                               //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                            //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                     //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                         // clk_reset.reset
		.in_data           (sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sd_clk_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sd_clk_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                          // (terminated)
		.csr_read          (1'b0),                                                                           // (terminated)
		.csr_write         (1'b0),                                                                           // (terminated)
		.csr_readdata      (),                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                           // (terminated)
		.almost_full_data  (),                                                                               // (terminated)
		.almost_empty_data (),                                                                               // (terminated)
		.in_empty          (1'b0),                                                                           // (terminated)
		.out_empty         (),                                                                               // (terminated)
		.in_error          (1'b0),                                                                           // (terminated)
		.out_error         (),                                                                               // (terminated)
		.in_channel        (1'b0),                                                                           // (terminated)
		.out_channel       ()                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sd_cmd_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                     //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                         //       clk_reset.reset
		.m0_address              (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sd_cmd_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_015_src_ready),                                                     //              cp.ready
		.cp_valid                (cmd_xbar_mux_015_src_valid),                                                     //                .valid
		.cp_data                 (cmd_xbar_mux_015_src_data),                                                      //                .data
		.cp_startofpacket        (cmd_xbar_mux_015_src_startofpacket),                                             //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_015_src_endofpacket),                                               //                .endofpacket
		.cp_channel              (cmd_xbar_mux_015_src_channel),                                                   //                .channel
		.rf_sink_ready           (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                          //     (terminated)
		.m0_writeresponserequest (),                                                                               //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                            //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                     //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                         // clk_reset.reset
		.in_data           (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                          // (terminated)
		.csr_read          (1'b0),                                                                           // (terminated)
		.csr_write         (1'b0),                                                                           // (terminated)
		.csr_readdata      (),                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                           // (terminated)
		.almost_full_data  (),                                                                               // (terminated)
		.almost_empty_data (),                                                                               // (terminated)
		.in_empty          (1'b0),                                                                           // (terminated)
		.out_empty         (),                                                                               // (terminated)
		.in_error          (1'b0),                                                                           // (terminated)
		.out_error         (),                                                                               // (terminated)
		.in_channel        (1'b0),                                                                           // (terminated)
		.out_channel       ()                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sd_dat_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                     //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                         //       clk_reset.reset
		.m0_address              (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sd_dat_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_016_src_ready),                                                     //              cp.ready
		.cp_valid                (cmd_xbar_mux_016_src_valid),                                                     //                .valid
		.cp_data                 (cmd_xbar_mux_016_src_data),                                                      //                .data
		.cp_startofpacket        (cmd_xbar_mux_016_src_startofpacket),                                             //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_016_src_endofpacket),                                               //                .endofpacket
		.cp_channel              (cmd_xbar_mux_016_src_channel),                                                   //                .channel
		.rf_sink_ready           (sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sd_dat_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sd_dat_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sd_dat_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sd_dat_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sd_dat_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sd_dat_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                          //     (terminated)
		.m0_writeresponserequest (),                                                                               //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                            //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                     //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                         // clk_reset.reset
		.in_data           (sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sd_dat_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sd_dat_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                          // (terminated)
		.csr_read          (1'b0),                                                                           // (terminated)
		.csr_write         (1'b0),                                                                           // (terminated)
		.csr_readdata      (),                                                                               // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                           // (terminated)
		.almost_full_data  (),                                                                               // (terminated)
		.almost_empty_data (),                                                                               // (terminated)
		.in_empty          (1'b0),                                                                           // (terminated)
		.out_empty         (),                                                                               // (terminated)
		.in_error          (1'b0),                                                                           // (terminated)
		.out_error         (),                                                                               // (terminated)
		.in_channel        (1'b0),                                                                           // (terminated)
		.out_channel       ()                                                                                // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sd_wp_n_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                      //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          //       clk_reset.reset
		.m0_address              (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_017_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_017_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_017_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_017_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_017_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_017_src_channel),                                                    //                .channel
		.rf_sink_ready           (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                      //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.in_data           (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                                       //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                                           //       clk_reset.reset
		.m0_address              (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_018_src_ready),                                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_018_src_valid),                                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_018_src_data),                                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_018_src_startofpacket),                                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_018_src_endofpacket),                                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_018_src_channel),                                                                     //                .channel
		.rf_sink_ready           (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                                       //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                                           // clk_reset.reset
		.in_data           (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                            // (terminated)
		.csr_read          (1'b0),                                                                                             // (terminated)
		.csr_write         (1'b0),                                                                                             // (terminated)
		.csr_readdata      (),                                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                             // (terminated)
		.almost_full_data  (),                                                                                                 // (terminated)
		.almost_empty_data (),                                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                                             // (terminated)
		.out_empty         (),                                                                                                 // (terminated)
		.in_error          (1'b0),                                                                                             // (terminated)
		.out_error         (),                                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                                             // (terminated)
		.out_channel       ()                                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                                   //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                                       //       clk_reset.reset
		.m0_address              (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_019_src_ready),                                                                   //              cp.ready
		.cp_valid                (cmd_xbar_mux_019_src_valid),                                                                   //                .valid
		.cp_data                 (cmd_xbar_mux_019_src_data),                                                                    //                .data
		.cp_startofpacket        (cmd_xbar_mux_019_src_startofpacket),                                                           //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_019_src_endofpacket),                                                             //                .endofpacket
		.cp_channel              (cmd_xbar_mux_019_src_channel),                                                                 //                .channel
		.rf_sink_ready           (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                                        //     (terminated)
		.m0_writeresponserequest (),                                                                                             //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                          //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                                   //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                                       // clk_reset.reset
		.in_data           (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                                        // (terminated)
		.csr_read          (1'b0),                                                                                         // (terminated)
		.csr_write         (1'b0),                                                                                         // (terminated)
		.csr_readdata      (),                                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                                         // (terminated)
		.almost_full_data  (),                                                                                             // (terminated)
		.almost_empty_data (),                                                                                             // (terminated)
		.in_empty          (1'b0),                                                                                         // (terminated)
		.out_empty         (),                                                                                             // (terminated)
		.in_error          (1'b0),                                                                                         // (terminated)
		.out_error         (),                                                                                             // (terminated)
		.in_channel        (1'b0),                                                                                         // (terminated)
		.out_channel       ()                                                                                              // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_0_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                      //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          //       clk_reset.reset
		.m0_address              (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_0_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_020_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_020_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_020_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_020_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_020_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_020_src_channel),                                                    //                .channel
		.rf_sink_ready           (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_0_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                      //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.in_data           (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_0_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_0_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_1_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                      //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          //       clk_reset.reset
		.m0_address              (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_1_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_1_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_1_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_1_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_021_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_021_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_021_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_021_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_021_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_021_src_channel),                                                    //                .channel
		.rf_sink_ready           (timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_1_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                      //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.in_data           (timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_1_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_1_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_2_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                      //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          //       clk_reset.reset
		.m0_address              (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_2_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_2_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_2_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_2_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_022_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_022_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_022_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_022_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_022_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_022_src_channel),                                                    //                .channel
		.rf_sink_ready           (timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_2_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                      //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.in_data           (timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_2_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_2_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_3_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                      //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          //       clk_reset.reset
		.m0_address              (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_3_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_3_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_3_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_3_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_3_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_3_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_023_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_023_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_023_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_023_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_023_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_023_src_channel),                                                    //                .channel
		.rf_sink_ready           (timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_3_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                      //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.in_data           (timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_3_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_3_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_4_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                      //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          //       clk_reset.reset
		.m0_address              (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_4_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_4_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_4_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_4_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_4_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_4_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_024_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_024_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_024_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_024_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_024_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_024_src_channel),                                                    //                .channel
		.rf_sink_ready           (timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_4_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                      //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.in_data           (timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_4_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_4_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_5_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                      //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          //       clk_reset.reset
		.m0_address              (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_5_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_5_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_5_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_5_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_5_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_5_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_025_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_025_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_025_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_025_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_025_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_025_src_channel),                                                    //                .channel
		.rf_sink_ready           (timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_5_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                      //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.in_data           (timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_5_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_5_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_6_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                      //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          //       clk_reset.reset
		.m0_address              (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_6_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_6_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_6_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_6_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_6_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_6_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_026_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_026_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_026_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_026_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_026_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_026_src_channel),                                                    //                .channel
		.rf_sink_ready           (timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_6_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                      //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.in_data           (timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_6_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_6_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_7_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                      //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          //       clk_reset.reset
		.m0_address              (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_7_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_7_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_7_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_7_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_7_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_7_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_027_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_027_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_027_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_027_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_027_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_027_src_channel),                                                    //                .channel
		.rf_sink_ready           (timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_7_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                      //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.in_data           (timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_7_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_7_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_8_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                      //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          //       clk_reset.reset
		.m0_address              (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_8_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_8_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_8_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_8_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_8_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_8_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_028_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_028_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_028_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_028_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_028_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_028_src_channel),                                                    //                .channel
		.rf_sink_ready           (timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_8_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                      //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.in_data           (timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_8_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_8_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_9_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                      //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          //       clk_reset.reset
		.m0_address              (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_9_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_9_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_9_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_9_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_9_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_9_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_029_src_ready),                                                      //              cp.ready
		.cp_valid                (cmd_xbar_mux_029_src_valid),                                                      //                .valid
		.cp_data                 (cmd_xbar_mux_029_src_data),                                                       //                .data
		.cp_startofpacket        (cmd_xbar_mux_029_src_startofpacket),                                              //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_029_src_endofpacket),                                                //                .endofpacket
		.cp_channel              (cmd_xbar_mux_029_src_channel),                                                    //                .channel
		.rf_sink_ready           (timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_9_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_9_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_9_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_9_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_9_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_9_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                           //     (terminated)
		.m0_writeresponserequest (),                                                                                //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                             //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                      //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                          // clk_reset.reset
		.in_data           (timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_9_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_9_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                           // (terminated)
		.csr_read          (1'b0),                                                                            // (terminated)
		.csr_write         (1'b0),                                                                            // (terminated)
		.csr_readdata      (),                                                                                // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                            // (terminated)
		.almost_full_data  (),                                                                                // (terminated)
		.almost_empty_data (),                                                                                // (terminated)
		.in_empty          (1'b0),                                                                            // (terminated)
		.out_empty         (),                                                                                // (terminated)
		.in_error          (1'b0),                                                                            // (terminated)
		.out_error         (),                                                                                // (terminated)
		.in_channel        (1'b0),                                                                            // (terminated)
		.out_channel       ()                                                                                 // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_10_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                       //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                           //       clk_reset.reset
		.m0_address              (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_10_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_10_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_10_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_10_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_10_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_10_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_030_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_030_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_030_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_030_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_030_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_030_src_channel),                                                     //                .channel
		.rf_sink_ready           (timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_10_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_10_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_10_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_10_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_10_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_10_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                       //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.in_data           (timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_10_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_10_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_11_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                       //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                           //       clk_reset.reset
		.m0_address              (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_11_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_11_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_11_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_11_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_11_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_11_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_031_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_031_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_031_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_031_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_031_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_031_src_channel),                                                     //                .channel
		.rf_sink_ready           (timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_11_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_11_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_11_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_11_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_11_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_11_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                       //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.in_data           (timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_11_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_11_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_12_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                       //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                           //       clk_reset.reset
		.m0_address              (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_12_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_12_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_12_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_12_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_12_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_12_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_032_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_032_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_032_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_032_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_032_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_032_src_channel),                                                     //                .channel
		.rf_sink_ready           (timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_12_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_12_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_12_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_12_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_12_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_12_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                       //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.in_data           (timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_12_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_12_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_13_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                       //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                           //       clk_reset.reset
		.m0_address              (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_13_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_13_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_13_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_13_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_13_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_13_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_033_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_033_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_033_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_033_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_033_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_033_src_channel),                                                     //                .channel
		.rf_sink_ready           (timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_13_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_13_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_13_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_13_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_13_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_13_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                       //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.in_data           (timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_13_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_13_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_14_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                       //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                           //       clk_reset.reset
		.m0_address              (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_14_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_14_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_14_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_14_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_14_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_14_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_034_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_034_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_034_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_034_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_034_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_034_src_channel),                                                     //                .channel
		.rf_sink_ready           (timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_14_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_14_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_14_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_14_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_14_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_14_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                       //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.in_data           (timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_14_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_14_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) timer_15_s1_translator_avalon_universal_slave_0_agent (
		.clk                     (pll_c2_clk),                                                                       //             clk.clk
		.reset                   (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                           //       clk_reset.reset
		.m0_address              (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (timer_15_s1_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (timer_15_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (timer_15_s1_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (timer_15_s1_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (timer_15_s1_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (timer_15_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_035_src_ready),                                                       //              cp.ready
		.cp_valid                (cmd_xbar_mux_035_src_valid),                                                       //                .valid
		.cp_data                 (cmd_xbar_mux_035_src_data),                                                        //                .data
		.cp_startofpacket        (cmd_xbar_mux_035_src_startofpacket),                                               //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_035_src_endofpacket),                                                 //                .endofpacket
		.cp_channel              (cmd_xbar_mux_035_src_channel),                                                     //                .channel
		.rf_sink_ready           (timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (timer_15_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (timer_15_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_sink_data    (timer_15_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.rdata_fifo_src_ready    (timer_15_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (timer_15_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (timer_15_s1_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                            //     (terminated)
		.m0_writeresponserequest (),                                                                                 //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                              //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (pll_c2_clk),                                                                       //       clk.clk
		.reset             (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.in_data           (timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (timer_15_s1_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (timer_15_s1_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                            // (terminated)
		.csr_read          (1'b0),                                                                             // (terminated)
		.csr_write         (1'b0),                                                                             // (terminated)
		.csr_readdata      (),                                                                                 // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                             // (terminated)
		.almost_full_data  (),                                                                                 // (terminated)
		.almost_empty_data (),                                                                                 // (terminated)
		.in_empty          (1'b0),                                                                             // (terminated)
		.out_empty         (),                                                                                 // (terminated)
		.in_error          (1'b0),                                                                             // (terminated)
		.out_error         (),                                                                                 // (terminated)
		.in_channel        (1'b0),                                                                             // (terminated)
		.out_channel       ()                                                                                  // (terminated)
	);

	altera_merlin_slave_agent #(
		.PKT_DATA_H                (31),
		.PKT_DATA_L                (0),
		.PKT_BEGIN_BURST           (64),
		.PKT_SYMBOL_W              (8),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.PKT_ADDR_H                (46),
		.PKT_ADDR_L                (36),
		.PKT_TRANS_COMPRESSED_READ (47),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.PKT_TRANS_READ            (50),
		.PKT_TRANS_LOCK            (51),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_BURSTWRAP_H           (56),
		.PKT_BURSTWRAP_L           (56),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_PROTECTION_H          (81),
		.PKT_PROTECTION_L          (79),
		.PKT_RESPONSE_STATUS_H     (87),
		.PKT_RESPONSE_STATUS_L     (86),
		.PKT_BURST_SIZE_H          (59),
		.PKT_BURST_SIZE_L          (57),
		.PKT_ORI_BURST_SIZE_L      (88),
		.PKT_ORI_BURST_SIZE_H      (90),
		.ST_CHANNEL_W              (37),
		.ST_DATA_W                 (91),
		.AVS_BURSTCOUNT_W          (3),
		.SUPPRESS_0_BYTEEN_CMD     (0),
		.PREVENT_FIFO_OVERFLOW     (1),
		.USE_READRESPONSE          (0),
		.USE_WRITERESPONSE         (0)
	) pll_pll_slave_translator_avalon_universal_slave_0_agent (
		.clk                     (clk_50_clk_clk),                                                                     //             clk.clk
		.reset                   (pll_inclk_interface_reset_reset_bridge_in_reset_reset),                              //       clk_reset.reset
		.m0_address              (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_address),                 //              m0.address
		.m0_burstcount           (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_burstcount),              //                .burstcount
		.m0_byteenable           (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_byteenable),              //                .byteenable
		.m0_debugaccess          (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_debugaccess),             //                .debugaccess
		.m0_lock                 (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_lock),                    //                .lock
		.m0_readdata             (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_readdata),                //                .readdata
		.m0_readdatavalid        (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_readdatavalid),           //                .readdatavalid
		.m0_read                 (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_read),                    //                .read
		.m0_waitrequest          (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_waitrequest),             //                .waitrequest
		.m0_writedata            (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_writedata),               //                .writedata
		.m0_write                (pll_pll_slave_translator_avalon_universal_slave_0_agent_m0_write),                   //                .write
		.rp_endofpacket          (pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),             //              rp.endofpacket
		.rp_ready                (pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_ready),                   //                .ready
		.rp_valid                (pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_valid),                   //                .valid
		.rp_data                 (pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_data),                    //                .data
		.rp_startofpacket        (pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket),           //                .startofpacket
		.cp_ready                (cmd_xbar_mux_036_src_ready),                                                         //              cp.ready
		.cp_valid                (cmd_xbar_mux_036_src_valid),                                                         //                .valid
		.cp_data                 (cmd_xbar_mux_036_src_data),                                                          //                .data
		.cp_startofpacket        (cmd_xbar_mux_036_src_startofpacket),                                                 //                .startofpacket
		.cp_endofpacket          (cmd_xbar_mux_036_src_endofpacket),                                                   //                .endofpacket
		.cp_channel              (cmd_xbar_mux_036_src_channel),                                                       //                .channel
		.rf_sink_ready           (pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //         rf_sink.ready
		.rf_sink_valid           (pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //                .valid
		.rf_sink_startofpacket   (pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //                .startofpacket
		.rf_sink_endofpacket     (pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //                .endofpacket
		.rf_sink_data            (pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //                .data
		.rf_source_ready         (pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //       rf_source.ready
		.rf_source_valid         (pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //                .valid
		.rf_source_startofpacket (pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //                .startofpacket
		.rf_source_endofpacket   (pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //                .endofpacket
		.rf_source_data          (pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //                .data
		.rdata_fifo_sink_ready   (pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready),       // rdata_fifo_sink.ready
		.rdata_fifo_sink_valid   (pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid),       //                .valid
		.rdata_fifo_sink_data    (pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),        //                .data
		.rdata_fifo_src_ready    (pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready),       //  rdata_fifo_src.ready
		.rdata_fifo_src_valid    (pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid),       //                .valid
		.rdata_fifo_src_data     (pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),        //                .data
		.m0_response             (2'b00),                                                                              //     (terminated)
		.m0_writeresponserequest (),                                                                                   //     (terminated)
		.m0_writeresponsevalid   (1'b0)                                                                                //     (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (92),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (1),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (1),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo (
		.clk               (clk_50_clk_clk),                                                                     //       clk.clk
		.reset             (pll_inclk_interface_reset_reset_bridge_in_reset_reset),                              // clk_reset.reset
		.in_data           (pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_data),             //        in.data
		.in_valid          (pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_valid),            //          .valid
		.in_ready          (pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_ready),            //          .ready
		.in_startofpacket  (pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_startofpacket),    //          .startofpacket
		.in_endofpacket    (pll_pll_slave_translator_avalon_universal_slave_0_agent_rf_source_endofpacket),      //          .endofpacket
		.out_data          (pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_data),          //       out.data
		.out_valid         (pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_valid),         //          .valid
		.out_ready         (pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_ready),         //          .ready
		.out_startofpacket (pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_startofpacket), //          .startofpacket
		.out_endofpacket   (pll_pll_slave_translator_avalon_universal_slave_0_agent_rsp_fifo_out_endofpacket),   //          .endofpacket
		.csr_address       (2'b00),                                                                              // (terminated)
		.csr_read          (1'b0),                                                                               // (terminated)
		.csr_write         (1'b0),                                                                               // (terminated)
		.csr_readdata      (),                                                                                   // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                               // (terminated)
		.almost_full_data  (),                                                                                   // (terminated)
		.almost_empty_data (),                                                                                   // (terminated)
		.in_empty          (1'b0),                                                                               // (terminated)
		.out_empty         (),                                                                                   // (terminated)
		.in_error          (1'b0),                                                                               // (terminated)
		.out_error         (),                                                                                   // (terminated)
		.in_channel        (1'b0),                                                                               // (terminated)
		.out_channel       ()                                                                                    // (terminated)
	);

	altera_avalon_sc_fifo #(
		.SYMBOLS_PER_BEAT    (1),
		.BITS_PER_SYMBOL     (34),
		.FIFO_DEPTH          (2),
		.CHANNEL_WIDTH       (0),
		.ERROR_WIDTH         (0),
		.USE_PACKETS         (0),
		.USE_FILL_LEVEL      (0),
		.EMPTY_LATENCY       (0),
		.USE_MEMORY_BLOCKS   (0),
		.USE_STORE_FORWARD   (0),
		.USE_ALMOST_FULL_IF  (0),
		.USE_ALMOST_EMPTY_IF (0)
	) pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo (
		.clk               (clk_50_clk_clk),                                                               //       clk.clk
		.reset             (pll_inclk_interface_reset_reset_bridge_in_reset_reset),                        // clk_reset.reset
		.in_data           (pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_data),  //        in.data
		.in_valid          (pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_valid), //          .valid
		.in_ready          (pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_src_ready), //          .ready
		.out_data          (pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_data),  //       out.data
		.out_valid         (pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_valid), //          .valid
		.out_ready         (pll_pll_slave_translator_avalon_universal_slave_0_agent_rdata_fifo_out_ready), //          .ready
		.csr_address       (2'b00),                                                                        // (terminated)
		.csr_read          (1'b0),                                                                         // (terminated)
		.csr_write         (1'b0),                                                                         // (terminated)
		.csr_readdata      (),                                                                             // (terminated)
		.csr_writedata     (32'b00000000000000000000000000000000),                                         // (terminated)
		.almost_full_data  (),                                                                             // (terminated)
		.almost_empty_data (),                                                                             // (terminated)
		.in_startofpacket  (1'b0),                                                                         // (terminated)
		.in_endofpacket    (1'b0),                                                                         // (terminated)
		.out_startofpacket (),                                                                             // (terminated)
		.out_endofpacket   (),                                                                             // (terminated)
		.in_empty          (1'b0),                                                                         // (terminated)
		.out_empty         (),                                                                             // (terminated)
		.in_error          (1'b0),                                                                         // (terminated)
		.out_error         (),                                                                             // (terminated)
		.in_channel        (1'b0),                                                                         // (terminated)
		.out_channel       ()                                                                              // (terminated)
	);

	DE2_115_SOPC_mm_interconnect_1_addr_router addr_router (
		.sink_ready         (clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_ready),         //      sink.ready
		.sink_valid         (clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_valid),         //          .valid
		.sink_data          (clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_data),          //          .data
		.sink_startofpacket (clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_startofpacket), //          .startofpacket
		.sink_endofpacket   (clock_crossing_io_m0_translator_avalon_universal_master_0_agent_cp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                                       //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                           // clk_reset.reset
		.src_ready          (addr_router_src_ready),                                                            //       src.ready
		.src_valid          (addr_router_src_valid),                                                            //          .valid
		.src_data           (addr_router_src_data),                                                             //          .data
		.src_channel        (addr_router_src_channel),                                                          //          .channel
		.src_startofpacket  (addr_router_src_startofpacket),                                                    //          .startofpacket
		.src_endofpacket    (addr_router_src_endofpacket)                                                       //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router (
		.sink_ready         (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sys_clk_timer_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                                  //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                      // clk_reset.reset
		.src_ready          (id_router_src_ready),                                                         //       src.ready
		.src_valid          (id_router_src_valid),                                                         //          .valid
		.src_data           (id_router_src_data),                                                          //          .data
		.src_channel        (id_router_src_channel),                                                       //          .channel
		.src_startofpacket  (id_router_src_startofpacket),                                                 //          .startofpacket
		.src_endofpacket    (id_router_src_endofpacket)                                                    //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_001 (
		.sink_ready         (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sysid_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                                     //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                         // clk_reset.reset
		.src_ready          (id_router_001_src_ready),                                                        //       src.ready
		.src_valid          (id_router_001_src_valid),                                                        //          .valid
		.src_data           (id_router_001_src_data),                                                         //          .data
		.src_channel        (id_router_001_src_channel),                                                      //          .channel
		.src_startofpacket  (id_router_001_src_startofpacket),                                                //          .startofpacket
		.src_endofpacket    (id_router_001_src_endofpacket)                                                   //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_002 (
		.sink_ready         (key_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (key_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (key_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (key_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (key_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                        //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),            // clk_reset.reset
		.src_ready          (id_router_002_src_ready),                                           //       src.ready
		.src_valid          (id_router_002_src_valid),                                           //          .valid
		.src_data           (id_router_002_src_data),                                            //          .data
		.src_channel        (id_router_002_src_channel),                                         //          .channel
		.src_startofpacket  (id_router_002_src_startofpacket),                                   //          .startofpacket
		.src_endofpacket    (id_router_002_src_endofpacket)                                      //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_003 (
		.sink_ready         (sw_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sw_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sw_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sw_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sw_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                       //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),           // clk_reset.reset
		.src_ready          (id_router_003_src_ready),                                          //       src.ready
		.src_valid          (id_router_003_src_valid),                                          //          .valid
		.src_data           (id_router_003_src_data),                                           //          .data
		.src_channel        (id_router_003_src_channel),                                        //          .channel
		.src_startofpacket  (id_router_003_src_startofpacket),                                  //          .startofpacket
		.src_endofpacket    (id_router_003_src_endofpacket)                                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_004 (
		.sink_ready         (ledg_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (ledg_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (ledg_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (ledg_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (ledg_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                         //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),             // clk_reset.reset
		.src_ready          (id_router_004_src_ready),                                            //       src.ready
		.src_valid          (id_router_004_src_valid),                                            //          .valid
		.src_data           (id_router_004_src_data),                                             //          .data
		.src_channel        (id_router_004_src_channel),                                          //          .channel
		.src_startofpacket  (id_router_004_src_startofpacket),                                    //          .startofpacket
		.src_endofpacket    (id_router_004_src_endofpacket)                                       //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_005 (
		.sink_ready         (ledr_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (ledr_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (ledr_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (ledr_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (ledr_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                         //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),             // clk_reset.reset
		.src_ready          (id_router_005_src_ready),                                            //       src.ready
		.src_valid          (id_router_005_src_valid),                                            //          .valid
		.src_data           (id_router_005_src_data),                                             //          .data
		.src_channel        (id_router_005_src_channel),                                          //          .channel
		.src_startofpacket  (id_router_005_src_startofpacket),                                    //          .startofpacket
		.src_endofpacket    (id_router_005_src_endofpacket)                                       //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_006 (
		.sink_ready         (rs232_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (rs232_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (rs232_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (rs232_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (rs232_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                          //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),              // clk_reset.reset
		.src_ready          (id_router_006_src_ready),                                             //       src.ready
		.src_valid          (id_router_006_src_valid),                                             //          .valid
		.src_data           (id_router_006_src_data),                                              //          .data
		.src_channel        (id_router_006_src_channel),                                           //          .channel
		.src_startofpacket  (id_router_006_src_startofpacket),                                     //          .startofpacket
		.src_endofpacket    (id_router_006_src_endofpacket)                                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_007 (
		.sink_ready         (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                            //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (id_router_007_src_ready),                                               //       src.ready
		.src_valid          (id_router_007_src_valid),                                               //          .valid
		.src_data           (id_router_007_src_data),                                                //          .data
		.src_channel        (id_router_007_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_007_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_007_src_endofpacket)                                          //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_008 (
		.sink_ready         (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                            //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (id_router_008_src_ready),                                               //       src.ready
		.src_valid          (id_router_008_src_valid),                                               //          .valid
		.src_data           (id_router_008_src_data),                                                //          .data
		.src_channel        (id_router_008_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_008_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_008_src_endofpacket)                                          //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_009 (
		.sink_ready         (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (eep_i2c_scl_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                                //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                    // clk_reset.reset
		.src_ready          (id_router_009_src_ready),                                                   //       src.ready
		.src_valid          (id_router_009_src_valid),                                                   //          .valid
		.src_data           (id_router_009_src_data),                                                    //          .data
		.src_channel        (id_router_009_src_channel),                                                 //          .channel
		.src_startofpacket  (id_router_009_src_startofpacket),                                           //          .startofpacket
		.src_endofpacket    (id_router_009_src_endofpacket)                                              //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_010 (
		.sink_ready         (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (eep_i2c_sda_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                                //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                    // clk_reset.reset
		.src_ready          (id_router_010_src_ready),                                                   //       src.ready
		.src_valid          (id_router_010_src_valid),                                                   //          .valid
		.src_data           (id_router_010_src_data),                                                    //          .data
		.src_channel        (id_router_010_src_channel),                                                 //          .channel
		.src_startofpacket  (id_router_010_src_startofpacket),                                           //          .startofpacket
		.src_endofpacket    (id_router_010_src_endofpacket)                                              //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_011 (
		.sink_ready         (lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (lcd_control_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                                   //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.src_ready          (id_router_011_src_ready),                                                      //       src.ready
		.src_valid          (id_router_011_src_valid),                                                      //          .valid
		.src_data           (id_router_011_src_data),                                                       //          .data
		.src_channel        (id_router_011_src_channel),                                                    //          .channel
		.src_startofpacket  (id_router_011_src_startofpacket),                                              //          .startofpacket
		.src_endofpacket    (id_router_011_src_endofpacket)                                                 //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_012 (
		.sink_ready         (ir_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (ir_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (ir_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (ir_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (ir_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                       //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),           // clk_reset.reset
		.src_ready          (id_router_012_src_ready),                                          //       src.ready
		.src_valid          (id_router_012_src_valid),                                          //          .valid
		.src_data           (id_router_012_src_data),                                           //          .data
		.src_channel        (id_router_012_src_channel),                                        //          .channel
		.src_startofpacket  (id_router_012_src_startofpacket),                                  //          .startofpacket
		.src_endofpacket    (id_router_012_src_endofpacket)                                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_013 (
		.sink_ready         (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (seg7_avalon_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                                   //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                       // clk_reset.reset
		.src_ready          (id_router_013_src_ready),                                                      //       src.ready
		.src_valid          (id_router_013_src_valid),                                                      //          .valid
		.src_data           (id_router_013_src_data),                                                       //          .data
		.src_channel        (id_router_013_src_channel),                                                    //          .channel
		.src_startofpacket  (id_router_013_src_startofpacket),                                              //          .startofpacket
		.src_endofpacket    (id_router_013_src_endofpacket)                                                 //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_014 (
		.sink_ready         (sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sd_clk_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                           //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),               // clk_reset.reset
		.src_ready          (id_router_014_src_ready),                                              //       src.ready
		.src_valid          (id_router_014_src_valid),                                              //          .valid
		.src_data           (id_router_014_src_data),                                               //          .data
		.src_channel        (id_router_014_src_channel),                                            //          .channel
		.src_startofpacket  (id_router_014_src_startofpacket),                                      //          .startofpacket
		.src_endofpacket    (id_router_014_src_endofpacket)                                         //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_015 (
		.sink_ready         (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sd_cmd_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                           //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),               // clk_reset.reset
		.src_ready          (id_router_015_src_ready),                                              //       src.ready
		.src_valid          (id_router_015_src_valid),                                              //          .valid
		.src_data           (id_router_015_src_data),                                               //          .data
		.src_channel        (id_router_015_src_channel),                                            //          .channel
		.src_startofpacket  (id_router_015_src_startofpacket),                                      //          .startofpacket
		.src_endofpacket    (id_router_015_src_endofpacket)                                         //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_016 (
		.sink_ready         (sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sd_dat_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                           //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),               // clk_reset.reset
		.src_ready          (id_router_016_src_ready),                                              //       src.ready
		.src_valid          (id_router_016_src_valid),                                              //          .valid
		.src_data           (id_router_016_src_data),                                               //          .data
		.src_channel        (id_router_016_src_channel),                                            //          .channel
		.src_startofpacket  (id_router_016_src_startofpacket),                                      //          .startofpacket
		.src_endofpacket    (id_router_016_src_endofpacket)                                         //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_017 (
		.sink_ready         (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sd_wp_n_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                            //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (id_router_017_src_ready),                                               //       src.ready
		.src_valid          (id_router_017_src_valid),                                               //          .valid
		.src_data           (id_router_017_src_data),                                                //          .data
		.src_channel        (id_router_017_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_017_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_017_src_endofpacket)                                          //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_018 (
		.sink_ready         (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (jtag_uart_avalon_jtag_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                                 // clk_reset.reset
		.src_ready          (id_router_018_src_ready),                                                                //       src.ready
		.src_valid          (id_router_018_src_valid),                                                                //          .valid
		.src_data           (id_router_018_src_data),                                                                 //          .data
		.src_channel        (id_router_018_src_channel),                                                              //          .channel
		.src_startofpacket  (id_router_018_src_startofpacket),                                                        //          .startofpacket
		.src_endofpacket    (id_router_018_src_endofpacket)                                                           //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_019 (
		.sink_ready         (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (sysver_0_avalon_slave_0_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                                         //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                             // clk_reset.reset
		.src_ready          (id_router_019_src_ready),                                                            //       src.ready
		.src_valid          (id_router_019_src_valid),                                                            //          .valid
		.src_data           (id_router_019_src_data),                                                             //          .data
		.src_channel        (id_router_019_src_channel),                                                          //          .channel
		.src_startofpacket  (id_router_019_src_startofpacket),                                                    //          .startofpacket
		.src_endofpacket    (id_router_019_src_endofpacket)                                                       //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_020 (
		.sink_ready         (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_0_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                            //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (id_router_020_src_ready),                                               //       src.ready
		.src_valid          (id_router_020_src_valid),                                               //          .valid
		.src_data           (id_router_020_src_data),                                                //          .data
		.src_channel        (id_router_020_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_020_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_020_src_endofpacket)                                          //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_021 (
		.sink_ready         (timer_1_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_1_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_1_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_1_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_1_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                            //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (id_router_021_src_ready),                                               //       src.ready
		.src_valid          (id_router_021_src_valid),                                               //          .valid
		.src_data           (id_router_021_src_data),                                                //          .data
		.src_channel        (id_router_021_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_021_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_021_src_endofpacket)                                          //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_022 (
		.sink_ready         (timer_2_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_2_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_2_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_2_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_2_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                            //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (id_router_022_src_ready),                                               //       src.ready
		.src_valid          (id_router_022_src_valid),                                               //          .valid
		.src_data           (id_router_022_src_data),                                                //          .data
		.src_channel        (id_router_022_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_022_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_022_src_endofpacket)                                          //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_023 (
		.sink_ready         (timer_3_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_3_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_3_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_3_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_3_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                            //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (id_router_023_src_ready),                                               //       src.ready
		.src_valid          (id_router_023_src_valid),                                               //          .valid
		.src_data           (id_router_023_src_data),                                                //          .data
		.src_channel        (id_router_023_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_023_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_023_src_endofpacket)                                          //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_024 (
		.sink_ready         (timer_4_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_4_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_4_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_4_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_4_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                            //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (id_router_024_src_ready),                                               //       src.ready
		.src_valid          (id_router_024_src_valid),                                               //          .valid
		.src_data           (id_router_024_src_data),                                                //          .data
		.src_channel        (id_router_024_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_024_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_024_src_endofpacket)                                          //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_025 (
		.sink_ready         (timer_5_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_5_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_5_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_5_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_5_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                            //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (id_router_025_src_ready),                                               //       src.ready
		.src_valid          (id_router_025_src_valid),                                               //          .valid
		.src_data           (id_router_025_src_data),                                                //          .data
		.src_channel        (id_router_025_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_025_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_025_src_endofpacket)                                          //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_026 (
		.sink_ready         (timer_6_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_6_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_6_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_6_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_6_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                            //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (id_router_026_src_ready),                                               //       src.ready
		.src_valid          (id_router_026_src_valid),                                               //          .valid
		.src_data           (id_router_026_src_data),                                                //          .data
		.src_channel        (id_router_026_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_026_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_026_src_endofpacket)                                          //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_027 (
		.sink_ready         (timer_7_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_7_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_7_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_7_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_7_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                            //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (id_router_027_src_ready),                                               //       src.ready
		.src_valid          (id_router_027_src_valid),                                               //          .valid
		.src_data           (id_router_027_src_data),                                                //          .data
		.src_channel        (id_router_027_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_027_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_027_src_endofpacket)                                          //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_028 (
		.sink_ready         (timer_8_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_8_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_8_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_8_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_8_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                            //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (id_router_028_src_ready),                                               //       src.ready
		.src_valid          (id_router_028_src_valid),                                               //          .valid
		.src_data           (id_router_028_src_data),                                                //          .data
		.src_channel        (id_router_028_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_028_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_028_src_endofpacket)                                          //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_029 (
		.sink_ready         (timer_9_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_9_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_9_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_9_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_9_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                            //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                // clk_reset.reset
		.src_ready          (id_router_029_src_ready),                                               //       src.ready
		.src_valid          (id_router_029_src_valid),                                               //          .valid
		.src_data           (id_router_029_src_data),                                                //          .data
		.src_channel        (id_router_029_src_channel),                                             //          .channel
		.src_startofpacket  (id_router_029_src_startofpacket),                                       //          .startofpacket
		.src_endofpacket    (id_router_029_src_endofpacket)                                          //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_030 (
		.sink_ready         (timer_10_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_10_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_10_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_10_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_10_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                 // clk_reset.reset
		.src_ready          (id_router_030_src_ready),                                                //       src.ready
		.src_valid          (id_router_030_src_valid),                                                //          .valid
		.src_data           (id_router_030_src_data),                                                 //          .data
		.src_channel        (id_router_030_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_030_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_030_src_endofpacket)                                           //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_031 (
		.sink_ready         (timer_11_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_11_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_11_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_11_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_11_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                 // clk_reset.reset
		.src_ready          (id_router_031_src_ready),                                                //       src.ready
		.src_valid          (id_router_031_src_valid),                                                //          .valid
		.src_data           (id_router_031_src_data),                                                 //          .data
		.src_channel        (id_router_031_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_031_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_031_src_endofpacket)                                           //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_032 (
		.sink_ready         (timer_12_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_12_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_12_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_12_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_12_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                 // clk_reset.reset
		.src_ready          (id_router_032_src_ready),                                                //       src.ready
		.src_valid          (id_router_032_src_valid),                                                //          .valid
		.src_data           (id_router_032_src_data),                                                 //          .data
		.src_channel        (id_router_032_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_032_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_032_src_endofpacket)                                           //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_033 (
		.sink_ready         (timer_13_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_13_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_13_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_13_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_13_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                 // clk_reset.reset
		.src_ready          (id_router_033_src_ready),                                                //       src.ready
		.src_valid          (id_router_033_src_valid),                                                //          .valid
		.src_data           (id_router_033_src_data),                                                 //          .data
		.src_channel        (id_router_033_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_033_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_033_src_endofpacket)                                           //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_034 (
		.sink_ready         (timer_14_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_14_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_14_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_14_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_14_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                 // clk_reset.reset
		.src_ready          (id_router_034_src_ready),                                                //       src.ready
		.src_valid          (id_router_034_src_valid),                                                //          .valid
		.src_data           (id_router_034_src_data),                                                 //          .data
		.src_channel        (id_router_034_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_034_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_034_src_endofpacket)                                           //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router id_router_035 (
		.sink_ready         (timer_15_s1_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (timer_15_s1_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (timer_15_s1_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (timer_15_s1_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (timer_15_s1_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (pll_c2_clk),                                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset),                 // clk_reset.reset
		.src_ready          (id_router_035_src_ready),                                                //       src.ready
		.src_valid          (id_router_035_src_valid),                                                //          .valid
		.src_data           (id_router_035_src_data),                                                 //          .data
		.src_channel        (id_router_035_src_channel),                                              //          .channel
		.src_startofpacket  (id_router_035_src_startofpacket),                                        //          .startofpacket
		.src_endofpacket    (id_router_035_src_endofpacket)                                           //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_id_router_036 id_router_036 (
		.sink_ready         (pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_ready),         //      sink.ready
		.sink_valid         (pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_valid),         //          .valid
		.sink_data          (pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_data),          //          .data
		.sink_startofpacket (pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_startofpacket), //          .startofpacket
		.sink_endofpacket   (pll_pll_slave_translator_avalon_universal_slave_0_agent_rp_endofpacket),   //          .endofpacket
		.clk                (clk_50_clk_clk),                                                           //       clk.clk
		.reset              (pll_inclk_interface_reset_reset_bridge_in_reset_reset),                    // clk_reset.reset
		.src_ready          (id_router_036_src_ready),                                                  //       src.ready
		.src_valid          (id_router_036_src_valid),                                                  //          .valid
		.src_data           (id_router_036_src_data),                                                   //          .data
		.src_channel        (id_router_036_src_channel),                                                //          .channel
		.src_startofpacket  (id_router_036_src_startofpacket),                                          //          .startofpacket
		.src_endofpacket    (id_router_036_src_endofpacket)                                             //          .endofpacket
	);

	altera_merlin_traffic_limiter #(
		.PKT_DEST_ID_H             (77),
		.PKT_DEST_ID_L             (72),
		.PKT_SRC_ID_H              (71),
		.PKT_SRC_ID_L              (66),
		.PKT_TRANS_POSTED          (48),
		.PKT_TRANS_WRITE           (49),
		.MAX_OUTSTANDING_RESPONSES (5),
		.PIPELINED                 (0),
		.ST_DATA_W                 (91),
		.ST_CHANNEL_W              (37),
		.VALID_WIDTH               (37),
		.ENFORCE_ORDER             (1),
		.PREVENT_HAZARDS           (0),
		.PKT_BYTE_CNT_H            (55),
		.PKT_BYTE_CNT_L            (53),
		.PKT_BYTEEN_H              (35),
		.PKT_BYTEEN_L              (32),
		.REORDER                   (0)
	) limiter (
		.clk                    (pll_c2_clk),                                             //       clk.clk
		.reset                  (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.cmd_sink_ready         (addr_router_src_ready),                                  //  cmd_sink.ready
		.cmd_sink_valid         (addr_router_src_valid),                                  //          .valid
		.cmd_sink_data          (addr_router_src_data),                                   //          .data
		.cmd_sink_channel       (addr_router_src_channel),                                //          .channel
		.cmd_sink_startofpacket (addr_router_src_startofpacket),                          //          .startofpacket
		.cmd_sink_endofpacket   (addr_router_src_endofpacket),                            //          .endofpacket
		.cmd_src_ready          (limiter_cmd_src_ready),                                  //   cmd_src.ready
		.cmd_src_data           (limiter_cmd_src_data),                                   //          .data
		.cmd_src_channel        (limiter_cmd_src_channel),                                //          .channel
		.cmd_src_startofpacket  (limiter_cmd_src_startofpacket),                          //          .startofpacket
		.cmd_src_endofpacket    (limiter_cmd_src_endofpacket),                            //          .endofpacket
		.rsp_sink_ready         (rsp_xbar_mux_src_ready),                                 //  rsp_sink.ready
		.rsp_sink_valid         (rsp_xbar_mux_src_valid),                                 //          .valid
		.rsp_sink_channel       (rsp_xbar_mux_src_channel),                               //          .channel
		.rsp_sink_data          (rsp_xbar_mux_src_data),                                  //          .data
		.rsp_sink_startofpacket (rsp_xbar_mux_src_startofpacket),                         //          .startofpacket
		.rsp_sink_endofpacket   (rsp_xbar_mux_src_endofpacket),                           //          .endofpacket
		.rsp_src_ready          (limiter_rsp_src_ready),                                  //   rsp_src.ready
		.rsp_src_valid          (limiter_rsp_src_valid),                                  //          .valid
		.rsp_src_data           (limiter_rsp_src_data),                                   //          .data
		.rsp_src_channel        (limiter_rsp_src_channel),                                //          .channel
		.rsp_src_startofpacket  (limiter_rsp_src_startofpacket),                          //          .startofpacket
		.rsp_src_endofpacket    (limiter_rsp_src_endofpacket),                            //          .endofpacket
		.cmd_src_valid          (limiter_cmd_valid_data)                                  // cmd_valid.data
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_demux cmd_xbar_demux (
		.clk                 (pll_c2_clk),                                             //        clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), //  clk_reset.reset
		.sink_ready          (limiter_cmd_src_ready),                                  //       sink.ready
		.sink_channel        (limiter_cmd_src_channel),                                //           .channel
		.sink_data           (limiter_cmd_src_data),                                   //           .data
		.sink_startofpacket  (limiter_cmd_src_startofpacket),                          //           .startofpacket
		.sink_endofpacket    (limiter_cmd_src_endofpacket),                            //           .endofpacket
		.sink_valid          (limiter_cmd_valid_data),                                 // sink_valid.data
		.src0_ready          (cmd_xbar_demux_src0_ready),                              //       src0.ready
		.src0_valid          (cmd_xbar_demux_src0_valid),                              //           .valid
		.src0_data           (cmd_xbar_demux_src0_data),                               //           .data
		.src0_channel        (cmd_xbar_demux_src0_channel),                            //           .channel
		.src0_startofpacket  (cmd_xbar_demux_src0_startofpacket),                      //           .startofpacket
		.src0_endofpacket    (cmd_xbar_demux_src0_endofpacket),                        //           .endofpacket
		.src1_ready          (cmd_xbar_demux_src1_ready),                              //       src1.ready
		.src1_valid          (cmd_xbar_demux_src1_valid),                              //           .valid
		.src1_data           (cmd_xbar_demux_src1_data),                               //           .data
		.src1_channel        (cmd_xbar_demux_src1_channel),                            //           .channel
		.src1_startofpacket  (cmd_xbar_demux_src1_startofpacket),                      //           .startofpacket
		.src1_endofpacket    (cmd_xbar_demux_src1_endofpacket),                        //           .endofpacket
		.src2_ready          (cmd_xbar_demux_src2_ready),                              //       src2.ready
		.src2_valid          (cmd_xbar_demux_src2_valid),                              //           .valid
		.src2_data           (cmd_xbar_demux_src2_data),                               //           .data
		.src2_channel        (cmd_xbar_demux_src2_channel),                            //           .channel
		.src2_startofpacket  (cmd_xbar_demux_src2_startofpacket),                      //           .startofpacket
		.src2_endofpacket    (cmd_xbar_demux_src2_endofpacket),                        //           .endofpacket
		.src3_ready          (cmd_xbar_demux_src3_ready),                              //       src3.ready
		.src3_valid          (cmd_xbar_demux_src3_valid),                              //           .valid
		.src3_data           (cmd_xbar_demux_src3_data),                               //           .data
		.src3_channel        (cmd_xbar_demux_src3_channel),                            //           .channel
		.src3_startofpacket  (cmd_xbar_demux_src3_startofpacket),                      //           .startofpacket
		.src3_endofpacket    (cmd_xbar_demux_src3_endofpacket),                        //           .endofpacket
		.src4_ready          (cmd_xbar_demux_src4_ready),                              //       src4.ready
		.src4_valid          (cmd_xbar_demux_src4_valid),                              //           .valid
		.src4_data           (cmd_xbar_demux_src4_data),                               //           .data
		.src4_channel        (cmd_xbar_demux_src4_channel),                            //           .channel
		.src4_startofpacket  (cmd_xbar_demux_src4_startofpacket),                      //           .startofpacket
		.src4_endofpacket    (cmd_xbar_demux_src4_endofpacket),                        //           .endofpacket
		.src5_ready          (cmd_xbar_demux_src5_ready),                              //       src5.ready
		.src5_valid          (cmd_xbar_demux_src5_valid),                              //           .valid
		.src5_data           (cmd_xbar_demux_src5_data),                               //           .data
		.src5_channel        (cmd_xbar_demux_src5_channel),                            //           .channel
		.src5_startofpacket  (cmd_xbar_demux_src5_startofpacket),                      //           .startofpacket
		.src5_endofpacket    (cmd_xbar_demux_src5_endofpacket),                        //           .endofpacket
		.src6_ready          (cmd_xbar_demux_src6_ready),                              //       src6.ready
		.src6_valid          (cmd_xbar_demux_src6_valid),                              //           .valid
		.src6_data           (cmd_xbar_demux_src6_data),                               //           .data
		.src6_channel        (cmd_xbar_demux_src6_channel),                            //           .channel
		.src6_startofpacket  (cmd_xbar_demux_src6_startofpacket),                      //           .startofpacket
		.src6_endofpacket    (cmd_xbar_demux_src6_endofpacket),                        //           .endofpacket
		.src7_ready          (cmd_xbar_demux_src7_ready),                              //       src7.ready
		.src7_valid          (cmd_xbar_demux_src7_valid),                              //           .valid
		.src7_data           (cmd_xbar_demux_src7_data),                               //           .data
		.src7_channel        (cmd_xbar_demux_src7_channel),                            //           .channel
		.src7_startofpacket  (cmd_xbar_demux_src7_startofpacket),                      //           .startofpacket
		.src7_endofpacket    (cmd_xbar_demux_src7_endofpacket),                        //           .endofpacket
		.src8_ready          (cmd_xbar_demux_src8_ready),                              //       src8.ready
		.src8_valid          (cmd_xbar_demux_src8_valid),                              //           .valid
		.src8_data           (cmd_xbar_demux_src8_data),                               //           .data
		.src8_channel        (cmd_xbar_demux_src8_channel),                            //           .channel
		.src8_startofpacket  (cmd_xbar_demux_src8_startofpacket),                      //           .startofpacket
		.src8_endofpacket    (cmd_xbar_demux_src8_endofpacket),                        //           .endofpacket
		.src9_ready          (cmd_xbar_demux_src9_ready),                              //       src9.ready
		.src9_valid          (cmd_xbar_demux_src9_valid),                              //           .valid
		.src9_data           (cmd_xbar_demux_src9_data),                               //           .data
		.src9_channel        (cmd_xbar_demux_src9_channel),                            //           .channel
		.src9_startofpacket  (cmd_xbar_demux_src9_startofpacket),                      //           .startofpacket
		.src9_endofpacket    (cmd_xbar_demux_src9_endofpacket),                        //           .endofpacket
		.src10_ready         (cmd_xbar_demux_src10_ready),                             //      src10.ready
		.src10_valid         (cmd_xbar_demux_src10_valid),                             //           .valid
		.src10_data          (cmd_xbar_demux_src10_data),                              //           .data
		.src10_channel       (cmd_xbar_demux_src10_channel),                           //           .channel
		.src10_startofpacket (cmd_xbar_demux_src10_startofpacket),                     //           .startofpacket
		.src10_endofpacket   (cmd_xbar_demux_src10_endofpacket),                       //           .endofpacket
		.src11_ready         (cmd_xbar_demux_src11_ready),                             //      src11.ready
		.src11_valid         (cmd_xbar_demux_src11_valid),                             //           .valid
		.src11_data          (cmd_xbar_demux_src11_data),                              //           .data
		.src11_channel       (cmd_xbar_demux_src11_channel),                           //           .channel
		.src11_startofpacket (cmd_xbar_demux_src11_startofpacket),                     //           .startofpacket
		.src11_endofpacket   (cmd_xbar_demux_src11_endofpacket),                       //           .endofpacket
		.src12_ready         (cmd_xbar_demux_src12_ready),                             //      src12.ready
		.src12_valid         (cmd_xbar_demux_src12_valid),                             //           .valid
		.src12_data          (cmd_xbar_demux_src12_data),                              //           .data
		.src12_channel       (cmd_xbar_demux_src12_channel),                           //           .channel
		.src12_startofpacket (cmd_xbar_demux_src12_startofpacket),                     //           .startofpacket
		.src12_endofpacket   (cmd_xbar_demux_src12_endofpacket),                       //           .endofpacket
		.src13_ready         (cmd_xbar_demux_src13_ready),                             //      src13.ready
		.src13_valid         (cmd_xbar_demux_src13_valid),                             //           .valid
		.src13_data          (cmd_xbar_demux_src13_data),                              //           .data
		.src13_channel       (cmd_xbar_demux_src13_channel),                           //           .channel
		.src13_startofpacket (cmd_xbar_demux_src13_startofpacket),                     //           .startofpacket
		.src13_endofpacket   (cmd_xbar_demux_src13_endofpacket),                       //           .endofpacket
		.src14_ready         (cmd_xbar_demux_src14_ready),                             //      src14.ready
		.src14_valid         (cmd_xbar_demux_src14_valid),                             //           .valid
		.src14_data          (cmd_xbar_demux_src14_data),                              //           .data
		.src14_channel       (cmd_xbar_demux_src14_channel),                           //           .channel
		.src14_startofpacket (cmd_xbar_demux_src14_startofpacket),                     //           .startofpacket
		.src14_endofpacket   (cmd_xbar_demux_src14_endofpacket),                       //           .endofpacket
		.src15_ready         (cmd_xbar_demux_src15_ready),                             //      src15.ready
		.src15_valid         (cmd_xbar_demux_src15_valid),                             //           .valid
		.src15_data          (cmd_xbar_demux_src15_data),                              //           .data
		.src15_channel       (cmd_xbar_demux_src15_channel),                           //           .channel
		.src15_startofpacket (cmd_xbar_demux_src15_startofpacket),                     //           .startofpacket
		.src15_endofpacket   (cmd_xbar_demux_src15_endofpacket),                       //           .endofpacket
		.src16_ready         (cmd_xbar_demux_src16_ready),                             //      src16.ready
		.src16_valid         (cmd_xbar_demux_src16_valid),                             //           .valid
		.src16_data          (cmd_xbar_demux_src16_data),                              //           .data
		.src16_channel       (cmd_xbar_demux_src16_channel),                           //           .channel
		.src16_startofpacket (cmd_xbar_demux_src16_startofpacket),                     //           .startofpacket
		.src16_endofpacket   (cmd_xbar_demux_src16_endofpacket),                       //           .endofpacket
		.src17_ready         (cmd_xbar_demux_src17_ready),                             //      src17.ready
		.src17_valid         (cmd_xbar_demux_src17_valid),                             //           .valid
		.src17_data          (cmd_xbar_demux_src17_data),                              //           .data
		.src17_channel       (cmd_xbar_demux_src17_channel),                           //           .channel
		.src17_startofpacket (cmd_xbar_demux_src17_startofpacket),                     //           .startofpacket
		.src17_endofpacket   (cmd_xbar_demux_src17_endofpacket),                       //           .endofpacket
		.src18_ready         (cmd_xbar_demux_src18_ready),                             //      src18.ready
		.src18_valid         (cmd_xbar_demux_src18_valid),                             //           .valid
		.src18_data          (cmd_xbar_demux_src18_data),                              //           .data
		.src18_channel       (cmd_xbar_demux_src18_channel),                           //           .channel
		.src18_startofpacket (cmd_xbar_demux_src18_startofpacket),                     //           .startofpacket
		.src18_endofpacket   (cmd_xbar_demux_src18_endofpacket),                       //           .endofpacket
		.src19_ready         (cmd_xbar_demux_src19_ready),                             //      src19.ready
		.src19_valid         (cmd_xbar_demux_src19_valid),                             //           .valid
		.src19_data          (cmd_xbar_demux_src19_data),                              //           .data
		.src19_channel       (cmd_xbar_demux_src19_channel),                           //           .channel
		.src19_startofpacket (cmd_xbar_demux_src19_startofpacket),                     //           .startofpacket
		.src19_endofpacket   (cmd_xbar_demux_src19_endofpacket),                       //           .endofpacket
		.src20_ready         (cmd_xbar_demux_src20_ready),                             //      src20.ready
		.src20_valid         (cmd_xbar_demux_src20_valid),                             //           .valid
		.src20_data          (cmd_xbar_demux_src20_data),                              //           .data
		.src20_channel       (cmd_xbar_demux_src20_channel),                           //           .channel
		.src20_startofpacket (cmd_xbar_demux_src20_startofpacket),                     //           .startofpacket
		.src20_endofpacket   (cmd_xbar_demux_src20_endofpacket),                       //           .endofpacket
		.src21_ready         (cmd_xbar_demux_src21_ready),                             //      src21.ready
		.src21_valid         (cmd_xbar_demux_src21_valid),                             //           .valid
		.src21_data          (cmd_xbar_demux_src21_data),                              //           .data
		.src21_channel       (cmd_xbar_demux_src21_channel),                           //           .channel
		.src21_startofpacket (cmd_xbar_demux_src21_startofpacket),                     //           .startofpacket
		.src21_endofpacket   (cmd_xbar_demux_src21_endofpacket),                       //           .endofpacket
		.src22_ready         (cmd_xbar_demux_src22_ready),                             //      src22.ready
		.src22_valid         (cmd_xbar_demux_src22_valid),                             //           .valid
		.src22_data          (cmd_xbar_demux_src22_data),                              //           .data
		.src22_channel       (cmd_xbar_demux_src22_channel),                           //           .channel
		.src22_startofpacket (cmd_xbar_demux_src22_startofpacket),                     //           .startofpacket
		.src22_endofpacket   (cmd_xbar_demux_src22_endofpacket),                       //           .endofpacket
		.src23_ready         (cmd_xbar_demux_src23_ready),                             //      src23.ready
		.src23_valid         (cmd_xbar_demux_src23_valid),                             //           .valid
		.src23_data          (cmd_xbar_demux_src23_data),                              //           .data
		.src23_channel       (cmd_xbar_demux_src23_channel),                           //           .channel
		.src23_startofpacket (cmd_xbar_demux_src23_startofpacket),                     //           .startofpacket
		.src23_endofpacket   (cmd_xbar_demux_src23_endofpacket),                       //           .endofpacket
		.src24_ready         (cmd_xbar_demux_src24_ready),                             //      src24.ready
		.src24_valid         (cmd_xbar_demux_src24_valid),                             //           .valid
		.src24_data          (cmd_xbar_demux_src24_data),                              //           .data
		.src24_channel       (cmd_xbar_demux_src24_channel),                           //           .channel
		.src24_startofpacket (cmd_xbar_demux_src24_startofpacket),                     //           .startofpacket
		.src24_endofpacket   (cmd_xbar_demux_src24_endofpacket),                       //           .endofpacket
		.src25_ready         (cmd_xbar_demux_src25_ready),                             //      src25.ready
		.src25_valid         (cmd_xbar_demux_src25_valid),                             //           .valid
		.src25_data          (cmd_xbar_demux_src25_data),                              //           .data
		.src25_channel       (cmd_xbar_demux_src25_channel),                           //           .channel
		.src25_startofpacket (cmd_xbar_demux_src25_startofpacket),                     //           .startofpacket
		.src25_endofpacket   (cmd_xbar_demux_src25_endofpacket),                       //           .endofpacket
		.src26_ready         (cmd_xbar_demux_src26_ready),                             //      src26.ready
		.src26_valid         (cmd_xbar_demux_src26_valid),                             //           .valid
		.src26_data          (cmd_xbar_demux_src26_data),                              //           .data
		.src26_channel       (cmd_xbar_demux_src26_channel),                           //           .channel
		.src26_startofpacket (cmd_xbar_demux_src26_startofpacket),                     //           .startofpacket
		.src26_endofpacket   (cmd_xbar_demux_src26_endofpacket),                       //           .endofpacket
		.src27_ready         (cmd_xbar_demux_src27_ready),                             //      src27.ready
		.src27_valid         (cmd_xbar_demux_src27_valid),                             //           .valid
		.src27_data          (cmd_xbar_demux_src27_data),                              //           .data
		.src27_channel       (cmd_xbar_demux_src27_channel),                           //           .channel
		.src27_startofpacket (cmd_xbar_demux_src27_startofpacket),                     //           .startofpacket
		.src27_endofpacket   (cmd_xbar_demux_src27_endofpacket),                       //           .endofpacket
		.src28_ready         (cmd_xbar_demux_src28_ready),                             //      src28.ready
		.src28_valid         (cmd_xbar_demux_src28_valid),                             //           .valid
		.src28_data          (cmd_xbar_demux_src28_data),                              //           .data
		.src28_channel       (cmd_xbar_demux_src28_channel),                           //           .channel
		.src28_startofpacket (cmd_xbar_demux_src28_startofpacket),                     //           .startofpacket
		.src28_endofpacket   (cmd_xbar_demux_src28_endofpacket),                       //           .endofpacket
		.src29_ready         (cmd_xbar_demux_src29_ready),                             //      src29.ready
		.src29_valid         (cmd_xbar_demux_src29_valid),                             //           .valid
		.src29_data          (cmd_xbar_demux_src29_data),                              //           .data
		.src29_channel       (cmd_xbar_demux_src29_channel),                           //           .channel
		.src29_startofpacket (cmd_xbar_demux_src29_startofpacket),                     //           .startofpacket
		.src29_endofpacket   (cmd_xbar_demux_src29_endofpacket),                       //           .endofpacket
		.src30_ready         (cmd_xbar_demux_src30_ready),                             //      src30.ready
		.src30_valid         (cmd_xbar_demux_src30_valid),                             //           .valid
		.src30_data          (cmd_xbar_demux_src30_data),                              //           .data
		.src30_channel       (cmd_xbar_demux_src30_channel),                           //           .channel
		.src30_startofpacket (cmd_xbar_demux_src30_startofpacket),                     //           .startofpacket
		.src30_endofpacket   (cmd_xbar_demux_src30_endofpacket),                       //           .endofpacket
		.src31_ready         (cmd_xbar_demux_src31_ready),                             //      src31.ready
		.src31_valid         (cmd_xbar_demux_src31_valid),                             //           .valid
		.src31_data          (cmd_xbar_demux_src31_data),                              //           .data
		.src31_channel       (cmd_xbar_demux_src31_channel),                           //           .channel
		.src31_startofpacket (cmd_xbar_demux_src31_startofpacket),                     //           .startofpacket
		.src31_endofpacket   (cmd_xbar_demux_src31_endofpacket),                       //           .endofpacket
		.src32_ready         (cmd_xbar_demux_src32_ready),                             //      src32.ready
		.src32_valid         (cmd_xbar_demux_src32_valid),                             //           .valid
		.src32_data          (cmd_xbar_demux_src32_data),                              //           .data
		.src32_channel       (cmd_xbar_demux_src32_channel),                           //           .channel
		.src32_startofpacket (cmd_xbar_demux_src32_startofpacket),                     //           .startofpacket
		.src32_endofpacket   (cmd_xbar_demux_src32_endofpacket),                       //           .endofpacket
		.src33_ready         (cmd_xbar_demux_src33_ready),                             //      src33.ready
		.src33_valid         (cmd_xbar_demux_src33_valid),                             //           .valid
		.src33_data          (cmd_xbar_demux_src33_data),                              //           .data
		.src33_channel       (cmd_xbar_demux_src33_channel),                           //           .channel
		.src33_startofpacket (cmd_xbar_demux_src33_startofpacket),                     //           .startofpacket
		.src33_endofpacket   (cmd_xbar_demux_src33_endofpacket),                       //           .endofpacket
		.src34_ready         (cmd_xbar_demux_src34_ready),                             //      src34.ready
		.src34_valid         (cmd_xbar_demux_src34_valid),                             //           .valid
		.src34_data          (cmd_xbar_demux_src34_data),                              //           .data
		.src34_channel       (cmd_xbar_demux_src34_channel),                           //           .channel
		.src34_startofpacket (cmd_xbar_demux_src34_startofpacket),                     //           .startofpacket
		.src34_endofpacket   (cmd_xbar_demux_src34_endofpacket),                       //           .endofpacket
		.src35_ready         (cmd_xbar_demux_src35_ready),                             //      src35.ready
		.src35_valid         (cmd_xbar_demux_src35_valid),                             //           .valid
		.src35_data          (cmd_xbar_demux_src35_data),                              //           .data
		.src35_channel       (cmd_xbar_demux_src35_channel),                           //           .channel
		.src35_startofpacket (cmd_xbar_demux_src35_startofpacket),                     //           .startofpacket
		.src35_endofpacket   (cmd_xbar_demux_src35_endofpacket),                       //           .endofpacket
		.src36_ready         (cmd_xbar_demux_src36_ready),                             //      src36.ready
		.src36_valid         (cmd_xbar_demux_src36_valid),                             //           .valid
		.src36_data          (cmd_xbar_demux_src36_data),                              //           .data
		.src36_channel       (cmd_xbar_demux_src36_channel),                           //           .channel
		.src36_startofpacket (cmd_xbar_demux_src36_startofpacket),                     //           .startofpacket
		.src36_endofpacket   (cmd_xbar_demux_src36_endofpacket)                        //           .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_src_ready),                                 //       src.ready
		.src_valid           (cmd_xbar_mux_src_valid),                                 //          .valid
		.src_data            (cmd_xbar_mux_src_data),                                  //          .data
		.src_channel         (cmd_xbar_mux_src_channel),                               //          .channel
		.src_startofpacket   (cmd_xbar_mux_src_startofpacket),                         //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_src_endofpacket),                           //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src0_ready),                              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src0_valid),                              //          .valid
		.sink0_channel       (cmd_xbar_demux_src0_channel),                            //          .channel
		.sink0_data          (cmd_xbar_demux_src0_data),                               //          .data
		.sink0_startofpacket (cmd_xbar_demux_src0_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src0_endofpacket)                         //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_001 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_001_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_001_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_001_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_001_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_001_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_001_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src1_ready),                              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src1_valid),                              //          .valid
		.sink0_channel       (cmd_xbar_demux_src1_channel),                            //          .channel
		.sink0_data          (cmd_xbar_demux_src1_data),                               //          .data
		.sink0_startofpacket (cmd_xbar_demux_src1_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src1_endofpacket)                         //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_002 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_002_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_002_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_002_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_002_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_002_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_002_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src2_ready),                              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src2_valid),                              //          .valid
		.sink0_channel       (cmd_xbar_demux_src2_channel),                            //          .channel
		.sink0_data          (cmd_xbar_demux_src2_data),                               //          .data
		.sink0_startofpacket (cmd_xbar_demux_src2_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src2_endofpacket)                         //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_003 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_003_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_003_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_003_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_003_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_003_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_003_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src3_ready),                              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src3_valid),                              //          .valid
		.sink0_channel       (cmd_xbar_demux_src3_channel),                            //          .channel
		.sink0_data          (cmd_xbar_demux_src3_data),                               //          .data
		.sink0_startofpacket (cmd_xbar_demux_src3_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src3_endofpacket)                         //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_004 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_004_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_004_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_004_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_004_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_004_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_004_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src4_ready),                              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src4_valid),                              //          .valid
		.sink0_channel       (cmd_xbar_demux_src4_channel),                            //          .channel
		.sink0_data          (cmd_xbar_demux_src4_data),                               //          .data
		.sink0_startofpacket (cmd_xbar_demux_src4_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src4_endofpacket)                         //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_005 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_005_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_005_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_005_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_005_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_005_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_005_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src5_ready),                              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src5_valid),                              //          .valid
		.sink0_channel       (cmd_xbar_demux_src5_channel),                            //          .channel
		.sink0_data          (cmd_xbar_demux_src5_data),                               //          .data
		.sink0_startofpacket (cmd_xbar_demux_src5_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src5_endofpacket)                         //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_006 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_006_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_006_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_006_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_006_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_006_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_006_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src6_ready),                              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src6_valid),                              //          .valid
		.sink0_channel       (cmd_xbar_demux_src6_channel),                            //          .channel
		.sink0_data          (cmd_xbar_demux_src6_data),                               //          .data
		.sink0_startofpacket (cmd_xbar_demux_src6_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src6_endofpacket)                         //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_007 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_007_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_007_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_007_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_007_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_007_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_007_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src7_ready),                              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src7_valid),                              //          .valid
		.sink0_channel       (cmd_xbar_demux_src7_channel),                            //          .channel
		.sink0_data          (cmd_xbar_demux_src7_data),                               //          .data
		.sink0_startofpacket (cmd_xbar_demux_src7_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src7_endofpacket)                         //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_008 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_008_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_008_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_008_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_008_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_008_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_008_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src8_ready),                              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src8_valid),                              //          .valid
		.sink0_channel       (cmd_xbar_demux_src8_channel),                            //          .channel
		.sink0_data          (cmd_xbar_demux_src8_data),                               //          .data
		.sink0_startofpacket (cmd_xbar_demux_src8_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src8_endofpacket)                         //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_009 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_009_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_009_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_009_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_009_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_009_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_009_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src9_ready),                              //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src9_valid),                              //          .valid
		.sink0_channel       (cmd_xbar_demux_src9_channel),                            //          .channel
		.sink0_data          (cmd_xbar_demux_src9_data),                               //          .data
		.sink0_startofpacket (cmd_xbar_demux_src9_startofpacket),                      //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src9_endofpacket)                         //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_010 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_010_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_010_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_010_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_010_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_010_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_010_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src10_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src10_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src10_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src10_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src10_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src10_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_011 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_011_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_011_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_011_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_011_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_011_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_011_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src11_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src11_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src11_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src11_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src11_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src11_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_012 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_012_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_012_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_012_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_012_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_012_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_012_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src12_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src12_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src12_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src12_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src12_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src12_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_013 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_013_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_013_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_013_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_013_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_013_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_013_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src13_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src13_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src13_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src13_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src13_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src13_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_014 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_014_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_014_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_014_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_014_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_014_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_014_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src14_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src14_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src14_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src14_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src14_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src14_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_015 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_015_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_015_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_015_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_015_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_015_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_015_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src15_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src15_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src15_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src15_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src15_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src15_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_016 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_016_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_016_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_016_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_016_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_016_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_016_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src16_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src16_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src16_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src16_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src16_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src16_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_017 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_017_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_017_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_017_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_017_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_017_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_017_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src17_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src17_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src17_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src17_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src17_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src17_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_018 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_018_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_018_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_018_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_018_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_018_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_018_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src18_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src18_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src18_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src18_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src18_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src18_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_019 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_019_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_019_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_019_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_019_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_019_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_019_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src19_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src19_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src19_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src19_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src19_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src19_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_020 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_020_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_020_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_020_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_020_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_020_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_020_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src20_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src20_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src20_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src20_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src20_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src20_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_021 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_021_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_021_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_021_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_021_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_021_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_021_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src21_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src21_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src21_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src21_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src21_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src21_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_022 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_022_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_022_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_022_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_022_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_022_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_022_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src22_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src22_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src22_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src22_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src22_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src22_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_023 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_023_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_023_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_023_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_023_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_023_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_023_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src23_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src23_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src23_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src23_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src23_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src23_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_024 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_024_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_024_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_024_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_024_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_024_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_024_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src24_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src24_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src24_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src24_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src24_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src24_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_025 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_025_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_025_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_025_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_025_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_025_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_025_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src25_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src25_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src25_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src25_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src25_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src25_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_026 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_026_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_026_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_026_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_026_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_026_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_026_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src26_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src26_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src26_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src26_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src26_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src26_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_027 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_027_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_027_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_027_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_027_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_027_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_027_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src27_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src27_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src27_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src27_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src27_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src27_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_028 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_028_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_028_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_028_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_028_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_028_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_028_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src28_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src28_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src28_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src28_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src28_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src28_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_029 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_029_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_029_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_029_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_029_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_029_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_029_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src29_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src29_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src29_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src29_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src29_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src29_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_030 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_030_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_030_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_030_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_030_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_030_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_030_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src30_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src30_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src30_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src30_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src30_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src30_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_031 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_031_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_031_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_031_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_031_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_031_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_031_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src31_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src31_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src31_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src31_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src31_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src31_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_032 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_032_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_032_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_032_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_032_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_032_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_032_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src32_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src32_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src32_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src32_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src32_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src32_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_033 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_033_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_033_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_033_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_033_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_033_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_033_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src33_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src33_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src33_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src33_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src33_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src33_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_034 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_034_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_034_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_034_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_034_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_034_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_034_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src34_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src34_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src34_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src34_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src34_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src34_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux cmd_xbar_mux_035 (
		.clk                 (pll_c2_clk),                                             //       clk.clk
		.reset               (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_035_src_ready),                             //       src.ready
		.src_valid           (cmd_xbar_mux_035_src_valid),                             //          .valid
		.src_data            (cmd_xbar_mux_035_src_data),                              //          .data
		.src_channel         (cmd_xbar_mux_035_src_channel),                           //          .channel
		.src_startofpacket   (cmd_xbar_mux_035_src_startofpacket),                     //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_035_src_endofpacket),                       //          .endofpacket
		.sink0_ready         (cmd_xbar_demux_src35_ready),                             //     sink0.ready
		.sink0_valid         (cmd_xbar_demux_src35_valid),                             //          .valid
		.sink0_channel       (cmd_xbar_demux_src35_channel),                           //          .channel
		.sink0_data          (cmd_xbar_demux_src35_data),                              //          .data
		.sink0_startofpacket (cmd_xbar_demux_src35_startofpacket),                     //          .startofpacket
		.sink0_endofpacket   (cmd_xbar_demux_src35_endofpacket)                        //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_cmd_xbar_mux_036 cmd_xbar_mux_036 (
		.clk                 (clk_50_clk_clk),                                        //       clk.clk
		.reset               (pll_inclk_interface_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready           (cmd_xbar_mux_036_src_ready),                            //       src.ready
		.src_valid           (cmd_xbar_mux_036_src_valid),                            //          .valid
		.src_data            (cmd_xbar_mux_036_src_data),                             //          .data
		.src_channel         (cmd_xbar_mux_036_src_channel),                          //          .channel
		.src_startofpacket   (cmd_xbar_mux_036_src_startofpacket),                    //          .startofpacket
		.src_endofpacket     (cmd_xbar_mux_036_src_endofpacket),                      //          .endofpacket
		.sink0_ready         (crosser_out_ready),                                     //     sink0.ready
		.sink0_valid         (crosser_out_valid),                                     //          .valid
		.sink0_channel       (crosser_out_channel),                                   //          .channel
		.sink0_data          (crosser_out_data),                                      //          .data
		.sink0_startofpacket (crosser_out_startofpacket),                             //          .startofpacket
		.sink0_endofpacket   (crosser_out_endofpacket)                                //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_src_ready),                                    //      sink.ready
		.sink_channel       (id_router_src_channel),                                  //          .channel
		.sink_data          (id_router_src_data),                                     //          .data
		.sink_startofpacket (id_router_src_startofpacket),                            //          .startofpacket
		.sink_endofpacket   (id_router_src_endofpacket),                              //          .endofpacket
		.sink_valid         (id_router_src_valid),                                    //          .valid
		.src0_ready         (rsp_xbar_demux_src0_ready),                              //      src0.ready
		.src0_valid         (rsp_xbar_demux_src0_valid),                              //          .valid
		.src0_data          (rsp_xbar_demux_src0_data),                               //          .data
		.src0_channel       (rsp_xbar_demux_src0_channel),                            //          .channel
		.src0_startofpacket (rsp_xbar_demux_src0_startofpacket),                      //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_src0_endofpacket)                         //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_001 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_001_src_ready),                                //      sink.ready
		.sink_channel       (id_router_001_src_channel),                              //          .channel
		.sink_data          (id_router_001_src_data),                                 //          .data
		.sink_startofpacket (id_router_001_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_001_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_001_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_001_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_001_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_001_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_001_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_001_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_001_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_002 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_002_src_ready),                                //      sink.ready
		.sink_channel       (id_router_002_src_channel),                              //          .channel
		.sink_data          (id_router_002_src_data),                                 //          .data
		.sink_startofpacket (id_router_002_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_002_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_002_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_002_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_002_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_002_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_002_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_002_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_002_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_003 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_003_src_ready),                                //      sink.ready
		.sink_channel       (id_router_003_src_channel),                              //          .channel
		.sink_data          (id_router_003_src_data),                                 //          .data
		.sink_startofpacket (id_router_003_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_003_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_003_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_003_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_003_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_003_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_003_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_003_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_003_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_004 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_004_src_ready),                                //      sink.ready
		.sink_channel       (id_router_004_src_channel),                              //          .channel
		.sink_data          (id_router_004_src_data),                                 //          .data
		.sink_startofpacket (id_router_004_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_004_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_004_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_004_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_004_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_004_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_004_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_004_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_004_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_005 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_005_src_ready),                                //      sink.ready
		.sink_channel       (id_router_005_src_channel),                              //          .channel
		.sink_data          (id_router_005_src_data),                                 //          .data
		.sink_startofpacket (id_router_005_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_005_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_005_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_005_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_005_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_005_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_005_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_005_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_005_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_006 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_006_src_ready),                                //      sink.ready
		.sink_channel       (id_router_006_src_channel),                              //          .channel
		.sink_data          (id_router_006_src_data),                                 //          .data
		.sink_startofpacket (id_router_006_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_006_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_006_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_006_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_006_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_006_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_006_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_006_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_006_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_007 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_007_src_ready),                                //      sink.ready
		.sink_channel       (id_router_007_src_channel),                              //          .channel
		.sink_data          (id_router_007_src_data),                                 //          .data
		.sink_startofpacket (id_router_007_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_007_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_007_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_007_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_007_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_007_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_007_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_007_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_007_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_008 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_008_src_ready),                                //      sink.ready
		.sink_channel       (id_router_008_src_channel),                              //          .channel
		.sink_data          (id_router_008_src_data),                                 //          .data
		.sink_startofpacket (id_router_008_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_008_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_008_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_008_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_008_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_008_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_008_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_008_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_008_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_009 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_009_src_ready),                                //      sink.ready
		.sink_channel       (id_router_009_src_channel),                              //          .channel
		.sink_data          (id_router_009_src_data),                                 //          .data
		.sink_startofpacket (id_router_009_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_009_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_009_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_009_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_009_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_009_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_009_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_009_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_009_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_010 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_010_src_ready),                                //      sink.ready
		.sink_channel       (id_router_010_src_channel),                              //          .channel
		.sink_data          (id_router_010_src_data),                                 //          .data
		.sink_startofpacket (id_router_010_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_010_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_010_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_010_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_010_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_010_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_010_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_010_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_010_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_011 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_011_src_ready),                                //      sink.ready
		.sink_channel       (id_router_011_src_channel),                              //          .channel
		.sink_data          (id_router_011_src_data),                                 //          .data
		.sink_startofpacket (id_router_011_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_011_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_011_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_011_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_011_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_011_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_011_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_011_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_011_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_012 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_012_src_ready),                                //      sink.ready
		.sink_channel       (id_router_012_src_channel),                              //          .channel
		.sink_data          (id_router_012_src_data),                                 //          .data
		.sink_startofpacket (id_router_012_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_012_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_012_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_012_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_012_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_012_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_012_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_012_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_012_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_013 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_013_src_ready),                                //      sink.ready
		.sink_channel       (id_router_013_src_channel),                              //          .channel
		.sink_data          (id_router_013_src_data),                                 //          .data
		.sink_startofpacket (id_router_013_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_013_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_013_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_013_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_013_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_013_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_013_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_013_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_013_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_014 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_014_src_ready),                                //      sink.ready
		.sink_channel       (id_router_014_src_channel),                              //          .channel
		.sink_data          (id_router_014_src_data),                                 //          .data
		.sink_startofpacket (id_router_014_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_014_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_014_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_014_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_014_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_014_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_014_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_014_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_014_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_015 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_015_src_ready),                                //      sink.ready
		.sink_channel       (id_router_015_src_channel),                              //          .channel
		.sink_data          (id_router_015_src_data),                                 //          .data
		.sink_startofpacket (id_router_015_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_015_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_015_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_015_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_015_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_015_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_015_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_015_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_015_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_016 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_016_src_ready),                                //      sink.ready
		.sink_channel       (id_router_016_src_channel),                              //          .channel
		.sink_data          (id_router_016_src_data),                                 //          .data
		.sink_startofpacket (id_router_016_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_016_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_016_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_016_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_016_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_016_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_016_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_016_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_016_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_017 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_017_src_ready),                                //      sink.ready
		.sink_channel       (id_router_017_src_channel),                              //          .channel
		.sink_data          (id_router_017_src_data),                                 //          .data
		.sink_startofpacket (id_router_017_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_017_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_017_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_017_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_017_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_017_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_017_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_017_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_017_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_018 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_018_src_ready),                                //      sink.ready
		.sink_channel       (id_router_018_src_channel),                              //          .channel
		.sink_data          (id_router_018_src_data),                                 //          .data
		.sink_startofpacket (id_router_018_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_018_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_018_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_018_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_018_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_018_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_018_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_018_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_018_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_019 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_019_src_ready),                                //      sink.ready
		.sink_channel       (id_router_019_src_channel),                              //          .channel
		.sink_data          (id_router_019_src_data),                                 //          .data
		.sink_startofpacket (id_router_019_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_019_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_019_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_019_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_019_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_019_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_019_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_019_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_019_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_020 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_020_src_ready),                                //      sink.ready
		.sink_channel       (id_router_020_src_channel),                              //          .channel
		.sink_data          (id_router_020_src_data),                                 //          .data
		.sink_startofpacket (id_router_020_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_020_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_020_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_020_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_020_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_020_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_020_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_020_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_020_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_021 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_021_src_ready),                                //      sink.ready
		.sink_channel       (id_router_021_src_channel),                              //          .channel
		.sink_data          (id_router_021_src_data),                                 //          .data
		.sink_startofpacket (id_router_021_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_021_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_021_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_021_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_021_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_021_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_021_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_021_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_021_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_022 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_022_src_ready),                                //      sink.ready
		.sink_channel       (id_router_022_src_channel),                              //          .channel
		.sink_data          (id_router_022_src_data),                                 //          .data
		.sink_startofpacket (id_router_022_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_022_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_022_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_022_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_022_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_022_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_022_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_022_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_022_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_023 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_023_src_ready),                                //      sink.ready
		.sink_channel       (id_router_023_src_channel),                              //          .channel
		.sink_data          (id_router_023_src_data),                                 //          .data
		.sink_startofpacket (id_router_023_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_023_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_023_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_023_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_023_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_023_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_023_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_023_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_023_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_024 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_024_src_ready),                                //      sink.ready
		.sink_channel       (id_router_024_src_channel),                              //          .channel
		.sink_data          (id_router_024_src_data),                                 //          .data
		.sink_startofpacket (id_router_024_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_024_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_024_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_024_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_024_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_024_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_024_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_024_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_024_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_025 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_025_src_ready),                                //      sink.ready
		.sink_channel       (id_router_025_src_channel),                              //          .channel
		.sink_data          (id_router_025_src_data),                                 //          .data
		.sink_startofpacket (id_router_025_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_025_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_025_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_025_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_025_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_025_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_025_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_025_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_025_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_026 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_026_src_ready),                                //      sink.ready
		.sink_channel       (id_router_026_src_channel),                              //          .channel
		.sink_data          (id_router_026_src_data),                                 //          .data
		.sink_startofpacket (id_router_026_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_026_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_026_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_026_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_026_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_026_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_026_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_026_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_026_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_027 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_027_src_ready),                                //      sink.ready
		.sink_channel       (id_router_027_src_channel),                              //          .channel
		.sink_data          (id_router_027_src_data),                                 //          .data
		.sink_startofpacket (id_router_027_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_027_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_027_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_027_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_027_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_027_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_027_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_027_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_027_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_028 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_028_src_ready),                                //      sink.ready
		.sink_channel       (id_router_028_src_channel),                              //          .channel
		.sink_data          (id_router_028_src_data),                                 //          .data
		.sink_startofpacket (id_router_028_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_028_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_028_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_028_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_028_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_028_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_028_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_028_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_028_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_029 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_029_src_ready),                                //      sink.ready
		.sink_channel       (id_router_029_src_channel),                              //          .channel
		.sink_data          (id_router_029_src_data),                                 //          .data
		.sink_startofpacket (id_router_029_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_029_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_029_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_029_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_029_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_029_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_029_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_029_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_029_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_030 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_030_src_ready),                                //      sink.ready
		.sink_channel       (id_router_030_src_channel),                              //          .channel
		.sink_data          (id_router_030_src_data),                                 //          .data
		.sink_startofpacket (id_router_030_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_030_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_030_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_030_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_030_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_030_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_030_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_030_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_030_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_031 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_031_src_ready),                                //      sink.ready
		.sink_channel       (id_router_031_src_channel),                              //          .channel
		.sink_data          (id_router_031_src_data),                                 //          .data
		.sink_startofpacket (id_router_031_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_031_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_031_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_031_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_031_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_031_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_031_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_031_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_031_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_032 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_032_src_ready),                                //      sink.ready
		.sink_channel       (id_router_032_src_channel),                              //          .channel
		.sink_data          (id_router_032_src_data),                                 //          .data
		.sink_startofpacket (id_router_032_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_032_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_032_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_032_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_032_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_032_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_032_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_032_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_032_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_033 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_033_src_ready),                                //      sink.ready
		.sink_channel       (id_router_033_src_channel),                              //          .channel
		.sink_data          (id_router_033_src_data),                                 //          .data
		.sink_startofpacket (id_router_033_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_033_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_033_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_033_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_033_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_033_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_033_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_033_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_033_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_034 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_034_src_ready),                                //      sink.ready
		.sink_channel       (id_router_034_src_channel),                              //          .channel
		.sink_data          (id_router_034_src_data),                                 //          .data
		.sink_startofpacket (id_router_034_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_034_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_034_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_034_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_034_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_034_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_034_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_034_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_034_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux rsp_xbar_demux_035 (
		.clk                (pll_c2_clk),                                             //       clk.clk
		.reset              (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_035_src_ready),                                //      sink.ready
		.sink_channel       (id_router_035_src_channel),                              //          .channel
		.sink_data          (id_router_035_src_data),                                 //          .data
		.sink_startofpacket (id_router_035_src_startofpacket),                        //          .startofpacket
		.sink_endofpacket   (id_router_035_src_endofpacket),                          //          .endofpacket
		.sink_valid         (id_router_035_src_valid),                                //          .valid
		.src0_ready         (rsp_xbar_demux_035_src0_ready),                          //      src0.ready
		.src0_valid         (rsp_xbar_demux_035_src0_valid),                          //          .valid
		.src0_data          (rsp_xbar_demux_035_src0_data),                           //          .data
		.src0_channel       (rsp_xbar_demux_035_src0_channel),                        //          .channel
		.src0_startofpacket (rsp_xbar_demux_035_src0_startofpacket),                  //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_035_src0_endofpacket)                     //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_demux_036 rsp_xbar_demux_036 (
		.clk                (clk_50_clk_clk),                                        //       clk.clk
		.reset              (pll_inclk_interface_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.sink_ready         (id_router_036_src_ready),                               //      sink.ready
		.sink_channel       (id_router_036_src_channel),                             //          .channel
		.sink_data          (id_router_036_src_data),                                //          .data
		.sink_startofpacket (id_router_036_src_startofpacket),                       //          .startofpacket
		.sink_endofpacket   (id_router_036_src_endofpacket),                         //          .endofpacket
		.sink_valid         (id_router_036_src_valid),                               //          .valid
		.src0_ready         (rsp_xbar_demux_036_src0_ready),                         //      src0.ready
		.src0_valid         (rsp_xbar_demux_036_src0_valid),                         //          .valid
		.src0_data          (rsp_xbar_demux_036_src0_data),                          //          .data
		.src0_channel       (rsp_xbar_demux_036_src0_channel),                       //          .channel
		.src0_startofpacket (rsp_xbar_demux_036_src0_startofpacket),                 //          .startofpacket
		.src0_endofpacket   (rsp_xbar_demux_036_src0_endofpacket)                    //          .endofpacket
	);

	DE2_115_SOPC_mm_interconnect_1_rsp_xbar_mux rsp_xbar_mux (
		.clk                  (pll_c2_clk),                                             //       clk.clk
		.reset                (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // clk_reset.reset
		.src_ready            (rsp_xbar_mux_src_ready),                                 //       src.ready
		.src_valid            (rsp_xbar_mux_src_valid),                                 //          .valid
		.src_data             (rsp_xbar_mux_src_data),                                  //          .data
		.src_channel          (rsp_xbar_mux_src_channel),                               //          .channel
		.src_startofpacket    (rsp_xbar_mux_src_startofpacket),                         //          .startofpacket
		.src_endofpacket      (rsp_xbar_mux_src_endofpacket),                           //          .endofpacket
		.sink0_ready          (rsp_xbar_demux_src0_ready),                              //     sink0.ready
		.sink0_valid          (rsp_xbar_demux_src0_valid),                              //          .valid
		.sink0_channel        (rsp_xbar_demux_src0_channel),                            //          .channel
		.sink0_data           (rsp_xbar_demux_src0_data),                               //          .data
		.sink0_startofpacket  (rsp_xbar_demux_src0_startofpacket),                      //          .startofpacket
		.sink0_endofpacket    (rsp_xbar_demux_src0_endofpacket),                        //          .endofpacket
		.sink1_ready          (rsp_xbar_demux_001_src0_ready),                          //     sink1.ready
		.sink1_valid          (rsp_xbar_demux_001_src0_valid),                          //          .valid
		.sink1_channel        (rsp_xbar_demux_001_src0_channel),                        //          .channel
		.sink1_data           (rsp_xbar_demux_001_src0_data),                           //          .data
		.sink1_startofpacket  (rsp_xbar_demux_001_src0_startofpacket),                  //          .startofpacket
		.sink1_endofpacket    (rsp_xbar_demux_001_src0_endofpacket),                    //          .endofpacket
		.sink2_ready          (rsp_xbar_demux_002_src0_ready),                          //     sink2.ready
		.sink2_valid          (rsp_xbar_demux_002_src0_valid),                          //          .valid
		.sink2_channel        (rsp_xbar_demux_002_src0_channel),                        //          .channel
		.sink2_data           (rsp_xbar_demux_002_src0_data),                           //          .data
		.sink2_startofpacket  (rsp_xbar_demux_002_src0_startofpacket),                  //          .startofpacket
		.sink2_endofpacket    (rsp_xbar_demux_002_src0_endofpacket),                    //          .endofpacket
		.sink3_ready          (rsp_xbar_demux_003_src0_ready),                          //     sink3.ready
		.sink3_valid          (rsp_xbar_demux_003_src0_valid),                          //          .valid
		.sink3_channel        (rsp_xbar_demux_003_src0_channel),                        //          .channel
		.sink3_data           (rsp_xbar_demux_003_src0_data),                           //          .data
		.sink3_startofpacket  (rsp_xbar_demux_003_src0_startofpacket),                  //          .startofpacket
		.sink3_endofpacket    (rsp_xbar_demux_003_src0_endofpacket),                    //          .endofpacket
		.sink4_ready          (rsp_xbar_demux_004_src0_ready),                          //     sink4.ready
		.sink4_valid          (rsp_xbar_demux_004_src0_valid),                          //          .valid
		.sink4_channel        (rsp_xbar_demux_004_src0_channel),                        //          .channel
		.sink4_data           (rsp_xbar_demux_004_src0_data),                           //          .data
		.sink4_startofpacket  (rsp_xbar_demux_004_src0_startofpacket),                  //          .startofpacket
		.sink4_endofpacket    (rsp_xbar_demux_004_src0_endofpacket),                    //          .endofpacket
		.sink5_ready          (rsp_xbar_demux_005_src0_ready),                          //     sink5.ready
		.sink5_valid          (rsp_xbar_demux_005_src0_valid),                          //          .valid
		.sink5_channel        (rsp_xbar_demux_005_src0_channel),                        //          .channel
		.sink5_data           (rsp_xbar_demux_005_src0_data),                           //          .data
		.sink5_startofpacket  (rsp_xbar_demux_005_src0_startofpacket),                  //          .startofpacket
		.sink5_endofpacket    (rsp_xbar_demux_005_src0_endofpacket),                    //          .endofpacket
		.sink6_ready          (rsp_xbar_demux_006_src0_ready),                          //     sink6.ready
		.sink6_valid          (rsp_xbar_demux_006_src0_valid),                          //          .valid
		.sink6_channel        (rsp_xbar_demux_006_src0_channel),                        //          .channel
		.sink6_data           (rsp_xbar_demux_006_src0_data),                           //          .data
		.sink6_startofpacket  (rsp_xbar_demux_006_src0_startofpacket),                  //          .startofpacket
		.sink6_endofpacket    (rsp_xbar_demux_006_src0_endofpacket),                    //          .endofpacket
		.sink7_ready          (rsp_xbar_demux_007_src0_ready),                          //     sink7.ready
		.sink7_valid          (rsp_xbar_demux_007_src0_valid),                          //          .valid
		.sink7_channel        (rsp_xbar_demux_007_src0_channel),                        //          .channel
		.sink7_data           (rsp_xbar_demux_007_src0_data),                           //          .data
		.sink7_startofpacket  (rsp_xbar_demux_007_src0_startofpacket),                  //          .startofpacket
		.sink7_endofpacket    (rsp_xbar_demux_007_src0_endofpacket),                    //          .endofpacket
		.sink8_ready          (rsp_xbar_demux_008_src0_ready),                          //     sink8.ready
		.sink8_valid          (rsp_xbar_demux_008_src0_valid),                          //          .valid
		.sink8_channel        (rsp_xbar_demux_008_src0_channel),                        //          .channel
		.sink8_data           (rsp_xbar_demux_008_src0_data),                           //          .data
		.sink8_startofpacket  (rsp_xbar_demux_008_src0_startofpacket),                  //          .startofpacket
		.sink8_endofpacket    (rsp_xbar_demux_008_src0_endofpacket),                    //          .endofpacket
		.sink9_ready          (rsp_xbar_demux_009_src0_ready),                          //     sink9.ready
		.sink9_valid          (rsp_xbar_demux_009_src0_valid),                          //          .valid
		.sink9_channel        (rsp_xbar_demux_009_src0_channel),                        //          .channel
		.sink9_data           (rsp_xbar_demux_009_src0_data),                           //          .data
		.sink9_startofpacket  (rsp_xbar_demux_009_src0_startofpacket),                  //          .startofpacket
		.sink9_endofpacket    (rsp_xbar_demux_009_src0_endofpacket),                    //          .endofpacket
		.sink10_ready         (rsp_xbar_demux_010_src0_ready),                          //    sink10.ready
		.sink10_valid         (rsp_xbar_demux_010_src0_valid),                          //          .valid
		.sink10_channel       (rsp_xbar_demux_010_src0_channel),                        //          .channel
		.sink10_data          (rsp_xbar_demux_010_src0_data),                           //          .data
		.sink10_startofpacket (rsp_xbar_demux_010_src0_startofpacket),                  //          .startofpacket
		.sink10_endofpacket   (rsp_xbar_demux_010_src0_endofpacket),                    //          .endofpacket
		.sink11_ready         (rsp_xbar_demux_011_src0_ready),                          //    sink11.ready
		.sink11_valid         (rsp_xbar_demux_011_src0_valid),                          //          .valid
		.sink11_channel       (rsp_xbar_demux_011_src0_channel),                        //          .channel
		.sink11_data          (rsp_xbar_demux_011_src0_data),                           //          .data
		.sink11_startofpacket (rsp_xbar_demux_011_src0_startofpacket),                  //          .startofpacket
		.sink11_endofpacket   (rsp_xbar_demux_011_src0_endofpacket),                    //          .endofpacket
		.sink12_ready         (rsp_xbar_demux_012_src0_ready),                          //    sink12.ready
		.sink12_valid         (rsp_xbar_demux_012_src0_valid),                          //          .valid
		.sink12_channel       (rsp_xbar_demux_012_src0_channel),                        //          .channel
		.sink12_data          (rsp_xbar_demux_012_src0_data),                           //          .data
		.sink12_startofpacket (rsp_xbar_demux_012_src0_startofpacket),                  //          .startofpacket
		.sink12_endofpacket   (rsp_xbar_demux_012_src0_endofpacket),                    //          .endofpacket
		.sink13_ready         (rsp_xbar_demux_013_src0_ready),                          //    sink13.ready
		.sink13_valid         (rsp_xbar_demux_013_src0_valid),                          //          .valid
		.sink13_channel       (rsp_xbar_demux_013_src0_channel),                        //          .channel
		.sink13_data          (rsp_xbar_demux_013_src0_data),                           //          .data
		.sink13_startofpacket (rsp_xbar_demux_013_src0_startofpacket),                  //          .startofpacket
		.sink13_endofpacket   (rsp_xbar_demux_013_src0_endofpacket),                    //          .endofpacket
		.sink14_ready         (rsp_xbar_demux_014_src0_ready),                          //    sink14.ready
		.sink14_valid         (rsp_xbar_demux_014_src0_valid),                          //          .valid
		.sink14_channel       (rsp_xbar_demux_014_src0_channel),                        //          .channel
		.sink14_data          (rsp_xbar_demux_014_src0_data),                           //          .data
		.sink14_startofpacket (rsp_xbar_demux_014_src0_startofpacket),                  //          .startofpacket
		.sink14_endofpacket   (rsp_xbar_demux_014_src0_endofpacket),                    //          .endofpacket
		.sink15_ready         (rsp_xbar_demux_015_src0_ready),                          //    sink15.ready
		.sink15_valid         (rsp_xbar_demux_015_src0_valid),                          //          .valid
		.sink15_channel       (rsp_xbar_demux_015_src0_channel),                        //          .channel
		.sink15_data          (rsp_xbar_demux_015_src0_data),                           //          .data
		.sink15_startofpacket (rsp_xbar_demux_015_src0_startofpacket),                  //          .startofpacket
		.sink15_endofpacket   (rsp_xbar_demux_015_src0_endofpacket),                    //          .endofpacket
		.sink16_ready         (rsp_xbar_demux_016_src0_ready),                          //    sink16.ready
		.sink16_valid         (rsp_xbar_demux_016_src0_valid),                          //          .valid
		.sink16_channel       (rsp_xbar_demux_016_src0_channel),                        //          .channel
		.sink16_data          (rsp_xbar_demux_016_src0_data),                           //          .data
		.sink16_startofpacket (rsp_xbar_demux_016_src0_startofpacket),                  //          .startofpacket
		.sink16_endofpacket   (rsp_xbar_demux_016_src0_endofpacket),                    //          .endofpacket
		.sink17_ready         (rsp_xbar_demux_017_src0_ready),                          //    sink17.ready
		.sink17_valid         (rsp_xbar_demux_017_src0_valid),                          //          .valid
		.sink17_channel       (rsp_xbar_demux_017_src0_channel),                        //          .channel
		.sink17_data          (rsp_xbar_demux_017_src0_data),                           //          .data
		.sink17_startofpacket (rsp_xbar_demux_017_src0_startofpacket),                  //          .startofpacket
		.sink17_endofpacket   (rsp_xbar_demux_017_src0_endofpacket),                    //          .endofpacket
		.sink18_ready         (rsp_xbar_demux_018_src0_ready),                          //    sink18.ready
		.sink18_valid         (rsp_xbar_demux_018_src0_valid),                          //          .valid
		.sink18_channel       (rsp_xbar_demux_018_src0_channel),                        //          .channel
		.sink18_data          (rsp_xbar_demux_018_src0_data),                           //          .data
		.sink18_startofpacket (rsp_xbar_demux_018_src0_startofpacket),                  //          .startofpacket
		.sink18_endofpacket   (rsp_xbar_demux_018_src0_endofpacket),                    //          .endofpacket
		.sink19_ready         (rsp_xbar_demux_019_src0_ready),                          //    sink19.ready
		.sink19_valid         (rsp_xbar_demux_019_src0_valid),                          //          .valid
		.sink19_channel       (rsp_xbar_demux_019_src0_channel),                        //          .channel
		.sink19_data          (rsp_xbar_demux_019_src0_data),                           //          .data
		.sink19_startofpacket (rsp_xbar_demux_019_src0_startofpacket),                  //          .startofpacket
		.sink19_endofpacket   (rsp_xbar_demux_019_src0_endofpacket),                    //          .endofpacket
		.sink20_ready         (rsp_xbar_demux_020_src0_ready),                          //    sink20.ready
		.sink20_valid         (rsp_xbar_demux_020_src0_valid),                          //          .valid
		.sink20_channel       (rsp_xbar_demux_020_src0_channel),                        //          .channel
		.sink20_data          (rsp_xbar_demux_020_src0_data),                           //          .data
		.sink20_startofpacket (rsp_xbar_demux_020_src0_startofpacket),                  //          .startofpacket
		.sink20_endofpacket   (rsp_xbar_demux_020_src0_endofpacket),                    //          .endofpacket
		.sink21_ready         (rsp_xbar_demux_021_src0_ready),                          //    sink21.ready
		.sink21_valid         (rsp_xbar_demux_021_src0_valid),                          //          .valid
		.sink21_channel       (rsp_xbar_demux_021_src0_channel),                        //          .channel
		.sink21_data          (rsp_xbar_demux_021_src0_data),                           //          .data
		.sink21_startofpacket (rsp_xbar_demux_021_src0_startofpacket),                  //          .startofpacket
		.sink21_endofpacket   (rsp_xbar_demux_021_src0_endofpacket),                    //          .endofpacket
		.sink22_ready         (rsp_xbar_demux_022_src0_ready),                          //    sink22.ready
		.sink22_valid         (rsp_xbar_demux_022_src0_valid),                          //          .valid
		.sink22_channel       (rsp_xbar_demux_022_src0_channel),                        //          .channel
		.sink22_data          (rsp_xbar_demux_022_src0_data),                           //          .data
		.sink22_startofpacket (rsp_xbar_demux_022_src0_startofpacket),                  //          .startofpacket
		.sink22_endofpacket   (rsp_xbar_demux_022_src0_endofpacket),                    //          .endofpacket
		.sink23_ready         (rsp_xbar_demux_023_src0_ready),                          //    sink23.ready
		.sink23_valid         (rsp_xbar_demux_023_src0_valid),                          //          .valid
		.sink23_channel       (rsp_xbar_demux_023_src0_channel),                        //          .channel
		.sink23_data          (rsp_xbar_demux_023_src0_data),                           //          .data
		.sink23_startofpacket (rsp_xbar_demux_023_src0_startofpacket),                  //          .startofpacket
		.sink23_endofpacket   (rsp_xbar_demux_023_src0_endofpacket),                    //          .endofpacket
		.sink24_ready         (rsp_xbar_demux_024_src0_ready),                          //    sink24.ready
		.sink24_valid         (rsp_xbar_demux_024_src0_valid),                          //          .valid
		.sink24_channel       (rsp_xbar_demux_024_src0_channel),                        //          .channel
		.sink24_data          (rsp_xbar_demux_024_src0_data),                           //          .data
		.sink24_startofpacket (rsp_xbar_demux_024_src0_startofpacket),                  //          .startofpacket
		.sink24_endofpacket   (rsp_xbar_demux_024_src0_endofpacket),                    //          .endofpacket
		.sink25_ready         (rsp_xbar_demux_025_src0_ready),                          //    sink25.ready
		.sink25_valid         (rsp_xbar_demux_025_src0_valid),                          //          .valid
		.sink25_channel       (rsp_xbar_demux_025_src0_channel),                        //          .channel
		.sink25_data          (rsp_xbar_demux_025_src0_data),                           //          .data
		.sink25_startofpacket (rsp_xbar_demux_025_src0_startofpacket),                  //          .startofpacket
		.sink25_endofpacket   (rsp_xbar_demux_025_src0_endofpacket),                    //          .endofpacket
		.sink26_ready         (rsp_xbar_demux_026_src0_ready),                          //    sink26.ready
		.sink26_valid         (rsp_xbar_demux_026_src0_valid),                          //          .valid
		.sink26_channel       (rsp_xbar_demux_026_src0_channel),                        //          .channel
		.sink26_data          (rsp_xbar_demux_026_src0_data),                           //          .data
		.sink26_startofpacket (rsp_xbar_demux_026_src0_startofpacket),                  //          .startofpacket
		.sink26_endofpacket   (rsp_xbar_demux_026_src0_endofpacket),                    //          .endofpacket
		.sink27_ready         (rsp_xbar_demux_027_src0_ready),                          //    sink27.ready
		.sink27_valid         (rsp_xbar_demux_027_src0_valid),                          //          .valid
		.sink27_channel       (rsp_xbar_demux_027_src0_channel),                        //          .channel
		.sink27_data          (rsp_xbar_demux_027_src0_data),                           //          .data
		.sink27_startofpacket (rsp_xbar_demux_027_src0_startofpacket),                  //          .startofpacket
		.sink27_endofpacket   (rsp_xbar_demux_027_src0_endofpacket),                    //          .endofpacket
		.sink28_ready         (rsp_xbar_demux_028_src0_ready),                          //    sink28.ready
		.sink28_valid         (rsp_xbar_demux_028_src0_valid),                          //          .valid
		.sink28_channel       (rsp_xbar_demux_028_src0_channel),                        //          .channel
		.sink28_data          (rsp_xbar_demux_028_src0_data),                           //          .data
		.sink28_startofpacket (rsp_xbar_demux_028_src0_startofpacket),                  //          .startofpacket
		.sink28_endofpacket   (rsp_xbar_demux_028_src0_endofpacket),                    //          .endofpacket
		.sink29_ready         (rsp_xbar_demux_029_src0_ready),                          //    sink29.ready
		.sink29_valid         (rsp_xbar_demux_029_src0_valid),                          //          .valid
		.sink29_channel       (rsp_xbar_demux_029_src0_channel),                        //          .channel
		.sink29_data          (rsp_xbar_demux_029_src0_data),                           //          .data
		.sink29_startofpacket (rsp_xbar_demux_029_src0_startofpacket),                  //          .startofpacket
		.sink29_endofpacket   (rsp_xbar_demux_029_src0_endofpacket),                    //          .endofpacket
		.sink30_ready         (rsp_xbar_demux_030_src0_ready),                          //    sink30.ready
		.sink30_valid         (rsp_xbar_demux_030_src0_valid),                          //          .valid
		.sink30_channel       (rsp_xbar_demux_030_src0_channel),                        //          .channel
		.sink30_data          (rsp_xbar_demux_030_src0_data),                           //          .data
		.sink30_startofpacket (rsp_xbar_demux_030_src0_startofpacket),                  //          .startofpacket
		.sink30_endofpacket   (rsp_xbar_demux_030_src0_endofpacket),                    //          .endofpacket
		.sink31_ready         (rsp_xbar_demux_031_src0_ready),                          //    sink31.ready
		.sink31_valid         (rsp_xbar_demux_031_src0_valid),                          //          .valid
		.sink31_channel       (rsp_xbar_demux_031_src0_channel),                        //          .channel
		.sink31_data          (rsp_xbar_demux_031_src0_data),                           //          .data
		.sink31_startofpacket (rsp_xbar_demux_031_src0_startofpacket),                  //          .startofpacket
		.sink31_endofpacket   (rsp_xbar_demux_031_src0_endofpacket),                    //          .endofpacket
		.sink32_ready         (rsp_xbar_demux_032_src0_ready),                          //    sink32.ready
		.sink32_valid         (rsp_xbar_demux_032_src0_valid),                          //          .valid
		.sink32_channel       (rsp_xbar_demux_032_src0_channel),                        //          .channel
		.sink32_data          (rsp_xbar_demux_032_src0_data),                           //          .data
		.sink32_startofpacket (rsp_xbar_demux_032_src0_startofpacket),                  //          .startofpacket
		.sink32_endofpacket   (rsp_xbar_demux_032_src0_endofpacket),                    //          .endofpacket
		.sink33_ready         (rsp_xbar_demux_033_src0_ready),                          //    sink33.ready
		.sink33_valid         (rsp_xbar_demux_033_src0_valid),                          //          .valid
		.sink33_channel       (rsp_xbar_demux_033_src0_channel),                        //          .channel
		.sink33_data          (rsp_xbar_demux_033_src0_data),                           //          .data
		.sink33_startofpacket (rsp_xbar_demux_033_src0_startofpacket),                  //          .startofpacket
		.sink33_endofpacket   (rsp_xbar_demux_033_src0_endofpacket),                    //          .endofpacket
		.sink34_ready         (rsp_xbar_demux_034_src0_ready),                          //    sink34.ready
		.sink34_valid         (rsp_xbar_demux_034_src0_valid),                          //          .valid
		.sink34_channel       (rsp_xbar_demux_034_src0_channel),                        //          .channel
		.sink34_data          (rsp_xbar_demux_034_src0_data),                           //          .data
		.sink34_startofpacket (rsp_xbar_demux_034_src0_startofpacket),                  //          .startofpacket
		.sink34_endofpacket   (rsp_xbar_demux_034_src0_endofpacket),                    //          .endofpacket
		.sink35_ready         (rsp_xbar_demux_035_src0_ready),                          //    sink35.ready
		.sink35_valid         (rsp_xbar_demux_035_src0_valid),                          //          .valid
		.sink35_channel       (rsp_xbar_demux_035_src0_channel),                        //          .channel
		.sink35_data          (rsp_xbar_demux_035_src0_data),                           //          .data
		.sink35_startofpacket (rsp_xbar_demux_035_src0_startofpacket),                  //          .startofpacket
		.sink35_endofpacket   (rsp_xbar_demux_035_src0_endofpacket),                    //          .endofpacket
		.sink36_ready         (crosser_001_out_ready),                                  //    sink36.ready
		.sink36_valid         (crosser_001_out_valid),                                  //          .valid
		.sink36_channel       (crosser_001_out_channel),                                //          .channel
		.sink36_data          (crosser_001_out_data),                                   //          .data
		.sink36_startofpacket (crosser_001_out_startofpacket),                          //          .startofpacket
		.sink36_endofpacket   (crosser_001_out_endofpacket)                             //          .endofpacket
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (91),
		.BITS_PER_SYMBOL     (91),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (37),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser (
		.in_clk            (pll_c2_clk),                                             //        in_clk.clk
		.in_reset          (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), //  in_clk_reset.reset
		.out_clk           (clk_50_clk_clk),                                         //       out_clk.clk
		.out_reset         (pll_inclk_interface_reset_reset_bridge_in_reset_reset),  // out_clk_reset.reset
		.in_ready          (cmd_xbar_demux_src36_ready),                             //            in.ready
		.in_valid          (cmd_xbar_demux_src36_valid),                             //              .valid
		.in_startofpacket  (cmd_xbar_demux_src36_startofpacket),                     //              .startofpacket
		.in_endofpacket    (cmd_xbar_demux_src36_endofpacket),                       //              .endofpacket
		.in_channel        (cmd_xbar_demux_src36_channel),                           //              .channel
		.in_data           (cmd_xbar_demux_src36_data),                              //              .data
		.out_ready         (crosser_out_ready),                                      //           out.ready
		.out_valid         (crosser_out_valid),                                      //              .valid
		.out_startofpacket (crosser_out_startofpacket),                              //              .startofpacket
		.out_endofpacket   (crosser_out_endofpacket),                                //              .endofpacket
		.out_channel       (crosser_out_channel),                                    //              .channel
		.out_data          (crosser_out_data),                                       //              .data
		.in_empty          (1'b0),                                                   //   (terminated)
		.in_error          (1'b0),                                                   //   (terminated)
		.out_empty         (),                                                       //   (terminated)
		.out_error         ()                                                        //   (terminated)
	);

	altera_avalon_st_handshake_clock_crosser #(
		.DATA_WIDTH          (91),
		.BITS_PER_SYMBOL     (91),
		.USE_PACKETS         (1),
		.USE_CHANNEL         (1),
		.CHANNEL_WIDTH       (37),
		.USE_ERROR           (0),
		.ERROR_WIDTH         (1),
		.VALID_SYNC_DEPTH    (2),
		.READY_SYNC_DEPTH    (2),
		.USE_OUTPUT_PIPELINE (0)
	) crosser_001 (
		.in_clk            (clk_50_clk_clk),                                         //        in_clk.clk
		.in_reset          (pll_inclk_interface_reset_reset_bridge_in_reset_reset),  //  in_clk_reset.reset
		.out_clk           (pll_c2_clk),                                             //       out_clk.clk
		.out_reset         (clock_crossing_io_m0_reset_reset_bridge_in_reset_reset), // out_clk_reset.reset
		.in_ready          (rsp_xbar_demux_036_src0_ready),                          //            in.ready
		.in_valid          (rsp_xbar_demux_036_src0_valid),                          //              .valid
		.in_startofpacket  (rsp_xbar_demux_036_src0_startofpacket),                  //              .startofpacket
		.in_endofpacket    (rsp_xbar_demux_036_src0_endofpacket),                    //              .endofpacket
		.in_channel        (rsp_xbar_demux_036_src0_channel),                        //              .channel
		.in_data           (rsp_xbar_demux_036_src0_data),                           //              .data
		.out_ready         (crosser_001_out_ready),                                  //           out.ready
		.out_valid         (crosser_001_out_valid),                                  //              .valid
		.out_startofpacket (crosser_001_out_startofpacket),                          //              .startofpacket
		.out_endofpacket   (crosser_001_out_endofpacket),                            //              .endofpacket
		.out_channel       (crosser_001_out_channel),                                //              .channel
		.out_data          (crosser_001_out_data),                                   //              .data
		.in_empty          (1'b0),                                                   //   (terminated)
		.in_error          (1'b0),                                                   //   (terminated)
		.out_empty         (),                                                       //   (terminated)
		.out_error         ()                                                        //   (terminated)
	);

endmodule
