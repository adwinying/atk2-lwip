
		TOPPERS/ATK2-SC1
        ＜Nios2プロセッサ依存部マニュアル＞

このドキュメントはNios2プロセッサ依存部の情報を記述したものである．

----------------------------------------------------------------------
TOPPERS ATK2
    Toyohashi Open Platform for Embedded Real-Time Systems
    Automotive Kernel Version 2

Copyright (C) 2011-2015 by Center for Embedded Computing Systems
            Graduate School of Information Science, Nagoya Univ., JAPAN
Copyright (C) 2011-2015 by FUJI SOFT INCORPORATED, JAPAN
Copyright (C) 2011-2013 by Spansion LLC, USA
Copyright (C) 2011-2015 by NEC Communication Systems, Ltd., JAPAN
Copyright (C) 2011-2015 by Panasonic Advanced Technology Development Co., Ltd., JAPAN
Copyright (C) 2011-2014 by Renesas Electronics Corporation, JAPAN
Copyright (C) 2011-2015 by Sunny Giken Inc., JAPAN
Copyright (C) 2011-2015 by TOSHIBA CORPORATION, JAPAN
Copyright (C) 2011-2015 by Witz Corporation
Copyright (C) 2014-2015 by AISIN COMCRUISE Co., Ltd., JAPAN
Copyright (C) 2014-2015 by eSOL Co.,Ltd., JAPAN
Copyright (C) 2014-2015 by SCSK Corporation, JAPAN

上記著作権者は，以下の (1)〜(3)の条件を満たす場合に限り，本ドキュメ
ント（本ドキュメントを改変したものを含む．以下同じ）を使用・複製・改
変・再配布（以下，利用と呼ぶ）することを無償で許諾する．
(1) 本ドキュメントを利用する場合には，上記の著作権表示，この利用条件
    および下記の無保証規定が，そのままの形でドキュメント中に含まれて
    いること．
(2) 本ドキュメントを改変する場合には，ドキュメントを改変した旨の記述
    を，改変後のドキュメント中に含めること．ただし，改変後のドキュメ
    ントが，TOPPERSプロジェクト指定の開発成果物である場合には，この限
    りではない．
(3) 本ドキュメントの利用により直接的または間接的に生じるいかなる損害
    からも，上記著作権者およびTOPPERSプロジェクトを免責すること．また，
    本ドキュメントのユーザまたはエンドユーザからのいかなる理由に基づ
    く請求からも，上記著作権者およびTOPPERSプロジェクトを免責すること．

本ドキュメントは，AUTOSAR（AUTomotive Open System ARchitecture）仕様
に基づいている．上記の許諾は，AUTOSARの知的財産権を許諾するものではな
い．AUTOSARは，AUTOSAR仕様に基づいたソフトウェアを商用目的で利用する
者に対して，AUTOSARパートナーになることを求めている．

本ドキュメントは，無保証で提供されているものである．上記著作権者およ
びTOPPERSプロジェクトは，本ドキュメントに関して，特定の使用目的に対す
る適合性も含めて，いかなる保証も行わない．また，本ドキュメントの利用
により直接的または間接的に生じたいかなる損害に関しても，その責任を負
わない．

$Id: prc_user.txt 1801 2015-03-27 06:34:43Z t_ishikawa $
----------------------------------------------------------------------

○概要

Nios2プロセッサ依存部（以下，Nios2依存部）は，Altera社のNios2プロセッ
サ をターゲットとしている．サポートしている NiosII エンベデッド・デザ
イン・スイート のバージョンは，11.0 である．これ以降のバージョンに関し
ては，プロセッサやコンパイラに大きな変更がなければ，動作させることが可
能である．

Nios2は，ソフトコアプロセッサであるため，コアの構成や周辺回路の構成や
アドレス等を変更することが可能である．Nios2依存部では，プロセッサコア
とタイマ（Avalon Timer）とUARTをサポートしている．アドレス等の設定に関
しては，ターゲット依存部で設定する．

○開発環境

カーネルのコンパイルは，NiosII エンベデッド・デザイン・スイート に付属
している，GCC を用いる．動作確認を行なったバージョンは，4.1.2 である．

○コア構成

ATK2-SC1は，Nios2 コアの標準の構成で動作する．その他の追加命令（divや
multi）は使用していない．これらの追加命令を使用する場合は，ターゲット
依存部で適切にコンパイルオプションを設定する必要がある．なお，FPU MMU
MPU はサポートしていない．

キャッシュに関しては，Dキャッシュは，サポートしない．

割込み応答を高速化するため，Vectored Interrupt Controller（VIC）を使用
する．

○周辺回路

ATK2-SC1を動作させるためには，周辺回路として，VIC，UART，タイマ（Avalon
Timer）をそれぞれ1個ずつ必要となる．また，システム全体でシステムバージ
ョン回路を1個が必要となる．Avalon Timerの設定は，PresetsはCustom とし，
Registers は全て有効とする．また，それぞれ割込みを使用するように設定す
る．システムバージョン回路は，Nios2には含まれておらず，本ディレクトリに
ある sysver を用いること．

○Trap例外

Trap例外のハンドラは，prc_support.S で，trap_handler として用意してい
る．ディフォルトでは，単にリターンする．

○カーネル管理内/外の割込み

Nios2依存部では，カーネル管理外の割込みはサポートしない．

○割込み優先度

指定可能な割込み優先度としては，1 から 7 までの値を設定可能である．

○割込み属性

サポートしている割込み属性はない．

○未登録の割込み

未登録の割込みが発生した場合は，prc_config.c で定義されている，
default_int_handler() を呼び出す．default_int_handlerは，標準のものを
ターゲット依存部で用意して，未定義の割込み発生メッセージを出力した後，
ASSERT(0)をを呼び出す．

○デバイスアクセス関数

Nios2では，メモリ空間とI/O空間を区別していないが，データキャッシュを有
効とした場合，キャッシュをスルーしてデバイスにアクセスする命令を用いて
デバイスをアクセスする必要がある．そのため，Nios2依存部では，キャッシ
ュをスルーしてアクセスするI/O空間アクセス関数を用意している．

	sil_rew_iop
	sil_wrw_iop

○ターゲット依存部開発者向けの情報

ターゲット依存部では，ペリフェラルのベースアドレスや割込み番号，キャッ
シュ設定等を設定する必要がある．

○割込みコントローラ
ATK2のNiosIIターゲットでは割込みコントローラにVIC(Vectored Interrupt Controller)を使用する

・VIC
    ・レジスタ
	    0 .. 31	:INT_CONFIG0 ... INT_CONFIG31	RW : 各割込みの設定．優先度，NMIフラグ，レジスタセット番号
    	32	: INT_ENABLE			: RW	: 割込み要因ごとの許可・禁止
    	33	: INT_ENABLE_SET		: W		: INT_ENABLEのセット
    	34	: INT_ENALBE_CLR		: W		: INT_ENABLEのクリア
    	35	: INT_PENDING			: R		: 保留中の割込み
    	36	: INT_RAW_STATUS		: R		: マスク前のハードウェア割込み
    	37	: SW_INTERRUPT			: RW	: SW割込み
    	38	: SW_INTERRUPT_SET		: W		: SW_INTERRUPTのセット
    	39	: SW_INTERRUPT_CLR		: W		: SW_INTERRUPTのクリア
    	40	: VIC_CONFIG			: RW	: ベクタサイズ，カスケード接続の有無の設定
    	41	: VIC_STATUS			: R		: 現在発生している最高優先度の割込み番号，保留中割込みの有無
    	42	: VEC_TBC_BASE			: RW	: ベクタテーブルのベースアドレス
    	43	: VEC_TBL_ADDR			: R		: 現在発生している最高優先度の割込みのベクタアドレス
    ・注意点
        VICはCPUとは独立して動作するため，全割込み禁止(status.PIE=0)中に発生した
        割込みの情報も提供される．
・status.IL
    受け付けた割込みの優先度値が提供される．有効な優先度値は0から63までで，値が
    小さいほど優先度が低い．割込みが受け付けられると自動的にその割込みの優先度の
    値に設定され，status.IL以下の優先度値の割込みは受け付けられない．割込み発生
    前のstatusレジスタはestatusにコピーされており，割込み終了時にeret命令を実行
    すると，estatusがstatusに戻されるため，status.ILも割込み発生前に戻る．
・status.PIE
    status.PIEビットが0に設定されると全ての割込みが禁止される．割込みが受け付け
    られると，status.PIEビットは自動的に0に設定される．
    VIC+シャドウレジスタが実装されたHWの場合，config.ANIで割込み受付時の
    status.PIEの挙動を設定できる．
・ienable 	: 使用不可
・ipending 	: 使用不可

○C1ISRの扱い
・C1ISRにはユーザによって以下の処理が記述されるべきである．
    ・C1ISRで使用するレジスタの内容を退避
    ・C1ISRが実行中であることを判別するための情報を保存する
        ・現在の実装ではcallevel_stat
    ・退避したレジスタの復帰
    ・eret命令でC1ISRを終了する

○CPU例外要因情報取得
・CPU例外発生した場合，ユーザは，プロテクションからCPU例外情報を取得で
  き，取得できるのは，CPU例外発生時の以下の情報がある．
    ・CPU例外要因番号(変数：nios2_cpu_exp_no)
    ・プログラムカウンタ(変数：nios2_cpu_exp_pc)
    ・CPU例外発生箇所（アドレス）(変数：nios2_cpu_exp_bad_addr)
    ・スタックポインタ(変数：nios2_cpu_exp_sp)
        ・更に，CPU例外発生時に各レジスタはスタックに保存しているので，
          nios2_cpu_exp_spを使って保存してあるレジスタの値を取得するこ
          とができる．保存してあるレジスタとアドレスの情報はアセンブリ
          コードを参照する．
・しかし，プロテクションフック無効の場合，上記のCPU例外要因保持用変数が
  定義されないため，使用しないでください(使用した場合，コンパイルエラー
  となる)．


○バージョン履歴

2015/03/30
・Platform_Types.h で，stdint.h をincludeするように修正
・タイマカウンタにセットする値を実際のティック値-1に修正
・BOOT_ROM有効時のスタートアップルーチンを修正

2014/09/30
・ディスパッチャのアイドルループにおいて，callevelを変更しないように
　修正

2014/01/23
・Makefile.prc
  ・ハードウェアカウンタ対応に伴うシステムタイマ設定追加

2014/01/10
・静的APIファイルを削除

2013/06/28
・prc_support.S prc_def.csv prc_offset.tf 
  ・割込みのエントリでの多重割込み時のスタックのチェック方法を スタック
    残量チェック方式 に変更．

2013/03/29
	・MISRAルール対応により，一部ソースコードを修正した

	・その他の修正．
		- 判明したソースコード上の誤記を修正した

2013/01/31
	一般向けのリリース

以上．
